ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	PWM_1_initVar
  19              		.bss
  20              		.type	PWM_1_initVar, %object
  21              		.size	PWM_1_initVar, 1
  22              	PWM_1_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.PWM_1_Start,"ax",%progbits
  25              		.align	2
  26              		.global	PWM_1_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	PWM_1_Start, %function
  30              	PWM_1_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_1.c"
   1:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC5/PWM_1.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/PWM_1.c **** *
   5:.\Generated_Source\PSoC5/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_1.c **** *
  15:.\Generated_Source\PSoC5/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_1.c **** *
  17:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_1.c **** 
  24:.\Generated_Source\PSoC5/PWM_1.c **** #include "PWM_1.h"
  25:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 2


  26:.\Generated_Source\PSoC5/PWM_1.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/PWM_1.c **** 
  32:.\Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  33:.\Generated_Source\PSoC5/PWM_1.c **** 
  34:.\Generated_Source\PSoC5/PWM_1.c **** 
  35:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Start
  37:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/PWM_1.c **** *
  39:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  40:.\Generated_Source\PSoC5/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/PWM_1.c **** *
  44:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  45:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  46:.\Generated_Source\PSoC5/PWM_1.c **** *
  47:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
  48:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  49:.\Generated_Source\PSoC5/PWM_1.c **** *
  50:.\Generated_Source\PSoC5/PWM_1.c **** * Global variables:
  51:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/PWM_1.c **** *
  54:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Start(void) 
  56:.\Generated_Source\PSoC5/PWM_1.c **** {
  33              		.loc 1 56 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/PWM_1.c ****     if(PWM_1_initVar == 0u)
  43              		.loc 1 58 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC5/PWM_1.c ****     {
  60:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_Init();
  48              		.loc 1 60 0
  49 000c FFF7FEFF 		bl	PWM_1_Init
  61:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
  50              		.loc 1 61 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 3


  54              	.L2:
  62:.\Generated_Source\PSoC5/PWM_1.c ****     }
  63:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_Enable();
  55              		.loc 1 63 0
  56 0016 FFF7FEFF 		bl	PWM_1_Enable
  64:.\Generated_Source\PSoC5/PWM_1.c **** 
  65:.\Generated_Source\PSoC5/PWM_1.c **** }
  57              		.loc 1 65 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	PWM_1_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	PWM_1_Start, .-PWM_1_Start
  66              		.section	.text.PWM_1_Init,"ax",%progbits
  67              		.align	2
  68              		.global	PWM_1_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	PWM_1_Init, %function
  72              	PWM_1_Init:
  73              	.LFB1:
  66:.\Generated_Source\PSoC5/PWM_1.c **** 
  67:.\Generated_Source\PSoC5/PWM_1.c **** 
  68:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Init
  70:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/PWM_1.c **** *
  72:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  73:.\Generated_Source\PSoC5/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_Start().
  76:.\Generated_Source\PSoC5/PWM_1.c **** *
  77:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  78:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  79:.\Generated_Source\PSoC5/PWM_1.c **** *
  80:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
  81:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  82:.\Generated_Source\PSoC5/PWM_1.c **** *
  83:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Init(void) 
  85:.\Generated_Source\PSoC5/PWM_1.c **** {
  74              		.loc 1 85 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 82B0     		sub	sp, sp, #8
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 4


  87:.\Generated_Source\PSoC5/PWM_1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
  89:.\Generated_Source\PSoC5/PWM_1.c **** 
  90:.\Generated_Source\PSoC5/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:.\Generated_Source\PSoC5/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/PWM_1.c **** 
  97:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
  86              		.loc 1 99 0
  87 0006 294A     		ldr	r2, .L6
  88 0008 284B     		ldr	r3, .L6
  89 000a 1B78     		ldrb	r3, [r3]
  90 000c DBB2     		uxtb	r3, r3
  91 000e 43F00203 		orr	r3, r3, #2
  92 0012 DBB2     		uxtb	r3, r3
  93 0014 1370     		strb	r3, [r2]
 100:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/PWM_1.c **** 
 104:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
  94              		.loc 1 104 0
  95 0016 264B     		ldr	r3, .L6+4
  96 0018 1B78     		ldrb	r3, [r3]
  97 001a DBB2     		uxtb	r3, r3
  98 001c 23F07003 		bic	r3, r3, #112
  99 0020 FB71     		strb	r3, [r7, #7]
 105:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 100              		.loc 1 105 0
 101 0022 234A     		ldr	r2, .L6+4
 102 0024 FB79     		ldrb	r3, [r7, #7]
 103 0026 43F01003 		orr	r3, r3, #16
 104 002a DBB2     		uxtb	r3, r3
 105 002c 1370     		strb	r3, [r2]
 106:.\Generated_Source\PSoC5/PWM_1.c **** 
 107:.\Generated_Source\PSoC5/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 106              		.loc 1 108 0
 107 002e 214A     		ldr	r2, .L6+8
 108 0030 204B     		ldr	r3, .L6+8
 109 0032 1B78     		ldrb	r3, [r3]
 110 0034 DBB2     		uxtb	r3, r3
 111 0036 23F03003 		bic	r3, r3, #48
 112 003a DBB2     		uxtb	r3, r3
 113 003c 1370     		strb	r3, [r2]
 109:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 114              		.loc 1 109 0
 115 003e 1D4A     		ldr	r2, .L6+8
 116 0040 1C4B     		ldr	r3, .L6+8
 117 0042 1B78     		ldrb	r3, [r3]
 118 0044 DBB2     		uxtb	r3, r3
 119 0046 43F03003 		orr	r3, r3, #48
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 5


 120 004a DBB2     		uxtb	r3, r3
 121 004c 1370     		strb	r3, [r2]
 110:.\Generated_Source\PSoC5/PWM_1.c **** 
 111:.\Generated_Source\PSoC5/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 122              		.loc 1 112 0
 123 004e 194A     		ldr	r2, .L6+8
 124 0050 184B     		ldr	r3, .L6+8
 125 0052 1B78     		ldrb	r3, [r3]
 126 0054 DBB2     		uxtb	r3, r3
 127 0056 23F00F03 		bic	r3, r3, #15
 128 005a DBB2     		uxtb	r3, r3
 129 005c 1370     		strb	r3, [r2]
 113:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 130              		.loc 1 113 0
 131 005e 154A     		ldr	r2, .L6+8
 132 0060 144B     		ldr	r3, .L6+8
 133 0062 1B78     		ldrb	r3, [r3]
 134 0064 DBB2     		uxtb	r3, r3
 135 0066 43F00F03 		orr	r3, r3, #15
 136 006a DBB2     		uxtb	r3, r3
 137 006c 1370     		strb	r3, [r2]
 114:.\Generated_Source\PSoC5/PWM_1.c **** 
 115:.\Generated_Source\PSoC5/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC5/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/PWM_1.c **** 
 123:.\Generated_Source\PSoC5/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:.\Generated_Source\PSoC5/PWM_1.c **** 
 133:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/PWM_1.c **** 
 136:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 138              		.loc 1 136 0
 139 006e 4FF6FF70 		movw	r0, #65535
 140 0072 FFF7FEFF 		bl	PWM_1_WritePeriod
 137:.\Generated_Source\PSoC5/PWM_1.c **** 
 138:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 141              		.loc 1 139 0
 142 0076 4FF40040 		mov	r0, #32768
 143 007a FFF7FEFF 		bl	PWM_1_WriteCompare
 140:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 141:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 6


 143:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/PWM_1.c **** 
 145:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 147:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/PWM_1.c **** 
 149:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/PWM_1.c **** 
 153:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 144              		.loc 1 154 0
 145 007e 0020     		movs	r0, #0
 146 0080 FFF7FEFF 		bl	PWM_1_SetInterruptMode
 155:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/PWM_1.c **** 
 157:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 147              		.loc 1 159 0
 148 0084 0C4A     		ldr	r2, .L6+12
 149 0086 0C4B     		ldr	r3, .L6+12
 150 0088 1B78     		ldrb	r3, [r3]
 151 008a DBB2     		uxtb	r3, r3
 152 008c 43F00103 		orr	r3, r3, #1
 153 0090 DBB2     		uxtb	r3, r3
 154 0092 1370     		strb	r3, [r2]
 160:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 155              		.loc 1 161 0
 156 0094 094A     		ldr	r2, .L6+16
 157 0096 094B     		ldr	r3, .L6+16
 158 0098 1B78     		ldrb	r3, [r3]
 159 009a DBB2     		uxtb	r3, r3
 160 009c 43F00103 		orr	r3, r3, #1
 161 00a0 DBB2     		uxtb	r3, r3
 162 00a2 1370     		strb	r3, [r2]
 162:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 163:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:.\Generated_Source\PSoC5/PWM_1.c **** 
 165:.\Generated_Source\PSoC5/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/PWM_1.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/PWM_1.c **** 
 171:.\Generated_Source\PSoC5/PWM_1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 173:.\Generated_Source\PSoC5/PWM_1.c **** 
 174:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/PWM_1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_ClearFIFO();
 177:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/PWM_1.c **** }
 163              		.loc 1 179 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 7


 164 00a4 0837     		adds	r7, r7, #8
 165              		.cfi_def_cfa_offset 8
 166 00a6 BD46     		mov	sp, r7
 167              		.cfi_def_cfa_register 13
 168              		@ sp needed
 169 00a8 80BD     		pop	{r7, pc}
 170              	.L7:
 171 00aa 00BF     		.align	2
 172              	.L6:
 173 00ac 004F0040 		.word	1073762048
 174 00b0 024F0040 		.word	1073762050
 175 00b4 0B4F0040 		.word	1073762059
 176 00b8 A3430040 		.word	1073759139
 177 00bc 014F0040 		.word	1073762049
 178              		.cfi_endproc
 179              	.LFE1:
 180              		.size	PWM_1_Init, .-PWM_1_Init
 181              		.section	.text.PWM_1_Enable,"ax",%progbits
 182              		.align	2
 183              		.global	PWM_1_Enable
 184              		.thumb
 185              		.thumb_func
 186              		.type	PWM_1_Enable, %function
 187              	PWM_1_Enable:
 188              	.LFB2:
 180:.\Generated_Source\PSoC5/PWM_1.c **** 
 181:.\Generated_Source\PSoC5/PWM_1.c **** 
 182:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Enable
 184:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/PWM_1.c **** *
 186:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 187:.\Generated_Source\PSoC5/PWM_1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/PWM_1.c **** *
 189:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 190:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 191:.\Generated_Source\PSoC5/PWM_1.c **** *
 192:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 193:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 194:.\Generated_Source\PSoC5/PWM_1.c **** *
 195:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/PWM_1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/PWM_1.c **** *
 198:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Enable(void) 
 200:.\Generated_Source\PSoC5/PWM_1.c **** {
 189              		.loc 1 200 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 80B4     		push	{r7}
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 7, -4
 197 0002 00AF     		add	r7, sp, #0
 198              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 8


 202:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 199              		.loc 1 203 0
 200 0004 0D4A     		ldr	r2, .L9
 201 0006 0D4B     		ldr	r3, .L9
 202 0008 1B78     		ldrb	r3, [r3]
 203 000a DBB2     		uxtb	r3, r3
 204 000c 43F00103 		orr	r3, r3, #1
 205 0010 DBB2     		uxtb	r3, r3
 206 0012 1370     		strb	r3, [r2]
 204:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 207              		.loc 1 204 0
 208 0014 0A4A     		ldr	r2, .L9+4
 209 0016 0A4B     		ldr	r3, .L9+4
 210 0018 1B78     		ldrb	r3, [r3]
 211 001a DBB2     		uxtb	r3, r3
 212 001c 43F00103 		orr	r3, r3, #1
 213 0020 DBB2     		uxtb	r3, r3
 214 0022 1370     		strb	r3, [r2]
 205:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/PWM_1.c **** 
 207:.\Generated_Source\PSoC5/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
 215              		.loc 1 209 0
 216 0024 074A     		ldr	r2, .L9+8
 217 0026 074B     		ldr	r3, .L9+8
 218 0028 1B78     		ldrb	r3, [r3]
 219 002a DBB2     		uxtb	r3, r3
 220 002c 43F00103 		orr	r3, r3, #1
 221 0030 DBB2     		uxtb	r3, r3
 222 0032 1370     		strb	r3, [r2]
 210:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/PWM_1.c **** }
 223              		.loc 1 211 0
 224 0034 BD46     		mov	sp, r7
 225              		.cfi_def_cfa_register 13
 226              		@ sp needed
 227 0036 5DF8047B 		ldr	r7, [sp], #4
 228              		.cfi_restore 7
 229              		.cfi_def_cfa_offset 0
 230 003a 7047     		bx	lr
 231              	.L10:
 232              		.align	2
 233              	.L9:
 234 003c A3430040 		.word	1073759139
 235 0040 B3430040 		.word	1073759155
 236 0044 004F0040 		.word	1073762048
 237              		.cfi_endproc
 238              	.LFE2:
 239              		.size	PWM_1_Enable, .-PWM_1_Enable
 240              		.section	.text.PWM_1_Stop,"ax",%progbits
 241              		.align	2
 242              		.global	PWM_1_Stop
 243              		.thumb
 244              		.thumb_func
 245              		.type	PWM_1_Stop, %function
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 9


 246              	PWM_1_Stop:
 247              	.LFB3:
 212:.\Generated_Source\PSoC5/PWM_1.c **** 
 213:.\Generated_Source\PSoC5/PWM_1.c **** 
 214:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Stop
 216:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/PWM_1.c **** *
 218:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 219:.\Generated_Source\PSoC5/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/PWM_1.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/PWM_1.c **** *
 222:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 223:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 224:.\Generated_Source\PSoC5/PWM_1.c **** *
 225:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 226:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 227:.\Generated_Source\PSoC5/PWM_1.c **** *
 228:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/PWM_1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/PWM_1.c **** *
 232:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Stop(void) 
 234:.\Generated_Source\PSoC5/PWM_1.c **** {
 248              		.loc 1 234 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253 0000 80B4     		push	{r7}
 254              		.cfi_def_cfa_offset 4
 255              		.cfi_offset 7, -4
 256 0002 00AF     		add	r7, sp, #0
 257              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
 258              		.loc 1 236 0
 259 0004 0D4A     		ldr	r2, .L12
 260 0006 0D4B     		ldr	r3, .L12
 261 0008 1B78     		ldrb	r3, [r3]
 262 000a DBB2     		uxtb	r3, r3
 263 000c 23F00103 		bic	r3, r3, #1
 264 0010 DBB2     		uxtb	r3, r3
 265 0012 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/PWM_1.c **** 
 239:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 266              		.loc 1 241 0
 267 0014 0A4A     		ldr	r2, .L12+4
 268 0016 0A4B     		ldr	r3, .L12+4
 269 0018 1B78     		ldrb	r3, [r3]
 270 001a DBB2     		uxtb	r3, r3
 271 001c 23F00103 		bic	r3, r3, #1
 272 0020 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 10


 273 0022 1370     		strb	r3, [r2]
 242:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 274              		.loc 1 242 0
 275 0024 074A     		ldr	r2, .L12+8
 276 0026 074B     		ldr	r3, .L12+8
 277 0028 1B78     		ldrb	r3, [r3]
 278 002a DBB2     		uxtb	r3, r3
 279 002c 23F00103 		bic	r3, r3, #1
 280 0030 DBB2     		uxtb	r3, r3
 281 0032 1370     		strb	r3, [r2]
 243:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/PWM_1.c **** }
 282              		.loc 1 244 0
 283 0034 BD46     		mov	sp, r7
 284              		.cfi_def_cfa_register 13
 285              		@ sp needed
 286 0036 5DF8047B 		ldr	r7, [sp], #4
 287              		.cfi_restore 7
 288              		.cfi_def_cfa_offset 0
 289 003a 7047     		bx	lr
 290              	.L13:
 291              		.align	2
 292              	.L12:
 293 003c 004F0040 		.word	1073762048
 294 0040 A3430040 		.word	1073759139
 295 0044 B3430040 		.word	1073759155
 296              		.cfi_endproc
 297              	.LFE3:
 298              		.size	PWM_1_Stop, .-PWM_1_Stop
 299              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 300              		.align	2
 301              		.global	PWM_1_WritePeriod
 302              		.thumb
 303              		.thumb_func
 304              		.type	PWM_1_WritePeriod, %function
 305              	PWM_1_WritePeriod:
 306              	.LFB4:
 245:.\Generated_Source\PSoC5/PWM_1.c **** 
 246:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:.\Generated_Source\PSoC5/PWM_1.c **** 
 249:.\Generated_Source\PSoC5/PWM_1.c **** 
 250:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/PWM_1.c ****         *
 254:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 255:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/PWM_1.c ****         *
 258:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/PWM_1.c ****         *
 262:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 263:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 264:.\Generated_Source\PSoC5/PWM_1.c ****         *
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 11


 265:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/PWM_1.c ****         {
 268:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/PWM_1.c **** 
 270:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 273:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/PWM_1.c **** 
 276:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/PWM_1.c **** 
 279:.\Generated_Source\PSoC5/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:.\Generated_Source\PSoC5/PWM_1.c **** 
 281:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:.\Generated_Source\PSoC5/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 285:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/PWM_1.c **** 
 288:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC5/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 292:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/PWM_1.c **** 
 295:.\Generated_Source\PSoC5/PWM_1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/PWM_1.c **** 
 300:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 301:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/PWM_1.c ****         }
 304:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:.\Generated_Source\PSoC5/PWM_1.c **** 
 306:.\Generated_Source\PSoC5/PWM_1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/PWM_1.c **** 
 308:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:.\Generated_Source\PSoC5/PWM_1.c **** 
 310:.\Generated_Source\PSoC5/PWM_1.c **** 
 311:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/PWM_1.c ****         *
 315:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 316:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/PWM_1.c ****         *
 318:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/PWM_1.c ****         *
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 12


 322:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 323:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 324:.\Generated_Source\PSoC5/PWM_1.c ****         *
 325:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/PWM_1.c ****         {
 328:.\Generated_Source\PSoC5/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC5/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 332:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/PWM_1.c **** 
 335:.\Generated_Source\PSoC5/PWM_1.c ****             #if (PWM_1_UseControl)
 336:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:.\Generated_Source\PSoC5/PWM_1.c ****         }
 340:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:.\Generated_Source\PSoC5/PWM_1.c **** 
 342:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:.\Generated_Source\PSoC5/PWM_1.c **** 
 344:.\Generated_Source\PSoC5/PWM_1.c **** 
 345:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/PWM_1.c ****     *
 349:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 350:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/PWM_1.c ****     *
 352:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/PWM_1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/PWM_1.c ****     *
 356:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 357:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 358:.\Generated_Source\PSoC5/PWM_1.c ****     *
 359:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/PWM_1.c ****     {
 362:.\Generated_Source\PSoC5/PWM_1.c **** 
 363:.\Generated_Source\PSoC5/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC5/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 367:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/PWM_1.c **** 
 370:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseControl)
 371:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:.\Generated_Source\PSoC5/PWM_1.c ****     }
 375:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:.\Generated_Source\PSoC5/PWM_1.c **** 
 377:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 13


 379:.\Generated_Source\PSoC5/PWM_1.c **** 
 380:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/PWM_1.c **** 
 382:.\Generated_Source\PSoC5/PWM_1.c **** 
 383:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/PWM_1.c ****     *
 387:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 388:.\Generated_Source\PSoC5/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/PWM_1.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/PWM_1.c ****     *
 393:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/PWM_1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/PWM_1.c ****     *
 396:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 397:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 398:.\Generated_Source\PSoC5/PWM_1.c ****     *
 399:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/PWM_1.c ****     *
 402:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 405:.\Generated_Source\PSoC5/PWM_1.c ****     {
 406:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_COUNTER_LSB_PTR, counter);
 407:.\Generated_Source\PSoC5/PWM_1.c ****     }
 408:.\Generated_Source\PSoC5/PWM_1.c **** 
 409:.\Generated_Source\PSoC5/PWM_1.c **** 
 410:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/PWM_1.c ****     *
 414:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 415:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/PWM_1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/PWM_1.c ****     *
 418:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 420:.\Generated_Source\PSoC5/PWM_1.c ****     *
 421:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 422:.\Generated_Source\PSoC5/PWM_1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/PWM_1.c ****     *
 424:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/PWM_1.c ****     {
 427:.\Generated_Source\PSoC5/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 431:.\Generated_Source\PSoC5/PWM_1.c **** 
 432:.\Generated_Source\PSoC5/PWM_1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 434:.\Generated_Source\PSoC5/PWM_1.c ****     }
 435:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 14


 436:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:.\Generated_Source\PSoC5/PWM_1.c **** 
 438:.\Generated_Source\PSoC5/PWM_1.c **** 
 439:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/PWM_1.c ****         *
 443:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 444:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/PWM_1.c ****         *
 446:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 448:.\Generated_Source\PSoC5/PWM_1.c ****         *
 449:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 450:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 451:.\Generated_Source\PSoC5/PWM_1.c ****         *
 452:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/PWM_1.c ****         {
 455:.\Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/PWM_1.c ****             {
 457:.\Generated_Source\PSoC5/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 458:.\Generated_Source\PSoC5/PWM_1.c ****             }
 459:.\Generated_Source\PSoC5/PWM_1.c ****         }
 460:.\Generated_Source\PSoC5/PWM_1.c **** 
 461:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:.\Generated_Source\PSoC5/PWM_1.c **** 
 463:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/PWM_1.c **** 
 465:.\Generated_Source\PSoC5/PWM_1.c **** 
 466:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/PWM_1.c **** *
 470:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 471:.\Generated_Source\PSoC5/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/PWM_1.c **** *
 474:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 475:.\Generated_Source\PSoC5/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/PWM_1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/PWM_1.c **** *
 478:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 479:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 480:.\Generated_Source\PSoC5/PWM_1.c **** *
 481:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/PWM_1.c **** {
 307              		.loc 1 483 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 8
 310              		@ frame_needed = 1, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 312 0000 80B4     		push	{r7}
 313              		.cfi_def_cfa_offset 4
 314              		.cfi_offset 7, -4
 315 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 15


 316              		.cfi_def_cfa_offset 16
 317 0004 00AF     		add	r7, sp, #0
 318              		.cfi_def_cfa_register 7
 319 0006 0346     		mov	r3, r0
 320 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:.\Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 321              		.loc 1 485 0
 322 000a 044A     		ldr	r2, .L15
 323 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 324 000e 1380     		strh	r3, [r2]	@ movhi
 486:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 487:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, period);
 488:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/PWM_1.c **** }
 325              		.loc 1 489 0
 326 0010 0C37     		adds	r7, r7, #12
 327              		.cfi_def_cfa_offset 4
 328 0012 BD46     		mov	sp, r7
 329              		.cfi_def_cfa_register 13
 330              		@ sp needed
 331 0014 5DF8047B 		ldr	r7, [sp], #4
 332              		.cfi_restore 7
 333              		.cfi_def_cfa_offset 0
 334 0018 7047     		bx	lr
 335              	.L16:
 336 001a 00BF     		.align	2
 337              	.L15:
 338 001c 044F0040 		.word	1073762052
 339              		.cfi_endproc
 340              	.LFE4:
 341              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 342              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 343              		.align	2
 344              		.global	PWM_1_WriteCompare
 345              		.thumb
 346              		.thumb_func
 347              		.type	PWM_1_WriteCompare, %function
 348              	PWM_1_WriteCompare:
 349              	.LFB5:
 490:.\Generated_Source\PSoC5/PWM_1.c **** 
 491:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/PWM_1.c **** 
 493:.\Generated_Source\PSoC5/PWM_1.c **** 
 494:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/PWM_1.c ****     *
 498:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 499:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/PWM_1.c ****     *
 505:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 16


 507:.\Generated_Source\PSoC5/PWM_1.c ****     *
 508:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 509:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 510:.\Generated_Source\PSoC5/PWM_1.c ****     *
 511:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/PWM_1.c ****     *
 515:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 518:.\Generated_Source\PSoC5/PWM_1.c ****     {
 350              		.loc 1 518 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 8
 353              		@ frame_needed = 1, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355 0000 80B4     		push	{r7}
 356              		.cfi_def_cfa_offset 4
 357              		.cfi_offset 7, -4
 358 0002 83B0     		sub	sp, sp, #12
 359              		.cfi_def_cfa_offset 16
 360 0004 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
 362 0006 0346     		mov	r3, r0
 363 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 519:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 364              		.loc 1 520 0
 365 000a 044A     		ldr	r2, .L18
 366 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 367 000e 1380     		strh	r3, [r2]	@ movhi
 521:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 522:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/PWM_1.c **** 
 525:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 529:.\Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/PWM_1.c ****     }
 368              		.loc 1 532 0
 369 0010 0C37     		adds	r7, r7, #12
 370              		.cfi_def_cfa_offset 4
 371 0012 BD46     		mov	sp, r7
 372              		.cfi_def_cfa_register 13
 373              		@ sp needed
 374 0014 5DF8047B 		ldr	r7, [sp], #4
 375              		.cfi_restore 7
 376              		.cfi_def_cfa_offset 0
 377 0018 7047     		bx	lr
 378              	.L19:
 379 001a 00BF     		.align	2
 380              	.L18:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 17


 381 001c 064F0040 		.word	1073762054
 382              		.cfi_endproc
 383              	.LFE5:
 384              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 385              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 386              		.align	2
 387              		.global	PWM_1_SetInterruptMode
 388              		.thumb
 389              		.thumb_func
 390              		.type	PWM_1_SetInterruptMode, %function
 391              	PWM_1_SetInterruptMode:
 392              	.LFB6:
 533:.\Generated_Source\PSoC5/PWM_1.c **** 
 534:.\Generated_Source\PSoC5/PWM_1.c **** 
 535:.\Generated_Source\PSoC5/PWM_1.c **** #else
 536:.\Generated_Source\PSoC5/PWM_1.c **** 
 537:.\Generated_Source\PSoC5/PWM_1.c **** 
 538:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/PWM_1.c ****     *
 542:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 543:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/PWM_1.c ****     *
 548:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/PWM_1.c ****     *
 551:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 552:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 553:.\Generated_Source\PSoC5/PWM_1.c ****     *
 554:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 557:.\Generated_Source\PSoC5/PWM_1.c ****     {
 558:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 561:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/PWM_1.c ****     }
 564:.\Generated_Source\PSoC5/PWM_1.c **** 
 565:.\Generated_Source\PSoC5/PWM_1.c **** 
 566:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/PWM_1.c ****     *
 570:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 571:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode.
 576:.\Generated_Source\PSoC5/PWM_1.c ****     *
 577:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 18


 578:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/PWM_1.c ****     *
 580:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 581:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 582:.\Generated_Source\PSoC5/PWM_1.c ****     *
 583:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 586:.\Generated_Source\PSoC5/PWM_1.c ****     {
 587:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 590:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/PWM_1.c ****     }
 593:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/PWM_1.c **** 
 595:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:.\Generated_Source\PSoC5/PWM_1.c **** 
 597:.\Generated_Source\PSoC5/PWM_1.c **** 
 598:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/PWM_1.c ****     *
 602:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 603:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/PWM_1.c ****     *
 605:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/PWM_1.c ****     *
 608:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 609:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 610:.\Generated_Source\PSoC5/PWM_1.c ****     *
 611:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/PWM_1.c ****     {
 614:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 618:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/PWM_1.c **** 
 622:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC5/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 627:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/PWM_1.c **** 
 630:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/PWM_1.c ****     }
 632:.\Generated_Source\PSoC5/PWM_1.c **** 
 633:.\Generated_Source\PSoC5/PWM_1.c **** 
 634:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 19


 635:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/PWM_1.c ****     *
 638:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 639:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/PWM_1.c ****     *
 641:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 643:.\Generated_Source\PSoC5/PWM_1.c ****     *
 644:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 645:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/PWM_1.c ****     *
 647:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/PWM_1.c ****     {
 650:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 654:.\Generated_Source\PSoC5/PWM_1.c **** 
 655:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC5/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 660:.\Generated_Source\PSoC5/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/PWM_1.c ****     }
 664:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/PWM_1.c **** 
 666:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/PWM_1.c **** 
 668:.\Generated_Source\PSoC5/PWM_1.c **** 
 669:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/PWM_1.c ****     *
 673:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 674:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/PWM_1.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/PWM_1.c ****     *
 677:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/PWM_1.c ****     *
 680:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 681:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 682:.\Generated_Source\PSoC5/PWM_1.c ****     *
 683:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/PWM_1.c ****     {
 393              		.loc 1 685 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 8
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398 0000 80B4     		push	{r7}
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 20


 399              		.cfi_def_cfa_offset 4
 400              		.cfi_offset 7, -4
 401 0002 83B0     		sub	sp, sp, #12
 402              		.cfi_def_cfa_offset 16
 403 0004 00AF     		add	r7, sp, #0
 404              		.cfi_def_cfa_register 7
 405 0006 0346     		mov	r3, r0
 406 0008 FB71     		strb	r3, [r7, #7]
 686:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 407              		.loc 1 686 0
 408 000a 044A     		ldr	r2, .L21
 409 000c FB79     		ldrb	r3, [r7, #7]
 410 000e 1370     		strb	r3, [r2]
 687:.\Generated_Source\PSoC5/PWM_1.c ****     }
 411              		.loc 1 687 0
 412 0010 0C37     		adds	r7, r7, #12
 413              		.cfi_def_cfa_offset 4
 414 0012 BD46     		mov	sp, r7
 415              		.cfi_def_cfa_register 13
 416              		@ sp needed
 417 0014 5DF8047B 		ldr	r7, [sp], #4
 418              		.cfi_restore 7
 419              		.cfi_def_cfa_offset 0
 420 0018 7047     		bx	lr
 421              	.L22:
 422 001a 00BF     		.align	2
 423              	.L21:
 424 001c 034F0040 		.word	1073762051
 425              		.cfi_endproc
 426              	.LFE6:
 427              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 428              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 429              		.align	2
 430              		.global	PWM_1_ReadStatusRegister
 431              		.thumb
 432              		.thumb_func
 433              		.type	PWM_1_ReadStatusRegister, %function
 434              	PWM_1_ReadStatusRegister:
 435              	.LFB7:
 688:.\Generated_Source\PSoC5/PWM_1.c **** 
 689:.\Generated_Source\PSoC5/PWM_1.c **** 
 690:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/PWM_1.c ****     *
 694:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 695:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/PWM_1.c ****     *
 697:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 699:.\Generated_Source\PSoC5/PWM_1.c ****     *
 700:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 701:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/PWM_1.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/PWM_1.c ****     *  [3]   : FIFO full
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 21


 706:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/PWM_1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/PWM_1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/PWM_1.c ****     *
 710:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/PWM_1.c ****     {
 436              		.loc 1 712 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 441 0000 80B4     		push	{r7}
 442              		.cfi_def_cfa_offset 4
 443              		.cfi_offset 7, -4
 444 0002 00AF     		add	r7, sp, #0
 445              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 446              		.loc 1 713 0
 447 0004 034B     		ldr	r3, .L25
 448 0006 1B78     		ldrb	r3, [r3]
 449 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC5/PWM_1.c ****     }
 450              		.loc 1 714 0
 451 000a 1846     		mov	r0, r3
 452 000c BD46     		mov	sp, r7
 453              		.cfi_def_cfa_register 13
 454              		@ sp needed
 455 000e 5DF8047B 		ldr	r7, [sp], #4
 456              		.cfi_restore 7
 457              		.cfi_def_cfa_offset 0
 458 0012 7047     		bx	lr
 459              	.L26:
 460              		.align	2
 461              	.L25:
 462 0014 034F0040 		.word	1073762051
 463              		.cfi_endproc
 464              	.LFE7:
 465              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 466              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 467              		.align	2
 468              		.global	PWM_1_ReadControlRegister
 469              		.thumb
 470              		.thumb_func
 471              		.type	PWM_1_ReadControlRegister, %function
 472              	PWM_1_ReadControlRegister:
 473              	.LFB8:
 715:.\Generated_Source\PSoC5/PWM_1.c **** 
 716:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/PWM_1.c **** 
 718:.\Generated_Source\PSoC5/PWM_1.c **** 
 719:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseControl)
 720:.\Generated_Source\PSoC5/PWM_1.c **** 
 721:.\Generated_Source\PSoC5/PWM_1.c **** 
 722:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 22


 725:.\Generated_Source\PSoC5/PWM_1.c ****     *
 726:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 727:.\Generated_Source\PSoC5/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/PWM_1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/PWM_1.c ****     *
 730:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 732:.\Generated_Source\PSoC5/PWM_1.c ****     *
 733:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 734:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/PWM_1.c ****     *
 736:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/PWM_1.c ****     {
 474              		.loc 1 738 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 8
 477              		@ frame_needed = 1, uses_anonymous_args = 0
 478              		@ link register save eliminated.
 479 0000 80B4     		push	{r7}
 480              		.cfi_def_cfa_offset 4
 481              		.cfi_offset 7, -4
 482 0002 83B0     		sub	sp, sp, #12
 483              		.cfi_def_cfa_offset 16
 484 0004 00AF     		add	r7, sp, #0
 485              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC5/PWM_1.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/PWM_1.c **** 
 741:.\Generated_Source\PSoC5/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 486              		.loc 1 741 0
 487 0006 054B     		ldr	r3, .L29
 488 0008 1B78     		ldrb	r3, [r3]
 489 000a FB71     		strb	r3, [r7, #7]
 742:.\Generated_Source\PSoC5/PWM_1.c ****         return (result);
 490              		.loc 1 742 0
 491 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:.\Generated_Source\PSoC5/PWM_1.c ****     }
 492              		.loc 1 743 0
 493 000e 1846     		mov	r0, r3
 494 0010 0C37     		adds	r7, r7, #12
 495              		.cfi_def_cfa_offset 4
 496 0012 BD46     		mov	sp, r7
 497              		.cfi_def_cfa_register 13
 498              		@ sp needed
 499 0014 5DF8047B 		ldr	r7, [sp], #4
 500              		.cfi_restore 7
 501              		.cfi_def_cfa_offset 0
 502 0018 7047     		bx	lr
 503              	.L30:
 504 001a 00BF     		.align	2
 505              	.L29:
 506 001c 004F0040 		.word	1073762048
 507              		.cfi_endproc
 508              	.LFE8:
 509              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 510              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 511              		.align	2
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 23


 512              		.global	PWM_1_WriteControlRegister
 513              		.thumb
 514              		.thumb_func
 515              		.type	PWM_1_WriteControlRegister, %function
 516              	PWM_1_WriteControlRegister:
 517              	.LFB9:
 744:.\Generated_Source\PSoC5/PWM_1.c **** 
 745:.\Generated_Source\PSoC5/PWM_1.c **** 
 746:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/PWM_1.c ****     *
 750:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 751:.\Generated_Source\PSoC5/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/PWM_1.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/PWM_1.c ****     *
 754:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/PWM_1.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/PWM_1.c ****     *
 761:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 762:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 763:.\Generated_Source\PSoC5/PWM_1.c ****     *
 764:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/PWM_1.c ****     {
 518              		.loc 1 766 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 8
 521              		@ frame_needed = 1, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523 0000 80B4     		push	{r7}
 524              		.cfi_def_cfa_offset 4
 525              		.cfi_offset 7, -4
 526 0002 83B0     		sub	sp, sp, #12
 527              		.cfi_def_cfa_offset 16
 528 0004 00AF     		add	r7, sp, #0
 529              		.cfi_def_cfa_register 7
 530 0006 0346     		mov	r3, r0
 531 0008 FB71     		strb	r3, [r7, #7]
 767:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 532              		.loc 1 767 0
 533 000a 044A     		ldr	r2, .L32
 534 000c FB79     		ldrb	r3, [r7, #7]
 535 000e 1370     		strb	r3, [r2]
 768:.\Generated_Source\PSoC5/PWM_1.c ****     }
 536              		.loc 1 768 0
 537 0010 0C37     		adds	r7, r7, #12
 538              		.cfi_def_cfa_offset 4
 539 0012 BD46     		mov	sp, r7
 540              		.cfi_def_cfa_register 13
 541              		@ sp needed
 542 0014 5DF8047B 		ldr	r7, [sp], #4
 543              		.cfi_restore 7
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 24


 544              		.cfi_def_cfa_offset 0
 545 0018 7047     		bx	lr
 546              	.L33:
 547 001a 00BF     		.align	2
 548              	.L32:
 549 001c 004F0040 		.word	1073762048
 550              		.cfi_endproc
 551              	.LFE9:
 552              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 553              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 554              		.align	2
 555              		.global	PWM_1_ReadCompare
 556              		.thumb
 557              		.thumb_func
 558              		.type	PWM_1_ReadCompare, %function
 559              	PWM_1_ReadCompare:
 560              	.LFB10:
 769:.\Generated_Source\PSoC5/PWM_1.c **** 
 770:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:.\Generated_Source\PSoC5/PWM_1.c **** 
 772:.\Generated_Source\PSoC5/PWM_1.c **** 
 773:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/PWM_1.c **** 
 775:.\Generated_Source\PSoC5/PWM_1.c **** 
 776:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/PWM_1.c ****     *
 780:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 781:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/PWM_1.c ****     *
 783:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 785:.\Generated_Source\PSoC5/PWM_1.c ****     *
 786:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 787:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/PWM_1.c ****     *
 789:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/PWM_1.c ****     {
 792:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 793:.\Generated_Source\PSoC5/PWM_1.c ****     }
 794:.\Generated_Source\PSoC5/PWM_1.c **** 
 795:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/PWM_1.c **** 
 797:.\Generated_Source\PSoC5/PWM_1.c **** 
 798:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/PWM_1.c **** 
 800:.\Generated_Source\PSoC5/PWM_1.c **** 
 801:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/PWM_1.c ****     *
 805:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 806:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/PWM_1.c ****     *
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 25


 809:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 811:.\Generated_Source\PSoC5/PWM_1.c ****     *
 812:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 813:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/PWM_1.c ****     *
 815:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/PWM_1.c ****     {
 561              		.loc 1 817 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 0002 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 818:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/PWM_1.c ****             return ((uint16)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 571              		.loc 1 819 0
 572 0004 034B     		ldr	r3, .L36
 573 0006 1B88     		ldrh	r3, [r3]	@ movhi
 574 0008 9BB2     		uxth	r3, r3
 820:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 821:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/PWM_1.c ****     }
 575              		.loc 1 823 0
 576 000a 1846     		mov	r0, r3
 577 000c BD46     		mov	sp, r7
 578              		.cfi_def_cfa_register 13
 579              		@ sp needed
 580 000e 5DF8047B 		ldr	r7, [sp], #4
 581              		.cfi_restore 7
 582              		.cfi_def_cfa_offset 0
 583 0012 7047     		bx	lr
 584              	.L37:
 585              		.align	2
 586              	.L36:
 587 0014 064F0040 		.word	1073762054
 588              		.cfi_endproc
 589              	.LFE10:
 590              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 591              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 592              		.align	2
 593              		.global	PWM_1_ReadPeriod
 594              		.thumb
 595              		.thumb_func
 596              		.type	PWM_1_ReadPeriod, %function
 597              	PWM_1_ReadPeriod:
 598              	.LFB11:
 824:.\Generated_Source\PSoC5/PWM_1.c **** 
 825:.\Generated_Source\PSoC5/PWM_1.c **** #else
 826:.\Generated_Source\PSoC5/PWM_1.c **** 
 827:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 26


 828:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/PWM_1.c ****     *
 832:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 833:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/PWM_1.c ****     *
 835:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 837:.\Generated_Source\PSoC5/PWM_1.c ****     *
 838:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 839:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/PWM_1.c ****     *
 841:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/PWM_1.c ****     {
 844:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC5/PWM_1.c ****     }
 846:.\Generated_Source\PSoC5/PWM_1.c **** 
 847:.\Generated_Source\PSoC5/PWM_1.c **** 
 848:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/PWM_1.c ****     *
 852:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 853:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/PWM_1.c ****     *
 855:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 857:.\Generated_Source\PSoC5/PWM_1.c ****     *
 858:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 859:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/PWM_1.c ****     *
 861:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/PWM_1.c ****     {
 864:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC5/PWM_1.c ****     }
 866:.\Generated_Source\PSoC5/PWM_1.c **** 
 867:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/PWM_1.c **** 
 869:.\Generated_Source\PSoC5/PWM_1.c **** 
 870:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/PWM_1.c **** *
 874:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 875:.\Generated_Source\PSoC5/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/PWM_1.c **** *
 877:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 878:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 879:.\Generated_Source\PSoC5/PWM_1.c **** *
 880:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 881:.\Generated_Source\PSoC5/PWM_1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/PWM_1.c **** *
 883:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/PWM_1.c **** uint16 PWM_1_ReadPeriod(void) 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 27


 885:.\Generated_Source\PSoC5/PWM_1.c **** {
 599              		.loc 1 885 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604 0000 80B4     		push	{r7}
 605              		.cfi_def_cfa_offset 4
 606              		.cfi_offset 7, -4
 607 0002 00AF     		add	r7, sp, #0
 608              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/PWM_1.c ****         return ((uint16)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 609              		.loc 1 887 0
 610 0004 034B     		ldr	r3, .L40
 611 0006 1B88     		ldrh	r3, [r3]	@ movhi
 612 0008 9BB2     		uxth	r3, r3
 888:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 889:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 890:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/PWM_1.c **** }
 613              		.loc 1 891 0
 614 000a 1846     		mov	r0, r3
 615 000c BD46     		mov	sp, r7
 616              		.cfi_def_cfa_register 13
 617              		@ sp needed
 618 000e 5DF8047B 		ldr	r7, [sp], #4
 619              		.cfi_restore 7
 620              		.cfi_def_cfa_offset 0
 621 0012 7047     		bx	lr
 622              	.L41:
 623              		.align	2
 624              	.L40:
 625 0014 044F0040 		.word	1073762052
 626              		.cfi_endproc
 627              	.LFE11:
 628              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 629              		.text
 630              	.Letext0:
 631              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 632              		.section	.debug_info,"",%progbits
 633              	.Ldebug_info0:
 634 0000 2A020000 		.4byte	0x22a
 635 0004 0400     		.2byte	0x4
 636 0006 00000000 		.4byte	.Ldebug_abbrev0
 637 000a 04       		.byte	0x4
 638 000b 01       		.uleb128 0x1
 639 000c E1010000 		.4byte	.LASF34
 640 0010 01       		.byte	0x1
 641 0011 2D000000 		.4byte	.LASF35
 642 0015 0A010000 		.4byte	.LASF36
 643 0019 00000000 		.4byte	.Ldebug_ranges0+0
 644 001d 00000000 		.4byte	0
 645 0021 00000000 		.4byte	.Ldebug_line0
 646 0025 02       		.uleb128 0x2
 647 0026 01       		.byte	0x1
 648 0027 06       		.byte	0x6
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 28


 649 0028 A4020000 		.4byte	.LASF0
 650 002c 02       		.uleb128 0x2
 651 002d 01       		.byte	0x1
 652 002e 08       		.byte	0x8
 653 002f 88000000 		.4byte	.LASF1
 654 0033 02       		.uleb128 0x2
 655 0034 02       		.byte	0x2
 656 0035 05       		.byte	0x5
 657 0036 81020000 		.4byte	.LASF2
 658 003a 02       		.uleb128 0x2
 659 003b 02       		.byte	0x2
 660 003c 07       		.byte	0x7
 661 003d 1A000000 		.4byte	.LASF3
 662 0041 02       		.uleb128 0x2
 663 0042 04       		.byte	0x4
 664 0043 05       		.byte	0x5
 665 0044 96020000 		.4byte	.LASF4
 666 0048 02       		.uleb128 0x2
 667 0049 04       		.byte	0x4
 668 004a 07       		.byte	0x7
 669 004b AC000000 		.4byte	.LASF5
 670 004f 02       		.uleb128 0x2
 671 0050 08       		.byte	0x8
 672 0051 05       		.byte	0x5
 673 0052 AB010000 		.4byte	.LASF6
 674 0056 02       		.uleb128 0x2
 675 0057 08       		.byte	0x8
 676 0058 07       		.byte	0x7
 677 0059 6C010000 		.4byte	.LASF7
 678 005d 03       		.uleb128 0x3
 679 005e 04       		.byte	0x4
 680 005f 05       		.byte	0x5
 681 0060 696E7400 		.ascii	"int\000"
 682 0064 02       		.uleb128 0x2
 683 0065 04       		.byte	0x4
 684 0066 07       		.byte	0x7
 685 0067 5F010000 		.4byte	.LASF8
 686 006b 04       		.uleb128 0x4
 687 006c BE000000 		.4byte	.LASF9
 688 0070 02       		.byte	0x2
 689 0071 3801     		.2byte	0x138
 690 0073 2C000000 		.4byte	0x2c
 691 0077 04       		.uleb128 0x4
 692 0078 4D010000 		.4byte	.LASF10
 693 007c 02       		.byte	0x2
 694 007d 3901     		.2byte	0x139
 695 007f 3A000000 		.4byte	0x3a
 696 0083 02       		.uleb128 0x2
 697 0084 04       		.byte	0x4
 698 0085 04       		.byte	0x4
 699 0086 67000000 		.4byte	.LASF11
 700 008a 02       		.uleb128 0x2
 701 008b 08       		.byte	0x8
 702 008c 04       		.byte	0x4
 703 008d F5000000 		.4byte	.LASF12
 704 0091 02       		.uleb128 0x2
 705 0092 01       		.byte	0x1
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 29


 706 0093 08       		.byte	0x8
 707 0094 9F020000 		.4byte	.LASF13
 708 0098 04       		.uleb128 0x4
 709 0099 96000000 		.4byte	.LASF14
 710 009d 02       		.byte	0x2
 711 009e E201     		.2byte	0x1e2
 712 00a0 A4000000 		.4byte	0xa4
 713 00a4 05       		.uleb128 0x5
 714 00a5 6B000000 		.4byte	0x6b
 715 00a9 04       		.uleb128 0x4
 716 00aa 00000000 		.4byte	.LASF15
 717 00ae 02       		.byte	0x2
 718 00af E301     		.2byte	0x1e3
 719 00b1 B5000000 		.4byte	0xb5
 720 00b5 05       		.uleb128 0x5
 721 00b6 77000000 		.4byte	0x77
 722 00ba 02       		.uleb128 0x2
 723 00bb 04       		.byte	0x4
 724 00bc 07       		.byte	0x7
 725 00bd 8F010000 		.4byte	.LASF16
 726 00c1 06       		.uleb128 0x6
 727 00c2 B8020000 		.4byte	.LASF17
 728 00c6 01       		.byte	0x1
 729 00c7 37       		.byte	0x37
 730 00c8 00000000 		.4byte	.LFB0
 731 00cc 20000000 		.4byte	.LFE0-.LFB0
 732 00d0 01       		.uleb128 0x1
 733 00d1 9C       		.byte	0x9c
 734 00d2 07       		.uleb128 0x7
 735 00d3 54010000 		.4byte	.LASF20
 736 00d7 01       		.byte	0x1
 737 00d8 54       		.byte	0x54
 738 00d9 00000000 		.4byte	.LFB1
 739 00dd C0000000 		.4byte	.LFE1-.LFB1
 740 00e1 01       		.uleb128 0x1
 741 00e2 9C       		.byte	0x9c
 742 00e3 F6000000 		.4byte	0xf6
 743 00e7 08       		.uleb128 0x8
 744 00e8 8A010000 		.4byte	.LASF27
 745 00ec 01       		.byte	0x1
 746 00ed 57       		.byte	0x57
 747 00ee 6B000000 		.4byte	0x6b
 748 00f2 02       		.uleb128 0x2
 749 00f3 91       		.byte	0x91
 750 00f4 77       		.sleb128 -9
 751 00f5 00       		.byte	0
 752 00f6 09       		.uleb128 0x9
 753 00f7 06000000 		.4byte	.LASF18
 754 00fb 01       		.byte	0x1
 755 00fc C7       		.byte	0xc7
 756 00fd 00000000 		.4byte	.LFB2
 757 0101 48000000 		.4byte	.LFE2-.LFB2
 758 0105 01       		.uleb128 0x1
 759 0106 9C       		.byte	0x9c
 760 0107 09       		.uleb128 0x9
 761 0108 8B020000 		.4byte	.LASF19
 762 010c 01       		.byte	0x1
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 30


 763 010d E9       		.byte	0xe9
 764 010e 00000000 		.4byte	.LFB3
 765 0112 48000000 		.4byte	.LFE3-.LFB3
 766 0116 01       		.uleb128 0x1
 767 0117 9C       		.byte	0x9c
 768 0118 0A       		.uleb128 0xa
 769 0119 6F020000 		.4byte	.LASF21
 770 011d 01       		.byte	0x1
 771 011e E201     		.2byte	0x1e2
 772 0120 00000000 		.4byte	.LFB4
 773 0124 20000000 		.4byte	.LFE4-.LFB4
 774 0128 01       		.uleb128 0x1
 775 0129 9C       		.byte	0x9c
 776 012a 3E010000 		.4byte	0x13e
 777 012e 0B       		.uleb128 0xb
 778 012f 13000000 		.4byte	.LASF23
 779 0133 01       		.byte	0x1
 780 0134 E201     		.2byte	0x1e2
 781 0136 77000000 		.4byte	0x77
 782 013a 02       		.uleb128 0x2
 783 013b 91       		.byte	0x91
 784 013c 76       		.sleb128 -10
 785 013d 00       		.byte	0
 786 013e 0A       		.uleb128 0xa
 787 013f 98010000 		.4byte	.LASF22
 788 0143 01       		.byte	0x1
 789 0144 0402     		.2byte	0x204
 790 0146 00000000 		.4byte	.LFB5
 791 014a 20000000 		.4byte	.LFE5-.LFB5
 792 014e 01       		.uleb128 0x1
 793 014f 9C       		.byte	0x9c
 794 0150 64010000 		.4byte	0x164
 795 0154 0B       		.uleb128 0xb
 796 0155 B0020000 		.4byte	.LASF24
 797 0159 01       		.byte	0x1
 798 015a 0402     		.2byte	0x204
 799 015c 77000000 		.4byte	0x77
 800 0160 02       		.uleb128 0x2
 801 0161 91       		.byte	0x91
 802 0162 76       		.sleb128 -10
 803 0163 00       		.byte	0
 804 0164 0A       		.uleb128 0xa
 805 0165 CC000000 		.4byte	.LASF25
 806 0169 01       		.byte	0x1
 807 016a AC02     		.2byte	0x2ac
 808 016c 00000000 		.4byte	.LFB6
 809 0170 20000000 		.4byte	.LFE6-.LFB6
 810 0174 01       		.uleb128 0x1
 811 0175 9C       		.byte	0x9c
 812 0176 8A010000 		.4byte	0x18a
 813 017a 0B       		.uleb128 0xb
 814 017b D3010000 		.4byte	.LASF26
 815 017f 01       		.byte	0x1
 816 0180 AC02     		.2byte	0x2ac
 817 0182 6B000000 		.4byte	0x6b
 818 0186 02       		.uleb128 0x2
 819 0187 91       		.byte	0x91
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 31


 820 0188 77       		.sleb128 -9
 821 0189 00       		.byte	0
 822 018a 0C       		.uleb128 0xc
 823 018b 4E000000 		.4byte	.LASF31
 824 018f 01       		.byte	0x1
 825 0190 C702     		.2byte	0x2c7
 826 0192 6B000000 		.4byte	0x6b
 827 0196 00000000 		.4byte	.LFB7
 828 019a 18000000 		.4byte	.LFE7-.LFB7
 829 019e 01       		.uleb128 0x1
 830 019f 9C       		.byte	0x9c
 831 01a0 0D       		.uleb128 0xd
 832 01a1 B9010000 		.4byte	.LASF37
 833 01a5 01       		.byte	0x1
 834 01a6 E102     		.2byte	0x2e1
 835 01a8 6B000000 		.4byte	0x6b
 836 01ac 00000000 		.4byte	.LFB8
 837 01b0 20000000 		.4byte	.LFE8-.LFB8
 838 01b4 01       		.uleb128 0x1
 839 01b5 9C       		.byte	0x9c
 840 01b6 CA010000 		.4byte	0x1ca
 841 01ba 0E       		.uleb128 0xe
 842 01bb 83010000 		.4byte	.LASF28
 843 01bf 01       		.byte	0x1
 844 01c0 E302     		.2byte	0x2e3
 845 01c2 6B000000 		.4byte	0x6b
 846 01c6 02       		.uleb128 0x2
 847 01c7 91       		.byte	0x91
 848 01c8 77       		.sleb128 -9
 849 01c9 00       		.byte	0
 850 01ca 0A       		.uleb128 0xa
 851 01cb 6D000000 		.4byte	.LASF29
 852 01cf 01       		.byte	0x1
 853 01d0 FD02     		.2byte	0x2fd
 854 01d2 00000000 		.4byte	.LFB9
 855 01d6 20000000 		.4byte	.LFE9-.LFB9
 856 01da 01       		.uleb128 0x1
 857 01db 9C       		.byte	0x9c
 858 01dc F0010000 		.4byte	0x1f0
 859 01e0 0B       		.uleb128 0xb
 860 01e1 C4000000 		.4byte	.LASF30
 861 01e5 01       		.byte	0x1
 862 01e6 FD02     		.2byte	0x2fd
 863 01e8 6B000000 		.4byte	0x6b
 864 01ec 02       		.uleb128 0x2
 865 01ed 91       		.byte	0x91
 866 01ee 77       		.sleb128 -9
 867 01ef 00       		.byte	0
 868 01f0 0C       		.uleb128 0xc
 869 01f1 E3000000 		.4byte	.LASF32
 870 01f5 01       		.byte	0x1
 871 01f6 3003     		.2byte	0x330
 872 01f8 77000000 		.4byte	0x77
 873 01fc 00000000 		.4byte	.LFB10
 874 0200 18000000 		.4byte	.LFE10-.LFB10
 875 0204 01       		.uleb128 0x1
 876 0205 9C       		.byte	0x9c
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 32


 877 0206 0C       		.uleb128 0xc
 878 0207 9B000000 		.4byte	.LASF33
 879 020b 01       		.byte	0x1
 880 020c 7403     		.2byte	0x374
 881 020e 77000000 		.4byte	0x77
 882 0212 00000000 		.4byte	.LFB11
 883 0216 18000000 		.4byte	.LFE11-.LFB11
 884 021a 01       		.uleb128 0x1
 885 021b 9C       		.byte	0x9c
 886 021c 0F       		.uleb128 0xf
 887 021d FC000000 		.4byte	.LASF38
 888 0221 01       		.byte	0x1
 889 0222 20       		.byte	0x20
 890 0223 6B000000 		.4byte	0x6b
 891 0227 05       		.uleb128 0x5
 892 0228 03       		.byte	0x3
 893 0229 00000000 		.4byte	PWM_1_initVar
 894 022d 00       		.byte	0
 895              		.section	.debug_abbrev,"",%progbits
 896              	.Ldebug_abbrev0:
 897 0000 01       		.uleb128 0x1
 898 0001 11       		.uleb128 0x11
 899 0002 01       		.byte	0x1
 900 0003 25       		.uleb128 0x25
 901 0004 0E       		.uleb128 0xe
 902 0005 13       		.uleb128 0x13
 903 0006 0B       		.uleb128 0xb
 904 0007 03       		.uleb128 0x3
 905 0008 0E       		.uleb128 0xe
 906 0009 1B       		.uleb128 0x1b
 907 000a 0E       		.uleb128 0xe
 908 000b 55       		.uleb128 0x55
 909 000c 17       		.uleb128 0x17
 910 000d 11       		.uleb128 0x11
 911 000e 01       		.uleb128 0x1
 912 000f 10       		.uleb128 0x10
 913 0010 17       		.uleb128 0x17
 914 0011 00       		.byte	0
 915 0012 00       		.byte	0
 916 0013 02       		.uleb128 0x2
 917 0014 24       		.uleb128 0x24
 918 0015 00       		.byte	0
 919 0016 0B       		.uleb128 0xb
 920 0017 0B       		.uleb128 0xb
 921 0018 3E       		.uleb128 0x3e
 922 0019 0B       		.uleb128 0xb
 923 001a 03       		.uleb128 0x3
 924 001b 0E       		.uleb128 0xe
 925 001c 00       		.byte	0
 926 001d 00       		.byte	0
 927 001e 03       		.uleb128 0x3
 928 001f 24       		.uleb128 0x24
 929 0020 00       		.byte	0
 930 0021 0B       		.uleb128 0xb
 931 0022 0B       		.uleb128 0xb
 932 0023 3E       		.uleb128 0x3e
 933 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 33


 934 0025 03       		.uleb128 0x3
 935 0026 08       		.uleb128 0x8
 936 0027 00       		.byte	0
 937 0028 00       		.byte	0
 938 0029 04       		.uleb128 0x4
 939 002a 16       		.uleb128 0x16
 940 002b 00       		.byte	0
 941 002c 03       		.uleb128 0x3
 942 002d 0E       		.uleb128 0xe
 943 002e 3A       		.uleb128 0x3a
 944 002f 0B       		.uleb128 0xb
 945 0030 3B       		.uleb128 0x3b
 946 0031 05       		.uleb128 0x5
 947 0032 49       		.uleb128 0x49
 948 0033 13       		.uleb128 0x13
 949 0034 00       		.byte	0
 950 0035 00       		.byte	0
 951 0036 05       		.uleb128 0x5
 952 0037 35       		.uleb128 0x35
 953 0038 00       		.byte	0
 954 0039 49       		.uleb128 0x49
 955 003a 13       		.uleb128 0x13
 956 003b 00       		.byte	0
 957 003c 00       		.byte	0
 958 003d 06       		.uleb128 0x6
 959 003e 2E       		.uleb128 0x2e
 960 003f 00       		.byte	0
 961 0040 3F       		.uleb128 0x3f
 962 0041 19       		.uleb128 0x19
 963 0042 03       		.uleb128 0x3
 964 0043 0E       		.uleb128 0xe
 965 0044 3A       		.uleb128 0x3a
 966 0045 0B       		.uleb128 0xb
 967 0046 3B       		.uleb128 0x3b
 968 0047 0B       		.uleb128 0xb
 969 0048 27       		.uleb128 0x27
 970 0049 19       		.uleb128 0x19
 971 004a 11       		.uleb128 0x11
 972 004b 01       		.uleb128 0x1
 973 004c 12       		.uleb128 0x12
 974 004d 06       		.uleb128 0x6
 975 004e 40       		.uleb128 0x40
 976 004f 18       		.uleb128 0x18
 977 0050 9642     		.uleb128 0x2116
 978 0052 19       		.uleb128 0x19
 979 0053 00       		.byte	0
 980 0054 00       		.byte	0
 981 0055 07       		.uleb128 0x7
 982 0056 2E       		.uleb128 0x2e
 983 0057 01       		.byte	0x1
 984 0058 3F       		.uleb128 0x3f
 985 0059 19       		.uleb128 0x19
 986 005a 03       		.uleb128 0x3
 987 005b 0E       		.uleb128 0xe
 988 005c 3A       		.uleb128 0x3a
 989 005d 0B       		.uleb128 0xb
 990 005e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 34


 991 005f 0B       		.uleb128 0xb
 992 0060 27       		.uleb128 0x27
 993 0061 19       		.uleb128 0x19
 994 0062 11       		.uleb128 0x11
 995 0063 01       		.uleb128 0x1
 996 0064 12       		.uleb128 0x12
 997 0065 06       		.uleb128 0x6
 998 0066 40       		.uleb128 0x40
 999 0067 18       		.uleb128 0x18
 1000 0068 9642     		.uleb128 0x2116
 1001 006a 19       		.uleb128 0x19
 1002 006b 01       		.uleb128 0x1
 1003 006c 13       		.uleb128 0x13
 1004 006d 00       		.byte	0
 1005 006e 00       		.byte	0
 1006 006f 08       		.uleb128 0x8
 1007 0070 34       		.uleb128 0x34
 1008 0071 00       		.byte	0
 1009 0072 03       		.uleb128 0x3
 1010 0073 0E       		.uleb128 0xe
 1011 0074 3A       		.uleb128 0x3a
 1012 0075 0B       		.uleb128 0xb
 1013 0076 3B       		.uleb128 0x3b
 1014 0077 0B       		.uleb128 0xb
 1015 0078 49       		.uleb128 0x49
 1016 0079 13       		.uleb128 0x13
 1017 007a 02       		.uleb128 0x2
 1018 007b 18       		.uleb128 0x18
 1019 007c 00       		.byte	0
 1020 007d 00       		.byte	0
 1021 007e 09       		.uleb128 0x9
 1022 007f 2E       		.uleb128 0x2e
 1023 0080 00       		.byte	0
 1024 0081 3F       		.uleb128 0x3f
 1025 0082 19       		.uleb128 0x19
 1026 0083 03       		.uleb128 0x3
 1027 0084 0E       		.uleb128 0xe
 1028 0085 3A       		.uleb128 0x3a
 1029 0086 0B       		.uleb128 0xb
 1030 0087 3B       		.uleb128 0x3b
 1031 0088 0B       		.uleb128 0xb
 1032 0089 27       		.uleb128 0x27
 1033 008a 19       		.uleb128 0x19
 1034 008b 11       		.uleb128 0x11
 1035 008c 01       		.uleb128 0x1
 1036 008d 12       		.uleb128 0x12
 1037 008e 06       		.uleb128 0x6
 1038 008f 40       		.uleb128 0x40
 1039 0090 18       		.uleb128 0x18
 1040 0091 9742     		.uleb128 0x2117
 1041 0093 19       		.uleb128 0x19
 1042 0094 00       		.byte	0
 1043 0095 00       		.byte	0
 1044 0096 0A       		.uleb128 0xa
 1045 0097 2E       		.uleb128 0x2e
 1046 0098 01       		.byte	0x1
 1047 0099 3F       		.uleb128 0x3f
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 35


 1048 009a 19       		.uleb128 0x19
 1049 009b 03       		.uleb128 0x3
 1050 009c 0E       		.uleb128 0xe
 1051 009d 3A       		.uleb128 0x3a
 1052 009e 0B       		.uleb128 0xb
 1053 009f 3B       		.uleb128 0x3b
 1054 00a0 05       		.uleb128 0x5
 1055 00a1 27       		.uleb128 0x27
 1056 00a2 19       		.uleb128 0x19
 1057 00a3 11       		.uleb128 0x11
 1058 00a4 01       		.uleb128 0x1
 1059 00a5 12       		.uleb128 0x12
 1060 00a6 06       		.uleb128 0x6
 1061 00a7 40       		.uleb128 0x40
 1062 00a8 18       		.uleb128 0x18
 1063 00a9 9742     		.uleb128 0x2117
 1064 00ab 19       		.uleb128 0x19
 1065 00ac 01       		.uleb128 0x1
 1066 00ad 13       		.uleb128 0x13
 1067 00ae 00       		.byte	0
 1068 00af 00       		.byte	0
 1069 00b0 0B       		.uleb128 0xb
 1070 00b1 05       		.uleb128 0x5
 1071 00b2 00       		.byte	0
 1072 00b3 03       		.uleb128 0x3
 1073 00b4 0E       		.uleb128 0xe
 1074 00b5 3A       		.uleb128 0x3a
 1075 00b6 0B       		.uleb128 0xb
 1076 00b7 3B       		.uleb128 0x3b
 1077 00b8 05       		.uleb128 0x5
 1078 00b9 49       		.uleb128 0x49
 1079 00ba 13       		.uleb128 0x13
 1080 00bb 02       		.uleb128 0x2
 1081 00bc 18       		.uleb128 0x18
 1082 00bd 00       		.byte	0
 1083 00be 00       		.byte	0
 1084 00bf 0C       		.uleb128 0xc
 1085 00c0 2E       		.uleb128 0x2e
 1086 00c1 00       		.byte	0
 1087 00c2 3F       		.uleb128 0x3f
 1088 00c3 19       		.uleb128 0x19
 1089 00c4 03       		.uleb128 0x3
 1090 00c5 0E       		.uleb128 0xe
 1091 00c6 3A       		.uleb128 0x3a
 1092 00c7 0B       		.uleb128 0xb
 1093 00c8 3B       		.uleb128 0x3b
 1094 00c9 05       		.uleb128 0x5
 1095 00ca 27       		.uleb128 0x27
 1096 00cb 19       		.uleb128 0x19
 1097 00cc 49       		.uleb128 0x49
 1098 00cd 13       		.uleb128 0x13
 1099 00ce 11       		.uleb128 0x11
 1100 00cf 01       		.uleb128 0x1
 1101 00d0 12       		.uleb128 0x12
 1102 00d1 06       		.uleb128 0x6
 1103 00d2 40       		.uleb128 0x40
 1104 00d3 18       		.uleb128 0x18
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 36


 1105 00d4 9742     		.uleb128 0x2117
 1106 00d6 19       		.uleb128 0x19
 1107 00d7 00       		.byte	0
 1108 00d8 00       		.byte	0
 1109 00d9 0D       		.uleb128 0xd
 1110 00da 2E       		.uleb128 0x2e
 1111 00db 01       		.byte	0x1
 1112 00dc 3F       		.uleb128 0x3f
 1113 00dd 19       		.uleb128 0x19
 1114 00de 03       		.uleb128 0x3
 1115 00df 0E       		.uleb128 0xe
 1116 00e0 3A       		.uleb128 0x3a
 1117 00e1 0B       		.uleb128 0xb
 1118 00e2 3B       		.uleb128 0x3b
 1119 00e3 05       		.uleb128 0x5
 1120 00e4 27       		.uleb128 0x27
 1121 00e5 19       		.uleb128 0x19
 1122 00e6 49       		.uleb128 0x49
 1123 00e7 13       		.uleb128 0x13
 1124 00e8 11       		.uleb128 0x11
 1125 00e9 01       		.uleb128 0x1
 1126 00ea 12       		.uleb128 0x12
 1127 00eb 06       		.uleb128 0x6
 1128 00ec 40       		.uleb128 0x40
 1129 00ed 18       		.uleb128 0x18
 1130 00ee 9742     		.uleb128 0x2117
 1131 00f0 19       		.uleb128 0x19
 1132 00f1 01       		.uleb128 0x1
 1133 00f2 13       		.uleb128 0x13
 1134 00f3 00       		.byte	0
 1135 00f4 00       		.byte	0
 1136 00f5 0E       		.uleb128 0xe
 1137 00f6 34       		.uleb128 0x34
 1138 00f7 00       		.byte	0
 1139 00f8 03       		.uleb128 0x3
 1140 00f9 0E       		.uleb128 0xe
 1141 00fa 3A       		.uleb128 0x3a
 1142 00fb 0B       		.uleb128 0xb
 1143 00fc 3B       		.uleb128 0x3b
 1144 00fd 05       		.uleb128 0x5
 1145 00fe 49       		.uleb128 0x49
 1146 00ff 13       		.uleb128 0x13
 1147 0100 02       		.uleb128 0x2
 1148 0101 18       		.uleb128 0x18
 1149 0102 00       		.byte	0
 1150 0103 00       		.byte	0
 1151 0104 0F       		.uleb128 0xf
 1152 0105 34       		.uleb128 0x34
 1153 0106 00       		.byte	0
 1154 0107 03       		.uleb128 0x3
 1155 0108 0E       		.uleb128 0xe
 1156 0109 3A       		.uleb128 0x3a
 1157 010a 0B       		.uleb128 0xb
 1158 010b 3B       		.uleb128 0x3b
 1159 010c 0B       		.uleb128 0xb
 1160 010d 49       		.uleb128 0x49
 1161 010e 13       		.uleb128 0x13
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 37


 1162 010f 3F       		.uleb128 0x3f
 1163 0110 19       		.uleb128 0x19
 1164 0111 02       		.uleb128 0x2
 1165 0112 18       		.uleb128 0x18
 1166 0113 00       		.byte	0
 1167 0114 00       		.byte	0
 1168 0115 00       		.byte	0
 1169              		.section	.debug_aranges,"",%progbits
 1170 0000 74000000 		.4byte	0x74
 1171 0004 0200     		.2byte	0x2
 1172 0006 00000000 		.4byte	.Ldebug_info0
 1173 000a 04       		.byte	0x4
 1174 000b 00       		.byte	0
 1175 000c 0000     		.2byte	0
 1176 000e 0000     		.2byte	0
 1177 0010 00000000 		.4byte	.LFB0
 1178 0014 20000000 		.4byte	.LFE0-.LFB0
 1179 0018 00000000 		.4byte	.LFB1
 1180 001c C0000000 		.4byte	.LFE1-.LFB1
 1181 0020 00000000 		.4byte	.LFB2
 1182 0024 48000000 		.4byte	.LFE2-.LFB2
 1183 0028 00000000 		.4byte	.LFB3
 1184 002c 48000000 		.4byte	.LFE3-.LFB3
 1185 0030 00000000 		.4byte	.LFB4
 1186 0034 20000000 		.4byte	.LFE4-.LFB4
 1187 0038 00000000 		.4byte	.LFB5
 1188 003c 20000000 		.4byte	.LFE5-.LFB5
 1189 0040 00000000 		.4byte	.LFB6
 1190 0044 20000000 		.4byte	.LFE6-.LFB6
 1191 0048 00000000 		.4byte	.LFB7
 1192 004c 18000000 		.4byte	.LFE7-.LFB7
 1193 0050 00000000 		.4byte	.LFB8
 1194 0054 20000000 		.4byte	.LFE8-.LFB8
 1195 0058 00000000 		.4byte	.LFB9
 1196 005c 20000000 		.4byte	.LFE9-.LFB9
 1197 0060 00000000 		.4byte	.LFB10
 1198 0064 18000000 		.4byte	.LFE10-.LFB10
 1199 0068 00000000 		.4byte	.LFB11
 1200 006c 18000000 		.4byte	.LFE11-.LFB11
 1201 0070 00000000 		.4byte	0
 1202 0074 00000000 		.4byte	0
 1203              		.section	.debug_ranges,"",%progbits
 1204              	.Ldebug_ranges0:
 1205 0000 00000000 		.4byte	.LFB0
 1206 0004 20000000 		.4byte	.LFE0
 1207 0008 00000000 		.4byte	.LFB1
 1208 000c C0000000 		.4byte	.LFE1
 1209 0010 00000000 		.4byte	.LFB2
 1210 0014 48000000 		.4byte	.LFE2
 1211 0018 00000000 		.4byte	.LFB3
 1212 001c 48000000 		.4byte	.LFE3
 1213 0020 00000000 		.4byte	.LFB4
 1214 0024 20000000 		.4byte	.LFE4
 1215 0028 00000000 		.4byte	.LFB5
 1216 002c 20000000 		.4byte	.LFE5
 1217 0030 00000000 		.4byte	.LFB6
 1218 0034 20000000 		.4byte	.LFE6
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 38


 1219 0038 00000000 		.4byte	.LFB7
 1220 003c 18000000 		.4byte	.LFE7
 1221 0040 00000000 		.4byte	.LFB8
 1222 0044 20000000 		.4byte	.LFE8
 1223 0048 00000000 		.4byte	.LFB9
 1224 004c 20000000 		.4byte	.LFE9
 1225 0050 00000000 		.4byte	.LFB10
 1226 0054 18000000 		.4byte	.LFE10
 1227 0058 00000000 		.4byte	.LFB11
 1228 005c 18000000 		.4byte	.LFE11
 1229 0060 00000000 		.4byte	0
 1230 0064 00000000 		.4byte	0
 1231              		.section	.debug_line,"",%progbits
 1232              	.Ldebug_line0:
 1233 0000 3E010000 		.section	.debug_str,"MS",%progbits,1
 1233      02004400 
 1233      00000201 
 1233      FB0E0D00 
 1233      01010101 
 1234              	.LASF15:
 1235 0000 72656731 		.ascii	"reg16\000"
 1235      3600
 1236              	.LASF18:
 1237 0006 50574D5F 		.ascii	"PWM_1_Enable\000"
 1237      315F456E 
 1237      61626C65 
 1237      00
 1238              	.LASF23:
 1239 0013 70657269 		.ascii	"period\000"
 1239      6F6400
 1240              	.LASF3:
 1241 001a 73686F72 		.ascii	"short unsigned int\000"
 1241      7420756E 
 1241      7369676E 
 1241      65642069 
 1241      6E7400
 1242              	.LASF35:
 1243 002d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_1.c\000"
 1243      6E657261 
 1243      7465645F 
 1243      536F7572 
 1243      63655C50 
 1244              	.LASF31:
 1245 004e 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1245      315F5265 
 1245      61645374 
 1245      61747573 
 1245      52656769 
 1246              	.LASF11:
 1247 0067 666C6F61 		.ascii	"float\000"
 1247      7400
 1248              	.LASF29:
 1249 006d 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1249      315F5772 
 1249      69746543 
 1249      6F6E7472 
 1249      6F6C5265 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 39


 1250              	.LASF1:
 1251 0088 756E7369 		.ascii	"unsigned char\000"
 1251      676E6564 
 1251      20636861 
 1251      7200
 1252              	.LASF14:
 1253 0096 72656738 		.ascii	"reg8\000"
 1253      00
 1254              	.LASF33:
 1255 009b 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1255      315F5265 
 1255      61645065 
 1255      72696F64 
 1255      00
 1256              	.LASF5:
 1257 00ac 6C6F6E67 		.ascii	"long unsigned int\000"
 1257      20756E73 
 1257      69676E65 
 1257      6420696E 
 1257      7400
 1258              	.LASF9:
 1259 00be 75696E74 		.ascii	"uint8\000"
 1259      3800
 1260              	.LASF30:
 1261 00c4 636F6E74 		.ascii	"control\000"
 1261      726F6C00 
 1262              	.LASF25:
 1263 00cc 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1263      315F5365 
 1263      74496E74 
 1263      65727275 
 1263      70744D6F 
 1264              	.LASF32:
 1265 00e3 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 1265      315F5265 
 1265      6164436F 
 1265      6D706172 
 1265      6500
 1266              	.LASF12:
 1267 00f5 646F7562 		.ascii	"double\000"
 1267      6C6500
 1268              	.LASF38:
 1269 00fc 50574D5F 		.ascii	"PWM_1_initVar\000"
 1269      315F696E 
 1269      69745661 
 1269      7200
 1270              	.LASF36:
 1271 010a 433A5C55 		.ascii	"C:\\Users\\jthem\\Documents\\PSoC Creator\\PWMExamp"
 1271      73657273 
 1271      5C6A7468 
 1271      656D5C44 
 1271      6F63756D 
 1272 0138 6C653031 		.ascii	"le01\\EasyBoard.cydsn\000"
 1272      5C456173 
 1272      79426F61 
 1272      72642E63 
 1272      7964736E 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 40


 1273              	.LASF10:
 1274 014d 75696E74 		.ascii	"uint16\000"
 1274      313600
 1275              	.LASF20:
 1276 0154 50574D5F 		.ascii	"PWM_1_Init\000"
 1276      315F496E 
 1276      697400
 1277              	.LASF8:
 1278 015f 756E7369 		.ascii	"unsigned int\000"
 1278      676E6564 
 1278      20696E74 
 1278      00
 1279              	.LASF7:
 1280 016c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1280      206C6F6E 
 1280      6720756E 
 1280      7369676E 
 1280      65642069 
 1281              	.LASF28:
 1282 0183 72657375 		.ascii	"result\000"
 1282      6C7400
 1283              	.LASF27:
 1284 018a 6374726C 		.ascii	"ctrl\000"
 1284      00
 1285              	.LASF16:
 1286 018f 73697A65 		.ascii	"sizetype\000"
 1286      74797065 
 1286      00
 1287              	.LASF22:
 1288 0198 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 1288      315F5772 
 1288      69746543 
 1288      6F6D7061 
 1288      726500
 1289              	.LASF6:
 1290 01ab 6C6F6E67 		.ascii	"long long int\000"
 1290      206C6F6E 
 1290      6720696E 
 1290      7400
 1291              	.LASF37:
 1292 01b9 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1292      315F5265 
 1292      6164436F 
 1292      6E74726F 
 1292      6C526567 
 1293              	.LASF26:
 1294 01d3 696E7465 		.ascii	"interruptMode\000"
 1294      72727570 
 1294      744D6F64 
 1294      6500
 1295              	.LASF34:
 1296 01e1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1296      4320342E 
 1296      392E3320 
 1296      32303135 
 1296      30333033 
 1297 0214 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\jthem\AppData\Local\Temp\cc2mc9h3.s 			page 41


 1297      20726576 
 1297      6973696F 
 1297      6E203232 
 1297      31323230 
 1298 0247 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1298      66756E63 
 1298      74696F6E 
 1298      2D736563 
 1298      74696F6E 
 1299              	.LASF21:
 1300 026f 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1300      315F5772 
 1300      69746550 
 1300      6572696F 
 1300      6400
 1301              	.LASF2:
 1302 0281 73686F72 		.ascii	"short int\000"
 1302      7420696E 
 1302      7400
 1303              	.LASF19:
 1304 028b 50574D5F 		.ascii	"PWM_1_Stop\000"
 1304      315F5374 
 1304      6F7000
 1305              	.LASF4:
 1306 0296 6C6F6E67 		.ascii	"long int\000"
 1306      20696E74 
 1306      00
 1307              	.LASF13:
 1308 029f 63686172 		.ascii	"char\000"
 1308      00
 1309              	.LASF0:
 1310 02a4 7369676E 		.ascii	"signed char\000"
 1310      65642063 
 1310      68617200 
 1311              	.LASF24:
 1312 02b0 636F6D70 		.ascii	"compare\000"
 1312      61726500 
 1313              	.LASF17:
 1314 02b8 50574D5F 		.ascii	"PWM_1_Start\000"
 1314      315F5374 
 1314      61727400 
 1315              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
