ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SPIS.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	SPIS_initVar
  19              		.bss
  20              		.type	SPIS_initVar, %object
  21              		.size	SPIS_initVar, 1
  22              	SPIS_initVar:
  23 0000 00       		.space	1
  24              		.comm	SPIS_swStatusTx,1,1
  25              		.comm	SPIS_swStatusRx,1,1
  26              		.section	.text.SPIS_Init,"ax",%progbits
  27              		.align	2
  28              		.global	SPIS_Init
  29              		.thumb
  30              		.thumb_func
  31              		.type	SPIS_Init, %function
  32              	SPIS_Init:
  33              	.LFB0:
  34              		.file 1 ".\\Generated_Source\\PSoC5\\SPIS.c"
   1:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/SPIS.c **** * File Name: SPIS.c
   3:.\Generated_Source\PSoC5/SPIS.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/SPIS.c **** *
   5:.\Generated_Source\PSoC5/SPIS.c **** * Description:
   6:.\Generated_Source\PSoC5/SPIS.c **** *  This file provides all API functionality of the SPI Slave component.
   7:.\Generated_Source\PSoC5/SPIS.c **** *
   8:.\Generated_Source\PSoC5/SPIS.c **** * Note:
   9:.\Generated_Source\PSoC5/SPIS.c **** *  None.
  10:.\Generated_Source\PSoC5/SPIS.c **** *
  11:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/SPIS.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/SPIS.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/SPIS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/SPIS.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/SPIS.c **** 
  18:.\Generated_Source\PSoC5/SPIS.c **** #include "SPIS_PVT.h"
  19:.\Generated_Source\PSoC5/SPIS.c **** 
  20:.\Generated_Source\PSoC5/SPIS.c **** #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
  21:.\Generated_Source\PSoC5/SPIS.c **** 
  22:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint16 SPIS_txBuffer[SPIS_TX_BUFFER_SIZE];
  23:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferRead;
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 2


  24:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferWrite;
  25:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferFull;
  26:.\Generated_Source\PSoC5/SPIS.c **** 
  27:.\Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED*/
  28:.\Generated_Source\PSoC5/SPIS.c **** 
  29:.\Generated_Source\PSoC5/SPIS.c **** #if (SPIS_RX_SOFTWARE_BUF_ENABLED)
  30:.\Generated_Source\PSoC5/SPIS.c **** 
  31:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint16 SPIS_rxBuffer[SPIS_RX_BUFFER_SIZE];
  32:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferRead;
  33:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferWrite;
  34:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferFull;
  35:.\Generated_Source\PSoC5/SPIS.c **** 
  36:.\Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
  37:.\Generated_Source\PSoC5/SPIS.c **** 
  38:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_initVar = 0u;
  39:.\Generated_Source\PSoC5/SPIS.c **** 
  40:.\Generated_Source\PSoC5/SPIS.c **** volatile uint8 SPIS_swStatusTx;
  41:.\Generated_Source\PSoC5/SPIS.c **** volatile uint8 SPIS_swStatusRx;
  42:.\Generated_Source\PSoC5/SPIS.c **** 
  43:.\Generated_Source\PSoC5/SPIS.c **** 
  44:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
  45:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Init
  46:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
  47:.\Generated_Source\PSoC5/SPIS.c **** *
  48:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
  49:.\Generated_Source\PSoC5/SPIS.c **** *  Inits/Restores default SPIS configuration provided with customizer.
  50:.\Generated_Source\PSoC5/SPIS.c **** *
  51:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
  52:.\Generated_Source\PSoC5/SPIS.c **** *  None.
  53:.\Generated_Source\PSoC5/SPIS.c **** *
  54:.\Generated_Source\PSoC5/SPIS.c **** * Return:
  55:.\Generated_Source\PSoC5/SPIS.c **** *  None.
  56:.\Generated_Source\PSoC5/SPIS.c **** *
  57:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
  58:.\Generated_Source\PSoC5/SPIS.c **** *  When this function is called it initializes all of the necessary parameters
  59:.\Generated_Source\PSoC5/SPIS.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  60:.\Generated_Source\PSoC5/SPIS.c **** *  interrupt service routine, configuring the bit-counter parameters and
  61:.\Generated_Source\PSoC5/SPIS.c **** *  clearing the FIFO and Status Register.
  62:.\Generated_Source\PSoC5/SPIS.c **** *
  63:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
  64:.\Generated_Source\PSoC5/SPIS.c **** *  No.
  65:.\Generated_Source\PSoC5/SPIS.c **** *
  66:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
  67:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_Init(void) 
  68:.\Generated_Source\PSoC5/SPIS.c **** {
  35              		.loc 1 68 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  69:.\Generated_Source\PSoC5/SPIS.c ****     /*Initialize the Bit counter */
  70:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_COUNTER_PERIOD_REG = SPIS_BITCTR_INIT;
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 3


  45              		.loc 1 70 0
  46 0004 074B     		ldr	r3, .L2
  47 0006 0F22     		movs	r2, #15
  48 0008 1A70     		strb	r2, [r3]
  71:.\Generated_Source\PSoC5/SPIS.c **** 
  72:.\Generated_Source\PSoC5/SPIS.c ****     /* ISR initialization */
  73:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
  74:.\Generated_Source\PSoC5/SPIS.c **** 
  75:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
  76:.\Generated_Source\PSoC5/SPIS.c **** 
  77:.\Generated_Source\PSoC5/SPIS.c ****         /* Set the ISR to point to the SPIS_isr Interrupt. */
  78:.\Generated_Source\PSoC5/SPIS.c ****         (void)CyIntSetVector(SPIS_TX_ISR_NUMBER, &SPIS_TX_ISR);
  79:.\Generated_Source\PSoC5/SPIS.c **** 
  80:.\Generated_Source\PSoC5/SPIS.c ****         /* Set the priority. */
  81:.\Generated_Source\PSoC5/SPIS.c ****         CyIntSetPriority(SPIS_TX_ISR_NUMBER, SPIS_TX_ISR_PRIORITY);
  82:.\Generated_Source\PSoC5/SPIS.c **** 
  83:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
  84:.\Generated_Source\PSoC5/SPIS.c **** 
  85:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
  86:.\Generated_Source\PSoC5/SPIS.c **** 
  87:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
  88:.\Generated_Source\PSoC5/SPIS.c **** 
  89:.\Generated_Source\PSoC5/SPIS.c ****         /* Set the ISR to point to the SPIS_isr Interrupt. */
  90:.\Generated_Source\PSoC5/SPIS.c ****         (void)CyIntSetVector(SPIS_RX_ISR_NUMBER, &SPIS_RX_ISR);
  91:.\Generated_Source\PSoC5/SPIS.c **** 
  92:.\Generated_Source\PSoC5/SPIS.c ****         /* Set the priority. */
  93:.\Generated_Source\PSoC5/SPIS.c ****         CyIntSetPriority(SPIS_RX_ISR_NUMBER, SPIS_RX_ISR_PRIORITY);
  94:.\Generated_Source\PSoC5/SPIS.c **** 
  95:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
  96:.\Generated_Source\PSoC5/SPIS.c **** 
  97:.\Generated_Source\PSoC5/SPIS.c ****     /* Clear any stray data from the RX and TX FIFO */
  98:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_ClearFIFO();
  49              		.loc 1 98 0
  50 000a FFF7FEFF 		bl	SPIS_ClearFIFO
  99:.\Generated_Source\PSoC5/SPIS.c **** 
 100:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 101:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferFull = 0u;
 102:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferRead = 0u;
 103:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferWrite = 0u;
 104:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 105:.\Generated_Source\PSoC5/SPIS.c **** 
 106:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 107:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferFull = 0u;
 108:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferRead = 0u;
 109:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferWrite = 0u;
 110:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 111:.\Generated_Source\PSoC5/SPIS.c **** 
 112:.\Generated_Source\PSoC5/SPIS.c ****     (void) SPIS_ReadTxStatus(); /* Clear any pending status bits */
  51              		.loc 1 112 0
  52 000e FFF7FEFF 		bl	SPIS_ReadTxStatus
 113:.\Generated_Source\PSoC5/SPIS.c ****     (void) SPIS_ReadRxStatus(); /* Clear any pending status bits */
  53              		.loc 1 113 0
  54 0012 FFF7FEFF 		bl	SPIS_ReadRxStatus
 114:.\Generated_Source\PSoC5/SPIS.c **** 
 115:.\Generated_Source\PSoC5/SPIS.c **** 
 116:.\Generated_Source\PSoC5/SPIS.c ****     /* Configure the Initial interrupt mask */
 117:.\Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 4


 118:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG  = (SPIS_TX_INIT_INTERRUPTS_MASK &
 119:.\Generated_Source\PSoC5/SPIS.c ****                                                 (uint8)~SPIS_STS_TX_FIFO_NOT_FULL);
 120:.\Generated_Source\PSoC5/SPIS.c ****     #else /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 121:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG  = SPIS_TX_INIT_INTERRUPTS_MASK;
  55              		.loc 1 121 0
  56 0016 044B     		ldr	r3, .L2+4
  57 0018 0022     		movs	r2, #0
  58 001a 1A70     		strb	r2, [r3]
 122:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 123:.\Generated_Source\PSoC5/SPIS.c **** 
 124:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = SPIS_RX_INIT_INTERRUPTS_MASK;
  59              		.loc 1 124 0
  60 001c 034B     		ldr	r3, .L2+8
  61 001e 0022     		movs	r2, #0
  62 0020 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/SPIS.c **** }
  63              		.loc 1 125 0
  64 0022 80BD     		pop	{r7, pc}
  65              	.L3:
  66              		.align	2
  67              	.L2:
  68 0024 8A640040 		.word	1073767562
  69 0028 8D640040 		.word	1073767565
  70 002c 8B640040 		.word	1073767563
  71              		.cfi_endproc
  72              	.LFE0:
  73              		.size	SPIS_Init, .-SPIS_Init
  74              		.section	.text.SPIS_Enable,"ax",%progbits
  75              		.align	2
  76              		.global	SPIS_Enable
  77              		.thumb
  78              		.thumb_func
  79              		.type	SPIS_Enable, %function
  80              	SPIS_Enable:
  81              	.LFB1:
 126:.\Generated_Source\PSoC5/SPIS.c **** 
 127:.\Generated_Source\PSoC5/SPIS.c **** 
 128:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 129:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Enable
 130:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 131:.\Generated_Source\PSoC5/SPIS.c **** *
 132:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 133:.\Generated_Source\PSoC5/SPIS.c **** *  Enable SPIS component.
 134:.\Generated_Source\PSoC5/SPIS.c **** *
 135:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 136:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 137:.\Generated_Source\PSoC5/SPIS.c **** *
 138:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 139:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 140:.\Generated_Source\PSoC5/SPIS.c **** *
 141:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_Enable(void) 
 143:.\Generated_Source\PSoC5/SPIS.c **** {
  82              		.loc 1 143 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 8
  85              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 5


  86 0000 80B5     		push	{r7, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 0002 82B0     		sub	sp, sp, #8
  91              		.cfi_def_cfa_offset 16
  92 0004 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
 144:.\Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 145:.\Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
  94              		.loc 1 145 0
  95 0006 FFF7FEFF 		bl	CyEnterCriticalSection
  96 000a 0346     		mov	r3, r0
  97 000c FB71     		strb	r3, [r7, #7]
 146:.\Generated_Source\PSoC5/SPIS.c **** 
 147:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_COUNTER_CONTROL_REG |= SPIS_CNTR_ENABLE;
  98              		.loc 1 147 0
  99 000e 0F4A     		ldr	r2, .L5
 100 0010 0E4B     		ldr	r3, .L5
 101 0012 1B78     		ldrb	r3, [r3]
 102 0014 DBB2     		uxtb	r3, r3
 103 0016 43F02003 		orr	r3, r3, #32
 104 001a DBB2     		uxtb	r3, r3
 105 001c 1370     		strb	r3, [r2]
 148:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_ACTL_REG |= SPIS_INT_ENABLE;
 106              		.loc 1 148 0
 107 001e 0C4A     		ldr	r2, .L5+4
 108 0020 0B4B     		ldr	r3, .L5+4
 109 0022 1B78     		ldrb	r3, [r3]
 110 0024 DBB2     		uxtb	r3, r3
 111 0026 43F01003 		orr	r3, r3, #16
 112 002a DBB2     		uxtb	r3, r3
 113 002c 1370     		strb	r3, [r2]
 149:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_ACTL_REG |= SPIS_INT_ENABLE;
 114              		.loc 1 149 0
 115 002e 094A     		ldr	r2, .L5+8
 116 0030 084B     		ldr	r3, .L5+8
 117 0032 1B78     		ldrb	r3, [r3]
 118 0034 DBB2     		uxtb	r3, r3
 119 0036 43F01003 		orr	r3, r3, #16
 120 003a DBB2     		uxtb	r3, r3
 121 003c 1370     		strb	r3, [r2]
 150:.\Generated_Source\PSoC5/SPIS.c **** 
 151:.\Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 122              		.loc 1 151 0
 123 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 124 0040 1846     		mov	r0, r3
 125 0042 FFF7FEFF 		bl	CyExitCriticalSection
 152:.\Generated_Source\PSoC5/SPIS.c **** 
 153:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 154:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
 155:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 156:.\Generated_Source\PSoC5/SPIS.c **** 
 157:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 158:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
 159:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 160:.\Generated_Source\PSoC5/SPIS.c **** }
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 6


 126              		.loc 1 160 0
 127 0046 0837     		adds	r7, r7, #8
 128              		.cfi_def_cfa_offset 8
 129 0048 BD46     		mov	sp, r7
 130              		.cfi_def_cfa_register 13
 131              		@ sp needed
 132 004a 80BD     		pop	{r7, pc}
 133              	.L6:
 134              		.align	2
 135              	.L5:
 136 004c 9A640040 		.word	1073767578
 137 0050 9D640040 		.word	1073767581
 138 0054 9B640040 		.word	1073767579
 139              		.cfi_endproc
 140              	.LFE1:
 141              		.size	SPIS_Enable, .-SPIS_Enable
 142              		.section	.text.SPIS_Start,"ax",%progbits
 143              		.align	2
 144              		.global	SPIS_Start
 145              		.thumb
 146              		.thumb_func
 147              		.type	SPIS_Start, %function
 148              	SPIS_Start:
 149              	.LFB2:
 161:.\Generated_Source\PSoC5/SPIS.c **** 
 162:.\Generated_Source\PSoC5/SPIS.c **** 
 163:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Start
 165:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/SPIS.c **** *
 167:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 168:.\Generated_Source\PSoC5/SPIS.c **** *  Initialize and Enable the SPI Slave component.
 169:.\Generated_Source\PSoC5/SPIS.c **** *
 170:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 171:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 172:.\Generated_Source\PSoC5/SPIS.c **** *
 173:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 174:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 175:.\Generated_Source\PSoC5/SPIS.c **** *
 176:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 177:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_initVar - used to check initial configuration, modified on
 178:.\Generated_Source\PSoC5/SPIS.c **** *  first function call.
 179:.\Generated_Source\PSoC5/SPIS.c **** *
 180:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 181:.\Generated_Source\PSoC5/SPIS.c **** *  Enable the clock input to enable operation.
 182:.\Generated_Source\PSoC5/SPIS.c **** *
 183:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 184:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 185:.\Generated_Source\PSoC5/SPIS.c **** *
 186:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 187:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_Start(void) 
 188:.\Generated_Source\PSoC5/SPIS.c **** {
 150              		.loc 1 188 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 7


 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 00AF     		add	r7, sp, #0
 159              		.cfi_def_cfa_register 7
 189:.\Generated_Source\PSoC5/SPIS.c ****     if(SPIS_initVar == 0u)
 160              		.loc 1 189 0
 161 0004 054B     		ldr	r3, .L9
 162 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 163 0008 002B     		cmp	r3, #0
 164 000a 04D1     		bne	.L8
 190:.\Generated_Source\PSoC5/SPIS.c ****     {
 191:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_Init();
 165              		.loc 1 191 0
 166 000c FFF7FEFF 		bl	SPIS_Init
 192:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_initVar = 1u;
 167              		.loc 1 192 0
 168 0010 024B     		ldr	r3, .L9
 169 0012 0122     		movs	r2, #1
 170 0014 1A70     		strb	r2, [r3]
 171              	.L8:
 193:.\Generated_Source\PSoC5/SPIS.c ****     }
 194:.\Generated_Source\PSoC5/SPIS.c **** 
 195:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_Enable();
 172              		.loc 1 195 0
 173 0016 FFF7FEFF 		bl	SPIS_Enable
 196:.\Generated_Source\PSoC5/SPIS.c **** }
 174              		.loc 1 196 0
 175 001a 80BD     		pop	{r7, pc}
 176              	.L10:
 177              		.align	2
 178              	.L9:
 179 001c 00000000 		.word	SPIS_initVar
 180              		.cfi_endproc
 181              	.LFE2:
 182              		.size	SPIS_Start, .-SPIS_Start
 183              		.section	.text.SPIS_Stop,"ax",%progbits
 184              		.align	2
 185              		.global	SPIS_Stop
 186              		.thumb
 187              		.thumb_func
 188              		.type	SPIS_Stop, %function
 189              	SPIS_Stop:
 190              	.LFB3:
 197:.\Generated_Source\PSoC5/SPIS.c **** 
 198:.\Generated_Source\PSoC5/SPIS.c **** 
 199:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 200:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Stop
 201:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 202:.\Generated_Source\PSoC5/SPIS.c **** *
 203:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 204:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the SPI Slave component.
 205:.\Generated_Source\PSoC5/SPIS.c **** *
 206:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 207:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 208:.\Generated_Source\PSoC5/SPIS.c **** *
 209:.\Generated_Source\PSoC5/SPIS.c **** * Return:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 8


 210:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 211:.\Generated_Source\PSoC5/SPIS.c **** *
 212:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 213:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the internal interrupt if one is used.
 214:.\Generated_Source\PSoC5/SPIS.c **** *
 215:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 216:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_Stop(void) 
 217:.\Generated_Source\PSoC5/SPIS.c **** {
 191              		.loc 1 217 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 8
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 82B0     		sub	sp, sp, #8
 200              		.cfi_def_cfa_offset 16
 201 0004 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 218:.\Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 219:.\Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 203              		.loc 1 219 0
 204 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 205 000a 0346     		mov	r3, r0
 206 000c FB71     		strb	r3, [r7, #7]
 220:.\Generated_Source\PSoC5/SPIS.c **** 
 221:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_ACTL_REG &= (uint8)~SPIS_INT_ENABLE;
 207              		.loc 1 221 0
 208 000e 0B4A     		ldr	r2, .L12
 209 0010 0A4B     		ldr	r3, .L12
 210 0012 1B78     		ldrb	r3, [r3]
 211 0014 DBB2     		uxtb	r3, r3
 212 0016 23F01003 		bic	r3, r3, #16
 213 001a DBB2     		uxtb	r3, r3
 214 001c 1370     		strb	r3, [r2]
 222:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_ACTL_REG &= (uint8)~SPIS_INT_ENABLE;
 215              		.loc 1 222 0
 216 001e 084A     		ldr	r2, .L12+4
 217 0020 074B     		ldr	r3, .L12+4
 218 0022 1B78     		ldrb	r3, [r3]
 219 0024 DBB2     		uxtb	r3, r3
 220 0026 23F01003 		bic	r3, r3, #16
 221 002a DBB2     		uxtb	r3, r3
 222 002c 1370     		strb	r3, [r2]
 223:.\Generated_Source\PSoC5/SPIS.c **** 
 224:.\Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 223              		.loc 1 224 0
 224 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 225 0030 1846     		mov	r0, r3
 226 0032 FFF7FEFF 		bl	CyExitCriticalSection
 225:.\Generated_Source\PSoC5/SPIS.c **** 
 226:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 227:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
 228:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 229:.\Generated_Source\PSoC5/SPIS.c **** 
 230:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 9


 231:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 232:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 233:.\Generated_Source\PSoC5/SPIS.c **** }
 227              		.loc 1 233 0
 228 0036 0837     		adds	r7, r7, #8
 229              		.cfi_def_cfa_offset 8
 230 0038 BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 003a 80BD     		pop	{r7, pc}
 234              	.L13:
 235              		.align	2
 236              	.L12:
 237 003c 9D640040 		.word	1073767581
 238 0040 9B640040 		.word	1073767579
 239              		.cfi_endproc
 240              	.LFE3:
 241              		.size	SPIS_Stop, .-SPIS_Stop
 242              		.section	.text.SPIS_EnableTxInt,"ax",%progbits
 243              		.align	2
 244              		.global	SPIS_EnableTxInt
 245              		.thumb
 246              		.thumb_func
 247              		.type	SPIS_EnableTxInt, %function
 248              	SPIS_EnableTxInt:
 249              	.LFB4:
 234:.\Generated_Source\PSoC5/SPIS.c **** 
 235:.\Generated_Source\PSoC5/SPIS.c **** 
 236:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableTxInt
 238:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 239:.\Generated_Source\PSoC5/SPIS.c **** *
 240:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 241:.\Generated_Source\PSoC5/SPIS.c **** *  Enable internal Tx interrupt generation.
 242:.\Generated_Source\PSoC5/SPIS.c **** *
 243:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 244:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 245:.\Generated_Source\PSoC5/SPIS.c **** *
 246:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 247:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 248:.\Generated_Source\PSoC5/SPIS.c **** *
 249:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 250:.\Generated_Source\PSoC5/SPIS.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 251:.\Generated_Source\PSoC5/SPIS.c **** *
 252:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 253:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableTxInt(void) 
 254:.\Generated_Source\PSoC5/SPIS.c **** {
 250              		.loc 1 254 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255 0000 80B4     		push	{r7}
 256              		.cfi_def_cfa_offset 4
 257              		.cfi_offset 7, -4
 258 0002 00AF     		add	r7, sp, #0
 259              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 10


 255:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 256:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
 257:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 258:.\Generated_Source\PSoC5/SPIS.c **** }
 260              		.loc 1 258 0
 261 0004 BD46     		mov	sp, r7
 262              		.cfi_def_cfa_register 13
 263              		@ sp needed
 264 0006 5DF8047B 		ldr	r7, [sp], #4
 265              		.cfi_restore 7
 266              		.cfi_def_cfa_offset 0
 267 000a 7047     		bx	lr
 268              		.cfi_endproc
 269              	.LFE4:
 270              		.size	SPIS_EnableTxInt, .-SPIS_EnableTxInt
 271              		.section	.text.SPIS_EnableRxInt,"ax",%progbits
 272              		.align	2
 273              		.global	SPIS_EnableRxInt
 274              		.thumb
 275              		.thumb_func
 276              		.type	SPIS_EnableRxInt, %function
 277              	SPIS_EnableRxInt:
 278              	.LFB5:
 259:.\Generated_Source\PSoC5/SPIS.c **** 
 260:.\Generated_Source\PSoC5/SPIS.c **** 
 261:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 262:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableRxInt
 263:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 264:.\Generated_Source\PSoC5/SPIS.c **** *
 265:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 266:.\Generated_Source\PSoC5/SPIS.c **** *  Enable internal Rx interrupt generation.
 267:.\Generated_Source\PSoC5/SPIS.c **** *
 268:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 269:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 270:.\Generated_Source\PSoC5/SPIS.c **** *
 271:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 272:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 273:.\Generated_Source\PSoC5/SPIS.c **** *
 274:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 275:.\Generated_Source\PSoC5/SPIS.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 276:.\Generated_Source\PSoC5/SPIS.c **** *
 277:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 278:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableRxInt(void) 
 279:.\Generated_Source\PSoC5/SPIS.c **** {
 279              		.loc 1 279 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284 0000 80B4     		push	{r7}
 285              		.cfi_def_cfa_offset 4
 286              		.cfi_offset 7, -4
 287 0002 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 280:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 281:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
 282:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 11


 283:.\Generated_Source\PSoC5/SPIS.c **** }
 289              		.loc 1 283 0
 290 0004 BD46     		mov	sp, r7
 291              		.cfi_def_cfa_register 13
 292              		@ sp needed
 293 0006 5DF8047B 		ldr	r7, [sp], #4
 294              		.cfi_restore 7
 295              		.cfi_def_cfa_offset 0
 296 000a 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE5:
 299              		.size	SPIS_EnableRxInt, .-SPIS_EnableRxInt
 300              		.section	.text.SPIS_DisableTxInt,"ax",%progbits
 301              		.align	2
 302              		.global	SPIS_DisableTxInt
 303              		.thumb
 304              		.thumb_func
 305              		.type	SPIS_DisableTxInt, %function
 306              	SPIS_DisableTxInt:
 307              	.LFB6:
 284:.\Generated_Source\PSoC5/SPIS.c **** 
 285:.\Generated_Source\PSoC5/SPIS.c **** 
 286:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 287:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableTxInt
 288:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 289:.\Generated_Source\PSoC5/SPIS.c **** *
 290:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 291:.\Generated_Source\PSoC5/SPIS.c **** *  Disable internal Tx interrupt generation.
 292:.\Generated_Source\PSoC5/SPIS.c **** *
 293:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 294:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 295:.\Generated_Source\PSoC5/SPIS.c **** *
 296:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 297:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 298:.\Generated_Source\PSoC5/SPIS.c **** *
 299:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 300:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 301:.\Generated_Source\PSoC5/SPIS.c **** *
 302:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 303:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableTxInt(void) 
 304:.\Generated_Source\PSoC5/SPIS.c **** {
 308              		.loc 1 304 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313 0000 80B4     		push	{r7}
 314              		.cfi_def_cfa_offset 4
 315              		.cfi_offset 7, -4
 316 0002 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
 305:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 306:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
 307:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 308:.\Generated_Source\PSoC5/SPIS.c **** }
 318              		.loc 1 308 0
 319 0004 BD46     		mov	sp, r7
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 12


 320              		.cfi_def_cfa_register 13
 321              		@ sp needed
 322 0006 5DF8047B 		ldr	r7, [sp], #4
 323              		.cfi_restore 7
 324              		.cfi_def_cfa_offset 0
 325 000a 7047     		bx	lr
 326              		.cfi_endproc
 327              	.LFE6:
 328              		.size	SPIS_DisableTxInt, .-SPIS_DisableTxInt
 329              		.section	.text.SPIS_DisableRxInt,"ax",%progbits
 330              		.align	2
 331              		.global	SPIS_DisableRxInt
 332              		.thumb
 333              		.thumb_func
 334              		.type	SPIS_DisableRxInt, %function
 335              	SPIS_DisableRxInt:
 336              	.LFB7:
 309:.\Generated_Source\PSoC5/SPIS.c **** 
 310:.\Generated_Source\PSoC5/SPIS.c **** 
 311:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 312:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableRxInt
 313:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 314:.\Generated_Source\PSoC5/SPIS.c **** *
 315:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 316:.\Generated_Source\PSoC5/SPIS.c **** *  Disable internal Rx interrupt generation.
 317:.\Generated_Source\PSoC5/SPIS.c **** *
 318:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 319:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 320:.\Generated_Source\PSoC5/SPIS.c **** *
 321:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 322:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 323:.\Generated_Source\PSoC5/SPIS.c **** *
 324:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 325:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 326:.\Generated_Source\PSoC5/SPIS.c **** *
 327:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 328:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableRxInt(void) 
 329:.\Generated_Source\PSoC5/SPIS.c **** {
 337              		.loc 1 329 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 1, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 342 0000 80B4     		push	{r7}
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 7, -4
 345 0002 00AF     		add	r7, sp, #0
 346              		.cfi_def_cfa_register 7
 330:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 331:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 332:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 333:.\Generated_Source\PSoC5/SPIS.c **** }
 347              		.loc 1 333 0
 348 0004 BD46     		mov	sp, r7
 349              		.cfi_def_cfa_register 13
 350              		@ sp needed
 351 0006 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 13


 352              		.cfi_restore 7
 353              		.cfi_def_cfa_offset 0
 354 000a 7047     		bx	lr
 355              		.cfi_endproc
 356              	.LFE7:
 357              		.size	SPIS_DisableRxInt, .-SPIS_DisableRxInt
 358              		.section	.text.SPIS_SetTxInterruptMode,"ax",%progbits
 359              		.align	2
 360              		.global	SPIS_SetTxInterruptMode
 361              		.thumb
 362              		.thumb_func
 363              		.type	SPIS_SetTxInterruptMode, %function
 364              	SPIS_SetTxInterruptMode:
 365              	.LFB8:
 334:.\Generated_Source\PSoC5/SPIS.c **** 
 335:.\Generated_Source\PSoC5/SPIS.c **** 
 336:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 337:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetTxInterruptMode
 338:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 339:.\Generated_Source\PSoC5/SPIS.c **** *
 340:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 341:.\Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
 342:.\Generated_Source\PSoC5/SPIS.c **** *
 343:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 344:.\Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 345:.\Generated_Source\PSoC5/SPIS.c **** *  header file).
 346:.\Generated_Source\PSoC5/SPIS.c **** *
 347:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 348:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 349:.\Generated_Source\PSoC5/SPIS.c **** *
 350:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 351:.\Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
 352:.\Generated_Source\PSoC5/SPIS.c **** *
 353:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_SetTxInterruptMode(uint8 intSrc) 
 355:.\Generated_Source\PSoC5/SPIS.c **** {
 366              		.loc 1 355 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 8
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371 0000 80B4     		push	{r7}
 372              		.cfi_def_cfa_offset 4
 373              		.cfi_offset 7, -4
 374 0002 83B0     		sub	sp, sp, #12
 375              		.cfi_def_cfa_offset 16
 376 0004 00AF     		add	r7, sp, #0
 377              		.cfi_def_cfa_register 7
 378 0006 0346     		mov	r3, r0
 379 0008 FB71     		strb	r3, [r7, #7]
 356:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_MASK_REG  = intSrc;
 380              		.loc 1 356 0
 381 000a 044A     		ldr	r2, .L19
 382 000c FB79     		ldrb	r3, [r7, #7]
 383 000e 1370     		strb	r3, [r2]
 357:.\Generated_Source\PSoC5/SPIS.c **** }
 384              		.loc 1 357 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 14


 385 0010 0C37     		adds	r7, r7, #12
 386              		.cfi_def_cfa_offset 4
 387 0012 BD46     		mov	sp, r7
 388              		.cfi_def_cfa_register 13
 389              		@ sp needed
 390 0014 5DF8047B 		ldr	r7, [sp], #4
 391              		.cfi_restore 7
 392              		.cfi_def_cfa_offset 0
 393 0018 7047     		bx	lr
 394              	.L20:
 395 001a 00BF     		.align	2
 396              	.L19:
 397 001c 8D640040 		.word	1073767565
 398              		.cfi_endproc
 399              	.LFE8:
 400              		.size	SPIS_SetTxInterruptMode, .-SPIS_SetTxInterruptMode
 401              		.section	.text.SPIS_SetRxInterruptMode,"ax",%progbits
 402              		.align	2
 403              		.global	SPIS_SetRxInterruptMode
 404              		.thumb
 405              		.thumb_func
 406              		.type	SPIS_SetRxInterruptMode, %function
 407              	SPIS_SetRxInterruptMode:
 408              	.LFB9:
 358:.\Generated_Source\PSoC5/SPIS.c **** 
 359:.\Generated_Source\PSoC5/SPIS.c **** 
 360:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 361:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetRxInterruptMode
 362:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 363:.\Generated_Source\PSoC5/SPIS.c **** *
 364:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 365:.\Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
 366:.\Generated_Source\PSoC5/SPIS.c **** *
 367:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 368:.\Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 369:.\Generated_Source\PSoC5/SPIS.c **** *  header file).
 370:.\Generated_Source\PSoC5/SPIS.c **** *
 371:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 372:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 373:.\Generated_Source\PSoC5/SPIS.c **** *
 374:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 375:.\Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
 376:.\Generated_Source\PSoC5/SPIS.c **** *
 377:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 378:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_SetRxInterruptMode(uint8 intSrc) 
 379:.\Generated_Source\PSoC5/SPIS.c **** {
 409              		.loc 1 379 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 8
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 414 0000 80B4     		push	{r7}
 415              		.cfi_def_cfa_offset 4
 416              		.cfi_offset 7, -4
 417 0002 83B0     		sub	sp, sp, #12
 418              		.cfi_def_cfa_offset 16
 419 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 15


 420              		.cfi_def_cfa_register 7
 421 0006 0346     		mov	r3, r0
 422 0008 FB71     		strb	r3, [r7, #7]
 380:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = intSrc;
 423              		.loc 1 380 0
 424 000a 044A     		ldr	r2, .L22
 425 000c FB79     		ldrb	r3, [r7, #7]
 426 000e 1370     		strb	r3, [r2]
 381:.\Generated_Source\PSoC5/SPIS.c **** }
 427              		.loc 1 381 0
 428 0010 0C37     		adds	r7, r7, #12
 429              		.cfi_def_cfa_offset 4
 430 0012 BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 0014 5DF8047B 		ldr	r7, [sp], #4
 434              		.cfi_restore 7
 435              		.cfi_def_cfa_offset 0
 436 0018 7047     		bx	lr
 437              	.L23:
 438 001a 00BF     		.align	2
 439              	.L22:
 440 001c 8B640040 		.word	1073767563
 441              		.cfi_endproc
 442              	.LFE9:
 443              		.size	SPIS_SetRxInterruptMode, .-SPIS_SetRxInterruptMode
 444              		.section	.text.SPIS_ReadTxStatus,"ax",%progbits
 445              		.align	2
 446              		.global	SPIS_ReadTxStatus
 447              		.thumb
 448              		.thumb_func
 449              		.type	SPIS_ReadTxStatus, %function
 450              	SPIS_ReadTxStatus:
 451              	.LFB10:
 382:.\Generated_Source\PSoC5/SPIS.c **** 
 383:.\Generated_Source\PSoC5/SPIS.c **** 
 384:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 385:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadTxStatus
 386:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 387:.\Generated_Source\PSoC5/SPIS.c **** *
 388:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 389:.\Generated_Source\PSoC5/SPIS.c **** *  Read the Tx status register for the component.
 390:.\Generated_Source\PSoC5/SPIS.c **** *
 391:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 392:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 393:.\Generated_Source\PSoC5/SPIS.c **** *
 394:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 395:.\Generated_Source\PSoC5/SPIS.c **** *  Contents of the Tx status register.
 396:.\Generated_Source\PSoC5/SPIS.c **** *
 397:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 398:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatusTx - used to store in software status register,
 399:.\Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
 400:.\Generated_Source\PSoC5/SPIS.c **** *
 401:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 402:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the Tx status register for error
 403:.\Generated_Source\PSoC5/SPIS.c **** *  detection and flow control.
 404:.\Generated_Source\PSoC5/SPIS.c **** *
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 16


 405:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 406:.\Generated_Source\PSoC5/SPIS.c **** *  Clear Tx status register of the component.
 407:.\Generated_Source\PSoC5/SPIS.c **** *
 408:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 409:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 410:.\Generated_Source\PSoC5/SPIS.c **** *
 411:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadTxStatus(void) 
 413:.\Generated_Source\PSoC5/SPIS.c **** {
 452              		.loc 1 413 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457 0000 80B4     		push	{r7}
 458              		.cfi_def_cfa_offset 4
 459              		.cfi_offset 7, -4
 460 0002 83B0     		sub	sp, sp, #12
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 414:.\Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
 415:.\Generated_Source\PSoC5/SPIS.c **** 
 416:.\Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
 417:.\Generated_Source\PSoC5/SPIS.c **** 
 418:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 419:.\Generated_Source\PSoC5/SPIS.c **** 
 420:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx);
 421:.\Generated_Source\PSoC5/SPIS.c **** 
 422:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = 0u;
 423:.\Generated_Source\PSoC5/SPIS.c **** 
 424:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
 425:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 426:.\Generated_Source\PSoC5/SPIS.c **** 
 427:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 428:.\Generated_Source\PSoC5/SPIS.c **** 
 429:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_TX_STATUS_REG;
 464              		.loc 1 429 0
 465 0006 054B     		ldr	r3, .L26
 466 0008 1B78     		ldrb	r3, [r3]
 467 000a FB71     		strb	r3, [r7, #7]
 430:.\Generated_Source\PSoC5/SPIS.c **** 
 431:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 432:.\Generated_Source\PSoC5/SPIS.c **** 
 433:.\Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 468              		.loc 1 433 0
 469 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 434:.\Generated_Source\PSoC5/SPIS.c **** }
 470              		.loc 1 434 0
 471 000e 1846     		mov	r0, r3
 472 0010 0C37     		adds	r7, r7, #12
 473              		.cfi_def_cfa_offset 4
 474 0012 BD46     		mov	sp, r7
 475              		.cfi_def_cfa_register 13
 476              		@ sp needed
 477 0014 5DF8047B 		ldr	r7, [sp], #4
 478              		.cfi_restore 7
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 17


 479              		.cfi_def_cfa_offset 0
 480 0018 7047     		bx	lr
 481              	.L27:
 482 001a 00BF     		.align	2
 483              	.L26:
 484 001c 6D640040 		.word	1073767533
 485              		.cfi_endproc
 486              	.LFE10:
 487              		.size	SPIS_ReadTxStatus, .-SPIS_ReadTxStatus
 488              		.section	.text.SPIS_ReadRxStatus,"ax",%progbits
 489              		.align	2
 490              		.global	SPIS_ReadRxStatus
 491              		.thumb
 492              		.thumb_func
 493              		.type	SPIS_ReadRxStatus, %function
 494              	SPIS_ReadRxStatus:
 495              	.LFB11:
 435:.\Generated_Source\PSoC5/SPIS.c **** 
 436:.\Generated_Source\PSoC5/SPIS.c **** 
 437:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 438:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadRxStatus
 439:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 440:.\Generated_Source\PSoC5/SPIS.c **** *
 441:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 442:.\Generated_Source\PSoC5/SPIS.c **** *  Read the Rx status register for the component.
 443:.\Generated_Source\PSoC5/SPIS.c **** *
 444:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 445:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 446:.\Generated_Source\PSoC5/SPIS.c **** *
 447:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 448:.\Generated_Source\PSoC5/SPIS.c **** *  Contents of the Rx status register.
 449:.\Generated_Source\PSoC5/SPIS.c **** *
 450:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 451:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatusRx - used to store in software Rx status register,
 452:.\Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
 453:.\Generated_Source\PSoC5/SPIS.c **** *
 454:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 455:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the Rx status register for error
 456:.\Generated_Source\PSoC5/SPIS.c **** *  detection and flow control.
 457:.\Generated_Source\PSoC5/SPIS.c **** *
 458:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 459:.\Generated_Source\PSoC5/SPIS.c **** *  Clear Rx status register of the component.
 460:.\Generated_Source\PSoC5/SPIS.c **** *
 461:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 462:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 463:.\Generated_Source\PSoC5/SPIS.c **** *
 464:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 465:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadRxStatus(void) 
 466:.\Generated_Source\PSoC5/SPIS.c **** {
 496              		.loc 1 466 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 8
 499              		@ frame_needed = 1, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501 0000 80B4     		push	{r7}
 502              		.cfi_def_cfa_offset 4
 503              		.cfi_offset 7, -4
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 18


 504 0002 83B0     		sub	sp, sp, #12
 505              		.cfi_def_cfa_offset 16
 506 0004 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 467:.\Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
 468:.\Generated_Source\PSoC5/SPIS.c **** 
 469:.\Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_RX_SOFTWARE_BUF_ENABLED)
 470:.\Generated_Source\PSoC5/SPIS.c **** 
 471:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 472:.\Generated_Source\PSoC5/SPIS.c **** 
 473:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_RX(SPIS_swStatusRx);
 474:.\Generated_Source\PSoC5/SPIS.c **** 
 475:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusRx = 0u;
 476:.\Generated_Source\PSoC5/SPIS.c **** 
 477:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
 478:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 479:.\Generated_Source\PSoC5/SPIS.c **** 
 480:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED */
 481:.\Generated_Source\PSoC5/SPIS.c **** 
 482:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_RX_STATUS_REG;
 508              		.loc 1 482 0
 509 0006 054B     		ldr	r3, .L30
 510 0008 1B78     		ldrb	r3, [r3]
 511 000a FB71     		strb	r3, [r7, #7]
 483:.\Generated_Source\PSoC5/SPIS.c **** 
 484:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 485:.\Generated_Source\PSoC5/SPIS.c **** 
 486:.\Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 512              		.loc 1 486 0
 513 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 487:.\Generated_Source\PSoC5/SPIS.c **** }
 514              		.loc 1 487 0
 515 000e 1846     		mov	r0, r3
 516 0010 0C37     		adds	r7, r7, #12
 517              		.cfi_def_cfa_offset 4
 518 0012 BD46     		mov	sp, r7
 519              		.cfi_def_cfa_register 13
 520              		@ sp needed
 521 0014 5DF8047B 		ldr	r7, [sp], #4
 522              		.cfi_restore 7
 523              		.cfi_def_cfa_offset 0
 524 0018 7047     		bx	lr
 525              	.L31:
 526 001a 00BF     		.align	2
 527              	.L30:
 528 001c 6B640040 		.word	1073767531
 529              		.cfi_endproc
 530              	.LFE11:
 531              		.size	SPIS_ReadRxStatus, .-SPIS_ReadRxStatus
 532              		.section	.text.SPIS_WriteTxData,"ax",%progbits
 533              		.align	2
 534              		.global	SPIS_WriteTxData
 535              		.thumb
 536              		.thumb_func
 537              		.type	SPIS_WriteTxData, %function
 538              	SPIS_WriteTxData:
 539              	.LFB12:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 19


 488:.\Generated_Source\PSoC5/SPIS.c **** 
 489:.\Generated_Source\PSoC5/SPIS.c **** 
 490:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 491:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_WriteTxData
 492:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 493:.\Generated_Source\PSoC5/SPIS.c **** *
 494:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 495:.\Generated_Source\PSoC5/SPIS.c **** *  Write a byte of data to be sent across the SPI.
 496:.\Generated_Source\PSoC5/SPIS.c **** *
 497:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 498:.\Generated_Source\PSoC5/SPIS.c **** *  txDataByte: The data value to send across the SPI.
 499:.\Generated_Source\PSoC5/SPIS.c **** *
 500:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 501:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 502:.\Generated_Source\PSoC5/SPIS.c **** *
 503:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 504:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 505:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer, modified every function
 506:.\Generated_Source\PSoC5/SPIS.c **** *  call if TX Software Buffer is used.
 507:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 508:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer.
 509:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBuffer[SPIS_TX_BUFFER_SIZE] - used to store
 510:.\Generated_Source\PSoC5/SPIS.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 511:.\Generated_Source\PSoC5/SPIS.c **** *
 512:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 513:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user to transmit any byte of data in a single transfer.
 514:.\Generated_Source\PSoC5/SPIS.c **** *
 515:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 516:.\Generated_Source\PSoC5/SPIS.c **** *  If this function is called again before the previous byte is finished then
 517:.\Generated_Source\PSoC5/SPIS.c **** *  the next byte will be appended to the transfer with no time between
 518:.\Generated_Source\PSoC5/SPIS.c **** *  the byte transfers. Clear Tx status register of the component.
 519:.\Generated_Source\PSoC5/SPIS.c **** *
 520:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 521:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 522:.\Generated_Source\PSoC5/SPIS.c **** *
 523:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 524:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_WriteTxData(uint16 txData) 
 525:.\Generated_Source\PSoC5/SPIS.c **** {
 540              		.loc 1 525 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 8
 543              		@ frame_needed = 1, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 545 0000 80B4     		push	{r7}
 546              		.cfi_def_cfa_offset 4
 547              		.cfi_offset 7, -4
 548 0002 83B0     		sub	sp, sp, #12
 549              		.cfi_def_cfa_offset 16
 550 0004 00AF     		add	r7, sp, #0
 551              		.cfi_def_cfa_register 7
 552 0006 0346     		mov	r3, r0
 553 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 526:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 527:.\Generated_Source\PSoC5/SPIS.c **** 
 528:.\Generated_Source\PSoC5/SPIS.c ****         uint8 tempStatus;
 529:.\Generated_Source\PSoC5/SPIS.c ****         uint8 tmpTxBufferRead;
 530:.\Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 20


 531:.\Generated_Source\PSoC5/SPIS.c ****         /* Block if buffer is full, so we don't overwrite. */
 532:.\Generated_Source\PSoC5/SPIS.c ****         do
 533:.\Generated_Source\PSoC5/SPIS.c ****         {
 534:.\Generated_Source\PSoC5/SPIS.c ****             tmpTxBufferRead = SPIS_txBufferRead;
 535:.\Generated_Source\PSoC5/SPIS.c ****             if (0u == tmpTxBufferRead)
 536:.\Generated_Source\PSoC5/SPIS.c ****             {
 537:.\Generated_Source\PSoC5/SPIS.c ****                 tmpTxBufferRead = SPIS_TX_BUFFER_SIZE - 1u;
 538:.\Generated_Source\PSoC5/SPIS.c ****             }
 539:.\Generated_Source\PSoC5/SPIS.c ****             else
 540:.\Generated_Source\PSoC5/SPIS.c ****             {
 541:.\Generated_Source\PSoC5/SPIS.c ****                 tmpTxBufferRead--;
 542:.\Generated_Source\PSoC5/SPIS.c ****             }
 543:.\Generated_Source\PSoC5/SPIS.c **** 
 544:.\Generated_Source\PSoC5/SPIS.c ****         }
 545:.\Generated_Source\PSoC5/SPIS.c ****         while(tmpTxBufferRead == SPIS_txBufferWrite);
 546:.\Generated_Source\PSoC5/SPIS.c **** 
 547:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 548:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 549:.\Generated_Source\PSoC5/SPIS.c **** 
 550:.\Generated_Source\PSoC5/SPIS.c ****         tempStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx);
 551:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = tempStatus;
 552:.\Generated_Source\PSoC5/SPIS.c **** 
 553:.\Generated_Source\PSoC5/SPIS.c ****         if((SPIS_txBufferRead == SPIS_txBufferWrite) &&
 554:.\Generated_Source\PSoC5/SPIS.c ****             (0u != (SPIS_swStatusTx & SPIS_STS_TX_FIFO_NOT_FULL)))
 555:.\Generated_Source\PSoC5/SPIS.c ****         {
 556:.\Generated_Source\PSoC5/SPIS.c ****             /* Put data element into the TX FIFO */
 557:.\Generated_Source\PSoC5/SPIS.c ****             CY_SET_REG16(SPIS_TXDATA_PTR, txData);
 558:.\Generated_Source\PSoC5/SPIS.c ****         }
 559:.\Generated_Source\PSoC5/SPIS.c ****         else
 560:.\Generated_Source\PSoC5/SPIS.c ****         {
 561:.\Generated_Source\PSoC5/SPIS.c ****             /* Put data element into the software buffer */
 562:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_txBufferWrite++;
 563:.\Generated_Source\PSoC5/SPIS.c ****             if(SPIS_txBufferWrite >= SPIS_TX_BUFFER_SIZE)
 564:.\Generated_Source\PSoC5/SPIS.c ****             {
 565:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferWrite = 0u;
 566:.\Generated_Source\PSoC5/SPIS.c ****             }
 567:.\Generated_Source\PSoC5/SPIS.c **** 
 568:.\Generated_Source\PSoC5/SPIS.c ****             if(SPIS_txBufferWrite == SPIS_txBufferRead)
 569:.\Generated_Source\PSoC5/SPIS.c ****             {
 570:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferRead++;
 571:.\Generated_Source\PSoC5/SPIS.c ****                 if(SPIS_txBufferRead >= SPIS_RX_BUFFER_SIZE)
 572:.\Generated_Source\PSoC5/SPIS.c ****                 {
 573:.\Generated_Source\PSoC5/SPIS.c ****                     SPIS_txBufferRead = 0u;
 574:.\Generated_Source\PSoC5/SPIS.c ****                 }
 575:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferFull = 1u;
 576:.\Generated_Source\PSoC5/SPIS.c ****             }
 577:.\Generated_Source\PSoC5/SPIS.c **** 
 578:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_txBuffer[SPIS_txBufferWrite] = txData;
 579:.\Generated_Source\PSoC5/SPIS.c **** 
 580:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_TX_STATUS_MASK_REG |= SPIS_STS_TX_FIFO_NOT_FULL;
 581:.\Generated_Source\PSoC5/SPIS.c ****         }
 582:.\Generated_Source\PSoC5/SPIS.c **** 
 583:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 584:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 585:.\Generated_Source\PSoC5/SPIS.c **** 
 586:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 587:.\Generated_Source\PSoC5/SPIS.c ****         /* Wait until TX FIFO has a place */
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 21


 588:.\Generated_Source\PSoC5/SPIS.c ****         while(0u == (SPIS_TX_STATUS_REG & SPIS_STS_TX_FIFO_NOT_FULL))
 554              		.loc 1 588 0
 555 000a 00BF     		nop
 556              	.L33:
 557              		.loc 1 588 0 is_stmt 0 discriminator 1
 558 000c 074B     		ldr	r3, .L34
 559 000e 1B78     		ldrb	r3, [r3]
 560 0010 DBB2     		uxtb	r3, r3
 561 0012 03F00203 		and	r3, r3, #2
 562 0016 002B     		cmp	r3, #0
 563 0018 F8D0     		beq	.L33
 589:.\Generated_Source\PSoC5/SPIS.c ****         {
 590:.\Generated_Source\PSoC5/SPIS.c ****         }
 591:.\Generated_Source\PSoC5/SPIS.c **** 
 592:.\Generated_Source\PSoC5/SPIS.c ****         /* Put data element into the TX FIFO */
 593:.\Generated_Source\PSoC5/SPIS.c ****         CY_SET_REG16(SPIS_TXDATA_PTR, txData);
 564              		.loc 1 593 0 is_stmt 1
 565 001a 054A     		ldr	r2, .L34+4
 566 001c FB88     		ldrh	r3, [r7, #6]	@ movhi
 567 001e 1380     		strh	r3, [r2]	@ movhi
 594:.\Generated_Source\PSoC5/SPIS.c ****         
 595:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 596:.\Generated_Source\PSoC5/SPIS.c **** }
 568              		.loc 1 596 0
 569 0020 0C37     		adds	r7, r7, #12
 570              		.cfi_def_cfa_offset 4
 571 0022 BD46     		mov	sp, r7
 572              		.cfi_def_cfa_register 13
 573              		@ sp needed
 574 0024 5DF8047B 		ldr	r7, [sp], #4
 575              		.cfi_restore 7
 576              		.cfi_def_cfa_offset 0
 577 0028 7047     		bx	lr
 578              	.L35:
 579 002a 00BF     		.align	2
 580              	.L34:
 581 002c 6D640040 		.word	1073767533
 582 0030 4A640040 		.word	1073767498
 583              		.cfi_endproc
 584              	.LFE12:
 585              		.size	SPIS_WriteTxData, .-SPIS_WriteTxData
 586              		.section	.text.SPIS_WriteTxDataZero,"ax",%progbits
 587              		.align	2
 588              		.global	SPIS_WriteTxDataZero
 589              		.thumb
 590              		.thumb_func
 591              		.type	SPIS_WriteTxDataZero, %function
 592              	SPIS_WriteTxDataZero:
 593              	.LFB13:
 597:.\Generated_Source\PSoC5/SPIS.c **** 
 598:.\Generated_Source\PSoC5/SPIS.c **** #if(SPIS_MODE_USE_ZERO != 0u)
 599:.\Generated_Source\PSoC5/SPIS.c **** 
 600:.\Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 601:.\Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_WriteTxDataZero
 602:.\Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
 603:.\Generated_Source\PSoC5/SPIS.c ****     *
 604:.\Generated_Source\PSoC5/SPIS.c ****     * Summary:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 22


 605:.\Generated_Source\PSoC5/SPIS.c ****     *  Write a byte zero of data to be sent across the SPI. This must be used in
 606:.\Generated_Source\PSoC5/SPIS.c ****     *  Mode 00 and 01 if the FIFO is empty and data is not being sent.
 607:.\Generated_Source\PSoC5/SPIS.c ****     *
 608:.\Generated_Source\PSoC5/SPIS.c ****     * Parameters:
 609:.\Generated_Source\PSoC5/SPIS.c ****     *  txDataByte: The data value to send across the SPI.
 610:.\Generated_Source\PSoC5/SPIS.c ****     *
 611:.\Generated_Source\PSoC5/SPIS.c ****     * Return:
 612:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
 613:.\Generated_Source\PSoC5/SPIS.c ****     *
 614:.\Generated_Source\PSoC5/SPIS.c ****     * Theory:
 615:.\Generated_Source\PSoC5/SPIS.c ****     *  Allows the user to transmit any byte of data in a single transfer. Clear
 616:.\Generated_Source\PSoC5/SPIS.c ****     *  status register of the component.
 617:.\Generated_Source\PSoC5/SPIS.c ****     *
 618:.\Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
 619:.\Generated_Source\PSoC5/SPIS.c ****     void SPIS_WriteTxDataZero(uint16 txDataByte)
 620:.\Generated_Source\PSoC5/SPIS.c ****                                         
 621:.\Generated_Source\PSoC5/SPIS.c ****     {
 594              		.loc 1 621 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 8
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 80B4     		push	{r7}
 600              		.cfi_def_cfa_offset 4
 601              		.cfi_offset 7, -4
 602 0002 83B0     		sub	sp, sp, #12
 603              		.cfi_def_cfa_offset 16
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 0346     		mov	r3, r0
 607 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 622:.\Generated_Source\PSoC5/SPIS.c ****         CY_SET_REG16(SPIS_TXDATA_ZERO_PTR, txDataByte);
 608              		.loc 1 622 0
 609 000a 044A     		ldr	r2, .L37
 610 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 611 000e 1380     		strh	r3, [r2]	@ movhi
 623:.\Generated_Source\PSoC5/SPIS.c ****     }
 612              		.loc 1 623 0
 613 0010 0C37     		adds	r7, r7, #12
 614              		.cfi_def_cfa_offset 4
 615 0012 BD46     		mov	sp, r7
 616              		.cfi_def_cfa_register 13
 617              		@ sp needed
 618 0014 5DF8047B 		ldr	r7, [sp], #4
 619              		.cfi_restore 7
 620              		.cfi_def_cfa_offset 0
 621 0018 7047     		bx	lr
 622              	.L38:
 623 001a 00BF     		.align	2
 624              	.L37:
 625 001c 0A640040 		.word	1073767434
 626              		.cfi_endproc
 627              	.LFE13:
 628              		.size	SPIS_WriteTxDataZero, .-SPIS_WriteTxDataZero
 629              		.section	.text.SPIS_ReadRxData,"ax",%progbits
 630              		.align	2
 631              		.global	SPIS_ReadRxData
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 23


 632              		.thumb
 633              		.thumb_func
 634              		.type	SPIS_ReadRxData, %function
 635              	SPIS_ReadRxData:
 636              	.LFB14:
 624:.\Generated_Source\PSoC5/SPIS.c **** 
 625:.\Generated_Source\PSoC5/SPIS.c **** #endif /* (SPIS_MODE_USE_ZERO != 0u) */
 626:.\Generated_Source\PSoC5/SPIS.c **** 
 627:.\Generated_Source\PSoC5/SPIS.c **** 
 628:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 629:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadRxData
 630:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 631:.\Generated_Source\PSoC5/SPIS.c **** *
 632:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 633:.\Generated_Source\PSoC5/SPIS.c **** *  Read the next byte of data received across the SPI.
 634:.\Generated_Source\PSoC5/SPIS.c **** *
 635:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 636:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 637:.\Generated_Source\PSoC5/SPIS.c **** *
 638:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 639:.\Generated_Source\PSoC5/SPIS.c **** *  The next byte of data read from the FIFO.
 640:.\Generated_Source\PSoC5/SPIS.c **** *
 641:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 642:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 643:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer.
 644:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 645:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer, modified every function
 646:.\Generated_Source\PSoC5/SPIS.c **** *  call if RX Software Buffer is used.
 647:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBuffer[SPIS_RX_BUFFER_SIZE] - used to store
 648:.\Generated_Source\PSoC5/SPIS.c **** *  received data.
 649:.\Generated_Source\PSoC5/SPIS.c **** *
 650:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 651:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user to read a byte of data received.
 652:.\Generated_Source\PSoC5/SPIS.c **** *
 653:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 654:.\Generated_Source\PSoC5/SPIS.c **** *  Will return invalid data if the FIFO is empty.  User should poll for FIFO
 655:.\Generated_Source\PSoC5/SPIS.c **** *  empty status before calling Read function.
 656:.\Generated_Source\PSoC5/SPIS.c **** *
 657:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 658:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 659:.\Generated_Source\PSoC5/SPIS.c **** *
 660:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC5/SPIS.c **** uint16 SPIS_ReadRxData(void) 
 662:.\Generated_Source\PSoC5/SPIS.c **** {
 637              		.loc 1 662 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 8
 640              		@ frame_needed = 1, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 642 0000 80B4     		push	{r7}
 643              		.cfi_def_cfa_offset 4
 644              		.cfi_offset 7, -4
 645 0002 83B0     		sub	sp, sp, #12
 646              		.cfi_def_cfa_offset 16
 647 0004 00AF     		add	r7, sp, #0
 648              		.cfi_def_cfa_register 7
 663:.\Generated_Source\PSoC5/SPIS.c ****     uint16 rxData;
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 24


 664:.\Generated_Source\PSoC5/SPIS.c **** 
 665:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 666:.\Generated_Source\PSoC5/SPIS.c **** 
 667:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 668:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 669:.\Generated_Source\PSoC5/SPIS.c **** 
 670:.\Generated_Source\PSoC5/SPIS.c ****         if(SPIS_rxBufferRead != SPIS_rxBufferWrite)
 671:.\Generated_Source\PSoC5/SPIS.c ****         {
 672:.\Generated_Source\PSoC5/SPIS.c ****             if(SPIS_rxBufferFull == 0u)
 673:.\Generated_Source\PSoC5/SPIS.c ****             {
 674:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_rxBufferRead++;
 675:.\Generated_Source\PSoC5/SPIS.c ****                 if(SPIS_rxBufferRead >= SPIS_RX_BUFFER_SIZE)
 676:.\Generated_Source\PSoC5/SPIS.c ****                 {
 677:.\Generated_Source\PSoC5/SPIS.c ****                     SPIS_rxBufferRead = 0u;
 678:.\Generated_Source\PSoC5/SPIS.c ****                 }
 679:.\Generated_Source\PSoC5/SPIS.c ****             }
 680:.\Generated_Source\PSoC5/SPIS.c ****             else
 681:.\Generated_Source\PSoC5/SPIS.c ****             {
 682:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_rxBufferFull = 0u;
 683:.\Generated_Source\PSoC5/SPIS.c ****             }
 684:.\Generated_Source\PSoC5/SPIS.c ****         }
 685:.\Generated_Source\PSoC5/SPIS.c **** 
 686:.\Generated_Source\PSoC5/SPIS.c ****         rxData = SPIS_rxBuffer[SPIS_rxBufferRead];
 687:.\Generated_Source\PSoC5/SPIS.c **** 
 688:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 689:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 690:.\Generated_Source\PSoC5/SPIS.c **** 
 691:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED */
 692:.\Generated_Source\PSoC5/SPIS.c **** 
 693:.\Generated_Source\PSoC5/SPIS.c ****         rxData = CY_GET_REG16(SPIS_RXDATA_PTR);
 649              		.loc 1 693 0
 650 0006 054B     		ldr	r3, .L41
 651 0008 1B88     		ldrh	r3, [r3]	@ movhi
 652 000a FB80     		strh	r3, [r7, #6]	@ movhi
 694:.\Generated_Source\PSoC5/SPIS.c **** 
 695:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 696:.\Generated_Source\PSoC5/SPIS.c **** 
 697:.\Generated_Source\PSoC5/SPIS.c ****     return (rxData);
 653              		.loc 1 697 0
 654 000c FB88     		ldrh	r3, [r7, #6]
 698:.\Generated_Source\PSoC5/SPIS.c **** 
 699:.\Generated_Source\PSoC5/SPIS.c **** }
 655              		.loc 1 699 0
 656 000e 1846     		mov	r0, r3
 657 0010 0C37     		adds	r7, r7, #12
 658              		.cfi_def_cfa_offset 4
 659 0012 BD46     		mov	sp, r7
 660              		.cfi_def_cfa_register 13
 661              		@ sp needed
 662 0014 5DF8047B 		ldr	r7, [sp], #4
 663              		.cfi_restore 7
 664              		.cfi_def_cfa_offset 0
 665 0018 7047     		bx	lr
 666              	.L42:
 667 001a 00BF     		.align	2
 668              	.L41:
 669 001c 5A640040 		.word	1073767514
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 25


 670              		.cfi_endproc
 671              	.LFE14:
 672              		.size	SPIS_ReadRxData, .-SPIS_ReadRxData
 673              		.section	.text.SPIS_GetRxBufferSize,"ax",%progbits
 674              		.align	2
 675              		.global	SPIS_GetRxBufferSize
 676              		.thumb
 677              		.thumb_func
 678              		.type	SPIS_GetRxBufferSize, %function
 679              	SPIS_GetRxBufferSize:
 680              	.LFB15:
 700:.\Generated_Source\PSoC5/SPIS.c **** 
 701:.\Generated_Source\PSoC5/SPIS.c **** 
 702:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 703:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_GetRxBufferSize
 704:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 705:.\Generated_Source\PSoC5/SPIS.c **** *
 706:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 707:.\Generated_Source\PSoC5/SPIS.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 708:.\Generated_Source\PSoC5/SPIS.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 709:.\Generated_Source\PSoC5/SPIS.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 710:.\Generated_Source\PSoC5/SPIS.c **** *
 711:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 712:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 713:.\Generated_Source\PSoC5/SPIS.c **** *
 714:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 715:.\Generated_Source\PSoC5/SPIS.c **** *  Integer count of the number of bytes/words in the RX buffer.
 716:.\Generated_Source\PSoC5/SPIS.c **** *
 717:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 718:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 719:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer.
 720:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 721:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer.
 722:.\Generated_Source\PSoC5/SPIS.c **** *
 723:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 724:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user to find out how full the RX Buffer is.
 725:.\Generated_Source\PSoC5/SPIS.c **** *
 726:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 727:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_GetRxBufferSize(void) 
 728:.\Generated_Source\PSoC5/SPIS.c **** {
 681              		.loc 1 728 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 8
 684              		@ frame_needed = 1, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 686 0000 80B4     		push	{r7}
 687              		.cfi_def_cfa_offset 4
 688              		.cfi_offset 7, -4
 689 0002 83B0     		sub	sp, sp, #12
 690              		.cfi_def_cfa_offset 16
 691 0004 00AF     		add	r7, sp, #0
 692              		.cfi_def_cfa_register 7
 729:.\Generated_Source\PSoC5/SPIS.c ****     uint8 size;
 730:.\Generated_Source\PSoC5/SPIS.c **** 
 731:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 732:.\Generated_Source\PSoC5/SPIS.c **** 
 733:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 26


 734:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 735:.\Generated_Source\PSoC5/SPIS.c **** 
 736:.\Generated_Source\PSoC5/SPIS.c ****         if(SPIS_rxBufferRead == SPIS_rxBufferWrite)
 737:.\Generated_Source\PSoC5/SPIS.c ****         {
 738:.\Generated_Source\PSoC5/SPIS.c ****             size = 0u; /* No data in RX buffer */
 739:.\Generated_Source\PSoC5/SPIS.c ****         }
 740:.\Generated_Source\PSoC5/SPIS.c ****         else if(SPIS_rxBufferRead < SPIS_rxBufferWrite)
 741:.\Generated_Source\PSoC5/SPIS.c ****         {
 742:.\Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_rxBufferWrite - SPIS_rxBufferRead);
 743:.\Generated_Source\PSoC5/SPIS.c ****         }
 744:.\Generated_Source\PSoC5/SPIS.c ****         else
 745:.\Generated_Source\PSoC5/SPIS.c ****         {
 746:.\Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_RX_BUFFER_SIZE - SPIS_rxBufferRead) + SPIS_rxBufferWrite;
 747:.\Generated_Source\PSoC5/SPIS.c ****         }
 748:.\Generated_Source\PSoC5/SPIS.c **** 
 749:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable interrupt. */
 750:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 751:.\Generated_Source\PSoC5/SPIS.c **** 
 752:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED*/
 753:.\Generated_Source\PSoC5/SPIS.c **** 
 754:.\Generated_Source\PSoC5/SPIS.c ****         /* We can only know if there is data in the fifo. */
 755:.\Generated_Source\PSoC5/SPIS.c ****         size = ((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u) ? 1u : 0u;
 693              		.loc 1 755 0
 694 0006 094B     		ldr	r3, .L47
 695 0008 1B78     		ldrb	r3, [r3]
 696 000a DBB2     		uxtb	r3, r3
 697 000c 03F00803 		and	r3, r3, #8
 698 0010 002B     		cmp	r3, #0
 699 0012 01D0     		beq	.L44
 700              		.loc 1 755 0 is_stmt 0 discriminator 1
 701 0014 0123     		movs	r3, #1
 702 0016 00E0     		b	.L45
 703              	.L44:
 704              		.loc 1 755 0 discriminator 2
 705 0018 0023     		movs	r3, #0
 706              	.L45:
 707              		.loc 1 755 0 discriminator 4
 708 001a FB71     		strb	r3, [r7, #7]
 756:.\Generated_Source\PSoC5/SPIS.c **** 
 757:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 758:.\Generated_Source\PSoC5/SPIS.c **** 
 759:.\Generated_Source\PSoC5/SPIS.c ****     return (size);
 709              		.loc 1 759 0 is_stmt 1 discriminator 4
 710 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 760:.\Generated_Source\PSoC5/SPIS.c **** }
 711              		.loc 1 760 0 discriminator 4
 712 001e 1846     		mov	r0, r3
 713 0020 0C37     		adds	r7, r7, #12
 714              		.cfi_def_cfa_offset 4
 715 0022 BD46     		mov	sp, r7
 716              		.cfi_def_cfa_register 13
 717              		@ sp needed
 718 0024 5DF8047B 		ldr	r7, [sp], #4
 719              		.cfi_restore 7
 720              		.cfi_def_cfa_offset 0
 721 0028 7047     		bx	lr
 722              	.L48:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 27


 723 002a 00BF     		.align	2
 724              	.L47:
 725 002c 6B640040 		.word	1073767531
 726              		.cfi_endproc
 727              	.LFE15:
 728              		.size	SPIS_GetRxBufferSize, .-SPIS_GetRxBufferSize
 729              		.section	.text.SPIS_GetTxBufferSize,"ax",%progbits
 730              		.align	2
 731              		.global	SPIS_GetTxBufferSize
 732              		.thumb
 733              		.thumb_func
 734              		.type	SPIS_GetTxBufferSize, %function
 735              	SPIS_GetTxBufferSize:
 736              	.LFB16:
 761:.\Generated_Source\PSoC5/SPIS.c **** 
 762:.\Generated_Source\PSoC5/SPIS.c **** 
 763:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 764:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_GetTxBufferSize
 765:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 766:.\Generated_Source\PSoC5/SPIS.c **** *
 767:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 768:.\Generated_Source\PSoC5/SPIS.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 769:.\Generated_Source\PSoC5/SPIS.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 770:.\Generated_Source\PSoC5/SPIS.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 771:.\Generated_Source\PSoC5/SPIS.c **** *  Software Buffer.
 772:.\Generated_Source\PSoC5/SPIS.c **** *
 773:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 774:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 775:.\Generated_Source\PSoC5/SPIS.c **** *
 776:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 777:.\Generated_Source\PSoC5/SPIS.c **** *  Integer count of the number of bytes/words in the TX buffer.
 778:.\Generated_Source\PSoC5/SPIS.c **** *
 779:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 780:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 781:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer.
 782:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 783:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer.
 784:.\Generated_Source\PSoC5/SPIS.c **** *
 785:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 786:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user to find out how full the TX Buffer is.
 787:.\Generated_Source\PSoC5/SPIS.c **** *
 788:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 789:.\Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
 790:.\Generated_Source\PSoC5/SPIS.c **** *
 791:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 792:.\Generated_Source\PSoC5/SPIS.c **** uint8  SPIS_GetTxBufferSize(void) 
 793:.\Generated_Source\PSoC5/SPIS.c **** {
 737              		.loc 1 793 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 8
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0000 80B4     		push	{r7}
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 7, -4
 745 0002 83B0     		sub	sp, sp, #12
 746              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 28


 747 0004 00AF     		add	r7, sp, #0
 748              		.cfi_def_cfa_register 7
 794:.\Generated_Source\PSoC5/SPIS.c ****     uint8 size;
 795:.\Generated_Source\PSoC5/SPIS.c **** 
 796:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 797:.\Generated_Source\PSoC5/SPIS.c **** 
 798:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 799:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 800:.\Generated_Source\PSoC5/SPIS.c **** 
 801:.\Generated_Source\PSoC5/SPIS.c ****         if(SPIS_txBufferRead == SPIS_txBufferWrite)
 802:.\Generated_Source\PSoC5/SPIS.c ****         {
 803:.\Generated_Source\PSoC5/SPIS.c ****             size = 0u;
 804:.\Generated_Source\PSoC5/SPIS.c ****         }
 805:.\Generated_Source\PSoC5/SPIS.c ****         else if(SPIS_txBufferRead < SPIS_txBufferWrite)
 806:.\Generated_Source\PSoC5/SPIS.c ****         {
 807:.\Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_txBufferWrite - SPIS_txBufferRead);
 808:.\Generated_Source\PSoC5/SPIS.c ****         }
 809:.\Generated_Source\PSoC5/SPIS.c ****         else
 810:.\Generated_Source\PSoC5/SPIS.c ****         {
 811:.\Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_TX_BUFFER_SIZE - SPIS_txBufferRead) + SPIS_txBufferWrite;
 812:.\Generated_Source\PSoC5/SPIS.c ****         }
 813:.\Generated_Source\PSoC5/SPIS.c **** 
 814:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 815:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 816:.\Generated_Source\PSoC5/SPIS.c **** 
 817:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 818:.\Generated_Source\PSoC5/SPIS.c **** 
 819:.\Generated_Source\PSoC5/SPIS.c ****         size = SPIS_TX_STATUS_REG;
 749              		.loc 1 819 0
 750 0006 0E4B     		ldr	r3, .L54
 751 0008 1B78     		ldrb	r3, [r3]
 752 000a FB71     		strb	r3, [r7, #7]
 820:.\Generated_Source\PSoC5/SPIS.c **** 
 821:.\Generated_Source\PSoC5/SPIS.c ****         /* Is the fifo is full. */
 822:.\Generated_Source\PSoC5/SPIS.c ****         if((size & SPIS_STS_TX_FIFO_EMPTY) != 0u)
 753              		.loc 1 822 0
 754 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 755 000e 03F00403 		and	r3, r3, #4
 756 0012 002B     		cmp	r3, #0
 757 0014 02D0     		beq	.L50
 823:.\Generated_Source\PSoC5/SPIS.c ****         {
 824:.\Generated_Source\PSoC5/SPIS.c ****             size = 0u;
 758              		.loc 1 824 0
 759 0016 0023     		movs	r3, #0
 760 0018 FB71     		strb	r3, [r7, #7]
 761 001a 09E0     		b	.L51
 762              	.L50:
 825:.\Generated_Source\PSoC5/SPIS.c ****         }
 826:.\Generated_Source\PSoC5/SPIS.c ****         else if((size & SPIS_STS_TX_FIFO_NOT_FULL) != 0u)
 763              		.loc 1 826 0
 764 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 765 001e 03F00203 		and	r3, r3, #2
 766 0022 002B     		cmp	r3, #0
 767 0024 02D0     		beq	.L52
 827:.\Generated_Source\PSoC5/SPIS.c ****         {
 828:.\Generated_Source\PSoC5/SPIS.c ****             size = 1u;
 768              		.loc 1 828 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 29


 769 0026 0123     		movs	r3, #1
 770 0028 FB71     		strb	r3, [r7, #7]
 771 002a 01E0     		b	.L51
 772              	.L52:
 829:.\Generated_Source\PSoC5/SPIS.c ****         }
 830:.\Generated_Source\PSoC5/SPIS.c ****         else
 831:.\Generated_Source\PSoC5/SPIS.c ****         {
 832:.\Generated_Source\PSoC5/SPIS.c ****             size = 4u;
 773              		.loc 1 832 0
 774 002c 0423     		movs	r3, #4
 775 002e FB71     		strb	r3, [r7, #7]
 776              	.L51:
 833:.\Generated_Source\PSoC5/SPIS.c ****         }
 834:.\Generated_Source\PSoC5/SPIS.c **** 
 835:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 836:.\Generated_Source\PSoC5/SPIS.c **** 
 837:.\Generated_Source\PSoC5/SPIS.c ****     return (size);
 777              		.loc 1 837 0
 778 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 838:.\Generated_Source\PSoC5/SPIS.c **** }
 779              		.loc 1 838 0
 780 0032 1846     		mov	r0, r3
 781 0034 0C37     		adds	r7, r7, #12
 782              		.cfi_def_cfa_offset 4
 783 0036 BD46     		mov	sp, r7
 784              		.cfi_def_cfa_register 13
 785              		@ sp needed
 786 0038 5DF8047B 		ldr	r7, [sp], #4
 787              		.cfi_restore 7
 788              		.cfi_def_cfa_offset 0
 789 003c 7047     		bx	lr
 790              	.L55:
 791 003e 00BF     		.align	2
 792              	.L54:
 793 0040 6D640040 		.word	1073767533
 794              		.cfi_endproc
 795              	.LFE16:
 796              		.size	SPIS_GetTxBufferSize, .-SPIS_GetTxBufferSize
 797              		.section	.text.SPIS_ClearRxBuffer,"ax",%progbits
 798              		.align	2
 799              		.global	SPIS_ClearRxBuffer
 800              		.thumb
 801              		.thumb_func
 802              		.type	SPIS_ClearRxBuffer, %function
 803              	SPIS_ClearRxBuffer:
 804              	.LFB17:
 839:.\Generated_Source\PSoC5/SPIS.c **** 
 840:.\Generated_Source\PSoC5/SPIS.c **** 
 841:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 842:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearRxBuffer
 843:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 844:.\Generated_Source\PSoC5/SPIS.c **** *
 845:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 846:.\Generated_Source\PSoC5/SPIS.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 847:.\Generated_Source\PSoC5/SPIS.c **** *
 848:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 849:.\Generated_Source\PSoC5/SPIS.c **** *  None.
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 30


 850:.\Generated_Source\PSoC5/SPIS.c **** *
 851:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 852:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 853:.\Generated_Source\PSoC5/SPIS.c **** *
 854:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 855:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 856:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer, modified every function
 857:.\Generated_Source\PSoC5/SPIS.c **** *  call - resets to zero.
 858:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 859:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer, modified every function call -
 860:.\Generated_Source\PSoC5/SPIS.c **** *  resets to zero.
 861:.\Generated_Source\PSoC5/SPIS.c **** *
 862:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 863:.\Generated_Source\PSoC5/SPIS.c **** *  Setting the pointers to zero makes the system believe there is no data to
 864:.\Generated_Source\PSoC5/SPIS.c **** *  read and writing will resume at address 0 overwriting any data that may have
 865:.\Generated_Source\PSoC5/SPIS.c **** *  remained in the RAM.
 866:.\Generated_Source\PSoC5/SPIS.c **** *
 867:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 868:.\Generated_Source\PSoC5/SPIS.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 869:.\Generated_Source\PSoC5/SPIS.c **** *
 870:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 871:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 872:.\Generated_Source\PSoC5/SPIS.c **** *
 873:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 874:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearRxBuffer(void) 
 875:.\Generated_Source\PSoC5/SPIS.c **** {
 805              		.loc 1 875 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 1, uses_anonymous_args = 0
 809              		@ link register save eliminated.
 810 0000 80B4     		push	{r7}
 811              		.cfi_def_cfa_offset 4
 812              		.cfi_offset 7, -4
 813 0002 00AF     		add	r7, sp, #0
 814              		.cfi_def_cfa_register 7
 876:.\Generated_Source\PSoC5/SPIS.c ****     /* Clear Hardware RX FIFO */
 877:.\Generated_Source\PSoC5/SPIS.c ****     while((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u)
 815              		.loc 1 877 0
 816 0004 01E0     		b	.L57
 817              	.L58:
 878:.\Generated_Source\PSoC5/SPIS.c ****     {
 879:.\Generated_Source\PSoC5/SPIS.c ****         CY_GET_REG16(SPIS_RXDATA_PTR);
 818              		.loc 1 879 0
 819 0006 064B     		ldr	r3, .L59
 820 0008 1B88     		ldrh	r3, [r3]	@ movhi
 821              	.L57:
 877:.\Generated_Source\PSoC5/SPIS.c ****     {
 822              		.loc 1 877 0
 823 000a 064B     		ldr	r3, .L59+4
 824 000c 1B78     		ldrb	r3, [r3]
 825 000e DBB2     		uxtb	r3, r3
 826 0010 03F00803 		and	r3, r3, #8
 827 0014 002B     		cmp	r3, #0
 828 0016 F6D1     		bne	.L58
 880:.\Generated_Source\PSoC5/SPIS.c ****     }
 881:.\Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 31


 882:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 883:.\Generated_Source\PSoC5/SPIS.c **** 
 884:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable interrupt to protect variables that could change on interrupt. */
 885:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 886:.\Generated_Source\PSoC5/SPIS.c **** 
 887:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferRead  = 0u;
 888:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferWrite = 0u;
 889:.\Generated_Source\PSoC5/SPIS.c **** 		SPIS_rxBufferFull  = 0u;
 890:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable interrupt. */
 891:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 892:.\Generated_Source\PSoC5/SPIS.c **** 
 893:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 894:.\Generated_Source\PSoC5/SPIS.c **** }
 829              		.loc 1 894 0
 830 0018 BD46     		mov	sp, r7
 831              		.cfi_def_cfa_register 13
 832              		@ sp needed
 833 001a 5DF8047B 		ldr	r7, [sp], #4
 834              		.cfi_restore 7
 835              		.cfi_def_cfa_offset 0
 836 001e 7047     		bx	lr
 837              	.L60:
 838              		.align	2
 839              	.L59:
 840 0020 5A640040 		.word	1073767514
 841 0024 6B640040 		.word	1073767531
 842              		.cfi_endproc
 843              	.LFE17:
 844              		.size	SPIS_ClearRxBuffer, .-SPIS_ClearRxBuffer
 845              		.section	.text.SPIS_ClearTxBuffer,"ax",%progbits
 846              		.align	2
 847              		.global	SPIS_ClearTxBuffer
 848              		.thumb
 849              		.thumb_func
 850              		.type	SPIS_ClearTxBuffer, %function
 851              	SPIS_ClearTxBuffer:
 852              	.LFB18:
 895:.\Generated_Source\PSoC5/SPIS.c **** 
 896:.\Generated_Source\PSoC5/SPIS.c **** 
 897:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 898:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearTxBuffer
 899:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 900:.\Generated_Source\PSoC5/SPIS.c **** *
 901:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 902:.\Generated_Source\PSoC5/SPIS.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 903:.\Generated_Source\PSoC5/SPIS.c **** *
 904:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 905:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 906:.\Generated_Source\PSoC5/SPIS.c **** *
 907:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 908:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 909:.\Generated_Source\PSoC5/SPIS.c **** *
 910:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 911:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 912:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer, modified every function
 913:.\Generated_Source\PSoC5/SPIS.c **** *  call - resets to zero.
 914:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 32


 915:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer, modified every function call -
 916:.\Generated_Source\PSoC5/SPIS.c **** *  resets to zero.
 917:.\Generated_Source\PSoC5/SPIS.c **** *
 918:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 919:.\Generated_Source\PSoC5/SPIS.c **** *  Setting the pointers to zero makes the system believe there is no data to
 920:.\Generated_Source\PSoC5/SPIS.c **** *  read and writing will resume at address 0 overwriting any data that may have
 921:.\Generated_Source\PSoC5/SPIS.c **** *  remained in the RAM.
 922:.\Generated_Source\PSoC5/SPIS.c **** *
 923:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 924:.\Generated_Source\PSoC5/SPIS.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 925:.\Generated_Source\PSoC5/SPIS.c **** *  overwritten.
 926:.\Generated_Source\PSoC5/SPIS.c **** *
 927:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 928:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 929:.\Generated_Source\PSoC5/SPIS.c **** *
 930:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 931:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearTxBuffer(void) 
 932:.\Generated_Source\PSoC5/SPIS.c **** {
 853              		.loc 1 932 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 8
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857 0000 80B5     		push	{r7, lr}
 858              		.cfi_def_cfa_offset 8
 859              		.cfi_offset 7, -8
 860              		.cfi_offset 14, -4
 861 0002 82B0     		sub	sp, sp, #8
 862              		.cfi_def_cfa_offset 16
 863 0004 00AF     		add	r7, sp, #0
 864              		.cfi_def_cfa_register 7
 933:.\Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 934:.\Generated_Source\PSoC5/SPIS.c **** 
 935:.\Generated_Source\PSoC5/SPIS.c ****     /* Clear Hardware TX FIFO */
 936:.\Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 865              		.loc 1 936 0
 866 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 867 000a 0346     		mov	r3, r0
 868 000c FB71     		strb	r3, [r7, #7]
 937:.\Generated_Source\PSoC5/SPIS.c **** 
 938:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_DATA_WIDTH <= 8u)
 939:.\Generated_Source\PSoC5/SPIS.c **** 
 940:.\Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
 941:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 942:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 943:.\Generated_Source\PSoC5/SPIS.c **** 
 944:.\Generated_Source\PSoC5/SPIS.c ****     #else
 945:.\Generated_Source\PSoC5/SPIS.c **** 
 946:.\Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
 947:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 869              		.loc 1 947 0
 870 000e 134A     		ldr	r2, .L62
 871 0010 124B     		ldr	r3, .L62
 872 0012 1B78     		ldrb	r3, [r3]
 873 0014 DBB2     		uxtb	r3, r3
 874 0016 43F00303 		orr	r3, r3, #3
 875 001a DBB2     		uxtb	r3, r3
 876 001c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 33


 948:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 877              		.loc 1 948 0
 878 001e 0F4A     		ldr	r2, .L62
 879 0020 0E4B     		ldr	r3, .L62
 880 0022 1B78     		ldrb	r3, [r3]
 881 0024 DBB2     		uxtb	r3, r3
 882 0026 23F00303 		bic	r3, r3, #3
 883 002a DBB2     		uxtb	r3, r3
 884 002c 1370     		strb	r3, [r2]
 949:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_FIFO_CLR;
 885              		.loc 1 949 0
 886 002e 0C4A     		ldr	r2, .L62+4
 887 0030 0B4B     		ldr	r3, .L62+4
 888 0032 1B78     		ldrb	r3, [r3]
 889 0034 DBB2     		uxtb	r3, r3
 890 0036 43F00303 		orr	r3, r3, #3
 891 003a DBB2     		uxtb	r3, r3
 892 003c 1370     		strb	r3, [r2]
 950:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_FIFO_CLR;
 893              		.loc 1 950 0
 894 003e 084A     		ldr	r2, .L62+4
 895 0040 074B     		ldr	r3, .L62+4
 896 0042 1B78     		ldrb	r3, [r3]
 897 0044 DBB2     		uxtb	r3, r3
 898 0046 23F00303 		bic	r3, r3, #3
 899 004a DBB2     		uxtb	r3, r3
 900 004c 1370     		strb	r3, [r2]
 951:.\Generated_Source\PSoC5/SPIS.c **** 
 952:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_DATA_WIDTH > 8u */
 953:.\Generated_Source\PSoC5/SPIS.c **** 
 954:.\Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 901              		.loc 1 954 0
 902 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 903 0050 1846     		mov	r0, r3
 904 0052 FFF7FEFF 		bl	CyExitCriticalSection
 955:.\Generated_Source\PSoC5/SPIS.c **** 
 956:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 957:.\Generated_Source\PSoC5/SPIS.c **** 
 958:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 959:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 960:.\Generated_Source\PSoC5/SPIS.c **** 
 961:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferRead  = 0u;
 962:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/SPIS.c **** 		SPIS_txBufferFull  = 0u;
 964:.\Generated_Source\PSoC5/SPIS.c **** 		
 965:.\Generated_Source\PSoC5/SPIS.c ****         /* If Buffer is empty then disable TX FIFO status interrupt */
 966:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG &= (uint8)~SPIS_STS_TX_FIFO_NOT_FULL;
 967:.\Generated_Source\PSoC5/SPIS.c **** 
 968:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 969:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 970:.\Generated_Source\PSoC5/SPIS.c **** 
 971:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 972:.\Generated_Source\PSoC5/SPIS.c **** }
 905              		.loc 1 972 0
 906 0056 0837     		adds	r7, r7, #8
 907              		.cfi_def_cfa_offset 8
 908 0058 BD46     		mov	sp, r7
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 34


 909              		.cfi_def_cfa_register 13
 910              		@ sp needed
 911 005a 80BD     		pop	{r7, pc}
 912              	.L63:
 913              		.align	2
 914              	.L62:
 915 005c 9A640040 		.word	1073767578
 916 0060 9B640040 		.word	1073767579
 917              		.cfi_endproc
 918              	.LFE18:
 919              		.size	SPIS_ClearTxBuffer, .-SPIS_ClearTxBuffer
 920              		.section	.text.SPIS_PutArray,"ax",%progbits
 921              		.align	2
 922              		.global	SPIS_PutArray
 923              		.thumb
 924              		.thumb_func
 925              		.type	SPIS_PutArray, %function
 926              	SPIS_PutArray:
 927              	.LFB19:
 973:.\Generated_Source\PSoC5/SPIS.c **** 
 974:.\Generated_Source\PSoC5/SPIS.c **** 
 975:.\Generated_Source\PSoC5/SPIS.c **** #if (SPIS_BIDIRECTIONAL_MODE != 0u)
 976:.\Generated_Source\PSoC5/SPIS.c **** 
 977:.\Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 978:.\Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_TxEnable
 979:.\Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
 980:.\Generated_Source\PSoC5/SPIS.c ****     *
 981:.\Generated_Source\PSoC5/SPIS.c ****     * Summary:
 982:.\Generated_Source\PSoC5/SPIS.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
 983:.\Generated_Source\PSoC5/SPIS.c ****     *  will set the bi-directional pin to transmit.
 984:.\Generated_Source\PSoC5/SPIS.c ****     *
 985:.\Generated_Source\PSoC5/SPIS.c ****     * Parameters:
 986:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
 987:.\Generated_Source\PSoC5/SPIS.c ****     *
 988:.\Generated_Source\PSoC5/SPIS.c ****     * Return:
 989:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
 990:.\Generated_Source\PSoC5/SPIS.c ****     *
 991:.\Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
 992:.\Generated_Source\PSoC5/SPIS.c ****     void SPIS_TxEnable(void) 
 993:.\Generated_Source\PSoC5/SPIS.c ****     {
 994:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_CONTROL_REG |= SPIS_CTRL_TX_SIGNAL_EN;
 995:.\Generated_Source\PSoC5/SPIS.c ****     }
 996:.\Generated_Source\PSoC5/SPIS.c **** 
 997:.\Generated_Source\PSoC5/SPIS.c **** 
 998:.\Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 999:.\Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_TxDisable
1000:.\Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
1001:.\Generated_Source\PSoC5/SPIS.c ****     *
1002:.\Generated_Source\PSoC5/SPIS.c ****     * Summary:
1003:.\Generated_Source\PSoC5/SPIS.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
1004:.\Generated_Source\PSoC5/SPIS.c ****     *  will set the bi-directional pin to receive.
1005:.\Generated_Source\PSoC5/SPIS.c ****     *
1006:.\Generated_Source\PSoC5/SPIS.c ****     * Parameters:
1007:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
1008:.\Generated_Source\PSoC5/SPIS.c ****     *
1009:.\Generated_Source\PSoC5/SPIS.c ****     * Return:
1010:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 35


1011:.\Generated_Source\PSoC5/SPIS.c ****     *
1012:.\Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
1013:.\Generated_Source\PSoC5/SPIS.c ****     void SPIS_TxDisable(void) 
1014:.\Generated_Source\PSoC5/SPIS.c ****     {
1015:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_CONTROL_REG &= (uint8)~SPIS_CTRL_TX_SIGNAL_EN;
1016:.\Generated_Source\PSoC5/SPIS.c ****     }
1017:.\Generated_Source\PSoC5/SPIS.c **** 
1018:.\Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_BIDIRECTIONAL_MODE != 0u */
1019:.\Generated_Source\PSoC5/SPIS.c **** 
1020:.\Generated_Source\PSoC5/SPIS.c **** 
1021:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1022:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_PutArray
1023:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1024:.\Generated_Source\PSoC5/SPIS.c **** *
1025:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1026:.\Generated_Source\PSoC5/SPIS.c **** *  Write available data from RAM/ROM to the TX buffer while space is available
1027:.\Generated_Source\PSoC5/SPIS.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer. If
1028:.\Generated_Source\PSoC5/SPIS.c **** *  used Mode 00 or 01 before PutArray() function should be called
1029:.\Generated_Source\PSoC5/SPIS.c **** *  WriteTxDataZero() function.
1030:.\Generated_Source\PSoC5/SPIS.c **** *
1031:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1032:.\Generated_Source\PSoC5/SPIS.c **** *  *buffer: Pointer to the location in RAM containing the data to send
1033:.\Generated_Source\PSoC5/SPIS.c **** *  byteCount: The number of bytes to move to the transmit buffer.
1034:.\Generated_Source\PSoC5/SPIS.c **** *
1035:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1036:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1037:.\Generated_Source\PSoC5/SPIS.c **** *
1038:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1039:.\Generated_Source\PSoC5/SPIS.c **** *  Will stay in this routine until all data has been sent.  May get locked in
1040:.\Generated_Source\PSoC5/SPIS.c **** *  this loop if data is not being initiated by the master if there is not
1041:.\Generated_Source\PSoC5/SPIS.c **** *  enough room in the TX FIFO.
1042:.\Generated_Source\PSoC5/SPIS.c **** *
1043:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
1044:.\Generated_Source\PSoC5/SPIS.c **** *  No.
1045:.\Generated_Source\PSoC5/SPIS.c **** *
1046:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1047:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_PutArray(const uint16 buffer[], uint8 byteCount)
1048:.\Generated_Source\PSoC5/SPIS.c ****                                                                     
1049:.\Generated_Source\PSoC5/SPIS.c **** {
 928              		.loc 1 1049 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 16
 931              		@ frame_needed = 1, uses_anonymous_args = 0
 932 0000 80B5     		push	{r7, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 84B0     		sub	sp, sp, #16
 937              		.cfi_def_cfa_offset 24
 938 0004 00AF     		add	r7, sp, #0
 939              		.cfi_def_cfa_register 7
 940 0006 7860     		str	r0, [r7, #4]
 941 0008 0B46     		mov	r3, r1
 942 000a FB70     		strb	r3, [r7, #3]
1050:.\Generated_Source\PSoC5/SPIS.c ****     uint8 bufIndex;
1051:.\Generated_Source\PSoC5/SPIS.c ****     bufIndex = 0u;
 943              		.loc 1 1051 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 36


 944 000c 0023     		movs	r3, #0
 945 000e FB73     		strb	r3, [r7, #15]
1052:.\Generated_Source\PSoC5/SPIS.c **** 
1053:.\Generated_Source\PSoC5/SPIS.c ****     while(byteCount > 0u)
 946              		.loc 1 1053 0
 947 0010 0DE0     		b	.L65
 948              	.L66:
1054:.\Generated_Source\PSoC5/SPIS.c ****     {
1055:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_WriteTxData(buffer[bufIndex]);
 949              		.loc 1 1055 0
 950 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 951 0014 5B00     		lsls	r3, r3, #1
 952 0016 7A68     		ldr	r2, [r7, #4]
 953 0018 1344     		add	r3, r3, r2
 954 001a 1B88     		ldrh	r3, [r3]
 955 001c 1846     		mov	r0, r3
 956 001e FFF7FEFF 		bl	SPIS_WriteTxData
1056:.\Generated_Source\PSoC5/SPIS.c ****         bufIndex++;
 957              		.loc 1 1056 0
 958 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 959 0024 0133     		adds	r3, r3, #1
 960 0026 FB73     		strb	r3, [r7, #15]
1057:.\Generated_Source\PSoC5/SPIS.c ****         byteCount--;
 961              		.loc 1 1057 0
 962 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 963 002a 013B     		subs	r3, r3, #1
 964 002c FB70     		strb	r3, [r7, #3]
 965              	.L65:
1053:.\Generated_Source\PSoC5/SPIS.c ****     {
 966              		.loc 1 1053 0
 967 002e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 968 0030 002B     		cmp	r3, #0
 969 0032 EED1     		bne	.L66
1058:.\Generated_Source\PSoC5/SPIS.c ****     }
1059:.\Generated_Source\PSoC5/SPIS.c **** }
 970              		.loc 1 1059 0
 971 0034 1037     		adds	r7, r7, #16
 972              		.cfi_def_cfa_offset 8
 973 0036 BD46     		mov	sp, r7
 974              		.cfi_def_cfa_register 13
 975              		@ sp needed
 976 0038 80BD     		pop	{r7, pc}
 977              		.cfi_endproc
 978              	.LFE19:
 979              		.size	SPIS_PutArray, .-SPIS_PutArray
 980 003a 00BF     		.section	.text.SPIS_ClearFIFO,"ax",%progbits
 981              		.align	2
 982              		.global	SPIS_ClearFIFO
 983              		.thumb
 984              		.thumb_func
 985              		.type	SPIS_ClearFIFO, %function
 986              	SPIS_ClearFIFO:
 987              	.LFB20:
1060:.\Generated_Source\PSoC5/SPIS.c **** 
1061:.\Generated_Source\PSoC5/SPIS.c **** 
1062:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1063:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearFIFO
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 37


1064:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1065:.\Generated_Source\PSoC5/SPIS.c **** *
1066:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1067:.\Generated_Source\PSoC5/SPIS.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
1068:.\Generated_Source\PSoC5/SPIS.c **** *
1069:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1070:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1071:.\Generated_Source\PSoC5/SPIS.c **** *
1072:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1073:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1074:.\Generated_Source\PSoC5/SPIS.c **** *
1075:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1076:.\Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
1077:.\Generated_Source\PSoC5/SPIS.c **** *
1078:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1079:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearFIFO(void) 
1080:.\Generated_Source\PSoC5/SPIS.c **** {
 988              		.loc 1 1080 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 8
 991              		@ frame_needed = 1, uses_anonymous_args = 0
 992 0000 80B5     		push	{r7, lr}
 993              		.cfi_def_cfa_offset 8
 994              		.cfi_offset 7, -8
 995              		.cfi_offset 14, -4
 996 0002 82B0     		sub	sp, sp, #8
 997              		.cfi_def_cfa_offset 16
 998 0004 00AF     		add	r7, sp, #0
 999              		.cfi_def_cfa_register 7
1081:.\Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
1082:.\Generated_Source\PSoC5/SPIS.c **** 
1083:.\Generated_Source\PSoC5/SPIS.c ****     while((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u)
 1000              		.loc 1 1083 0
 1001 0006 01E0     		b	.L68
 1002              	.L69:
1084:.\Generated_Source\PSoC5/SPIS.c ****     {
1085:.\Generated_Source\PSoC5/SPIS.c ****         CY_GET_REG16(SPIS_RXDATA_PTR);
 1003              		.loc 1 1085 0
 1004 0008 194B     		ldr	r3, .L70
 1005 000a 1B88     		ldrh	r3, [r3]	@ movhi
 1006              	.L68:
1083:.\Generated_Source\PSoC5/SPIS.c ****     {
 1007              		.loc 1 1083 0
 1008 000c 194B     		ldr	r3, .L70+4
 1009 000e 1B78     		ldrb	r3, [r3]
 1010 0010 DBB2     		uxtb	r3, r3
 1011 0012 03F00803 		and	r3, r3, #8
 1012 0016 002B     		cmp	r3, #0
 1013 0018 F6D1     		bne	.L69
1086:.\Generated_Source\PSoC5/SPIS.c ****     }
1087:.\Generated_Source\PSoC5/SPIS.c **** 
1088:.\Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 1014              		.loc 1 1088 0
 1015 001a FFF7FEFF 		bl	CyEnterCriticalSection
 1016 001e 0346     		mov	r3, r0
 1017 0020 FB71     		strb	r3, [r7, #7]
1089:.\Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 38


1090:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_DATA_WIDTH <= 8u)
1091:.\Generated_Source\PSoC5/SPIS.c **** 
1092:.\Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
1093:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
1094:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
1095:.\Generated_Source\PSoC5/SPIS.c **** 
1096:.\Generated_Source\PSoC5/SPIS.c ****     #else
1097:.\Generated_Source\PSoC5/SPIS.c **** 
1098:.\Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
1099:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 1018              		.loc 1 1099 0
 1019 0022 154A     		ldr	r2, .L70+8
 1020 0024 144B     		ldr	r3, .L70+8
 1021 0026 1B78     		ldrb	r3, [r3]
 1022 0028 DBB2     		uxtb	r3, r3
 1023 002a 43F00303 		orr	r3, r3, #3
 1024 002e DBB2     		uxtb	r3, r3
 1025 0030 1370     		strb	r3, [r2]
1100:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 1026              		.loc 1 1100 0
 1027 0032 114A     		ldr	r2, .L70+8
 1028 0034 104B     		ldr	r3, .L70+8
 1029 0036 1B78     		ldrb	r3, [r3]
 1030 0038 DBB2     		uxtb	r3, r3
 1031 003a 23F00303 		bic	r3, r3, #3
 1032 003e DBB2     		uxtb	r3, r3
 1033 0040 1370     		strb	r3, [r2]
1101:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_FIFO_CLR;
 1034              		.loc 1 1101 0
 1035 0042 0E4A     		ldr	r2, .L70+12
 1036 0044 0D4B     		ldr	r3, .L70+12
 1037 0046 1B78     		ldrb	r3, [r3]
 1038 0048 DBB2     		uxtb	r3, r3
 1039 004a 43F00303 		orr	r3, r3, #3
 1040 004e DBB2     		uxtb	r3, r3
 1041 0050 1370     		strb	r3, [r2]
1102:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_FIFO_CLR;
 1042              		.loc 1 1102 0
 1043 0052 0A4A     		ldr	r2, .L70+12
 1044 0054 094B     		ldr	r3, .L70+12
 1045 0056 1B78     		ldrb	r3, [r3]
 1046 0058 DBB2     		uxtb	r3, r3
 1047 005a 23F00303 		bic	r3, r3, #3
 1048 005e DBB2     		uxtb	r3, r3
 1049 0060 1370     		strb	r3, [r2]
1103:.\Generated_Source\PSoC5/SPIS.c **** 
1104:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_DATA_WIDTH <= 8u */
1105:.\Generated_Source\PSoC5/SPIS.c **** 
1106:.\Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 1050              		.loc 1 1106 0
 1051 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1052 0064 1846     		mov	r0, r3
 1053 0066 FFF7FEFF 		bl	CyExitCriticalSection
1107:.\Generated_Source\PSoC5/SPIS.c **** }
 1054              		.loc 1 1107 0
 1055 006a 0837     		adds	r7, r7, #8
 1056              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 39


 1057 006c BD46     		mov	sp, r7
 1058              		.cfi_def_cfa_register 13
 1059              		@ sp needed
 1060 006e 80BD     		pop	{r7, pc}
 1061              	.L71:
 1062              		.align	2
 1063              	.L70:
 1064 0070 5A640040 		.word	1073767514
 1065 0074 6B640040 		.word	1073767531
 1066 0078 9A640040 		.word	1073767578
 1067 007c 9B640040 		.word	1073767579
 1068              		.cfi_endproc
 1069              	.LFE20:
 1070              		.size	SPIS_ClearFIFO, .-SPIS_ClearFIFO
 1071              		.section	.text.SPIS_EnableInt,"ax",%progbits
 1072              		.align	2
 1073              		.global	SPIS_EnableInt
 1074              		.thumb
 1075              		.thumb_func
 1076              		.type	SPIS_EnableInt, %function
 1077              	SPIS_EnableInt:
 1078              	.LFB21:
1108:.\Generated_Source\PSoC5/SPIS.c **** 
1109:.\Generated_Source\PSoC5/SPIS.c **** 
1110:.\Generated_Source\PSoC5/SPIS.c **** /* Following functions are for version Compatibility, they are obsolete.
1111:.\Generated_Source\PSoC5/SPIS.c **** *  Please do not use it in new projects.
1112:.\Generated_Source\PSoC5/SPIS.c **** */
1113:.\Generated_Source\PSoC5/SPIS.c **** 
1114:.\Generated_Source\PSoC5/SPIS.c **** 
1115:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1116:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableInt
1117:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1118:.\Generated_Source\PSoC5/SPIS.c **** *
1119:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1120:.\Generated_Source\PSoC5/SPIS.c **** *  Enable internal interrupt generation.
1121:.\Generated_Source\PSoC5/SPIS.c **** *
1122:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1123:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1124:.\Generated_Source\PSoC5/SPIS.c **** *
1125:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1126:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1127:.\Generated_Source\PSoC5/SPIS.c **** *
1128:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
1129:.\Generated_Source\PSoC5/SPIS.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1130:.\Generated_Source\PSoC5/SPIS.c **** *
1131:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1132:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableInt(void) 
1133:.\Generated_Source\PSoC5/SPIS.c **** {
 1079              		.loc 1 1133 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 1, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 1084 0000 80B4     		push	{r7}
 1085              		.cfi_def_cfa_offset 4
 1086              		.cfi_offset 7, -4
 1087 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 40


 1088              		.cfi_def_cfa_register 7
1134:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
1135:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
1136:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
1137:.\Generated_Source\PSoC5/SPIS.c **** 
1138:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
1139:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
1140:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
1141:.\Generated_Source\PSoC5/SPIS.c **** }
 1089              		.loc 1 1141 0
 1090 0004 BD46     		mov	sp, r7
 1091              		.cfi_def_cfa_register 13
 1092              		@ sp needed
 1093 0006 5DF8047B 		ldr	r7, [sp], #4
 1094              		.cfi_restore 7
 1095              		.cfi_def_cfa_offset 0
 1096 000a 7047     		bx	lr
 1097              		.cfi_endproc
 1098              	.LFE21:
 1099              		.size	SPIS_EnableInt, .-SPIS_EnableInt
 1100              		.section	.text.SPIS_DisableInt,"ax",%progbits
 1101              		.align	2
 1102              		.global	SPIS_DisableInt
 1103              		.thumb
 1104              		.thumb_func
 1105              		.type	SPIS_DisableInt, %function
 1106              	SPIS_DisableInt:
 1107              	.LFB22:
1142:.\Generated_Source\PSoC5/SPIS.c **** 
1143:.\Generated_Source\PSoC5/SPIS.c **** 
1144:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1145:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableInt
1146:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1147:.\Generated_Source\PSoC5/SPIS.c **** *
1148:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1149:.\Generated_Source\PSoC5/SPIS.c **** *  Disable internal interrupt generation.
1150:.\Generated_Source\PSoC5/SPIS.c **** *
1151:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1152:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1153:.\Generated_Source\PSoC5/SPIS.c **** *
1154:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1155:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1156:.\Generated_Source\PSoC5/SPIS.c **** *
1157:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
1158:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1159:.\Generated_Source\PSoC5/SPIS.c **** *
1160:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1161:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableInt(void) 
1162:.\Generated_Source\PSoC5/SPIS.c **** {
 1108              		.loc 1 1162 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 1, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 1113 0000 80B4     		push	{r7}
 1114              		.cfi_def_cfa_offset 4
 1115              		.cfi_offset 7, -4
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 41


 1116 0002 00AF     		add	r7, sp, #0
 1117              		.cfi_def_cfa_register 7
1163:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
1164:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
1165:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
1166:.\Generated_Source\PSoC5/SPIS.c **** 
1167:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
1168:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
1169:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
1170:.\Generated_Source\PSoC5/SPIS.c **** }
 1118              		.loc 1 1170 0
 1119 0004 BD46     		mov	sp, r7
 1120              		.cfi_def_cfa_register 13
 1121              		@ sp needed
 1122 0006 5DF8047B 		ldr	r7, [sp], #4
 1123              		.cfi_restore 7
 1124              		.cfi_def_cfa_offset 0
 1125 000a 7047     		bx	lr
 1126              		.cfi_endproc
 1127              	.LFE22:
 1128              		.size	SPIS_DisableInt, .-SPIS_DisableInt
 1129              		.section	.text.SPIS_SetInterruptMode,"ax",%progbits
 1130              		.align	2
 1131              		.global	SPIS_SetInterruptMode
 1132              		.thumb
 1133              		.thumb_func
 1134              		.type	SPIS_SetInterruptMode, %function
 1135              	SPIS_SetInterruptMode:
 1136              	.LFB23:
1171:.\Generated_Source\PSoC5/SPIS.c **** 
1172:.\Generated_Source\PSoC5/SPIS.c **** 
1173:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetInterruptMode
1175:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1176:.\Generated_Source\PSoC5/SPIS.c **** *
1177:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1178:.\Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
1179:.\Generated_Source\PSoC5/SPIS.c **** *
1180:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1181:.\Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1182:.\Generated_Source\PSoC5/SPIS.c **** *  header file).
1183:.\Generated_Source\PSoC5/SPIS.c **** *
1184:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1185:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1186:.\Generated_Source\PSoC5/SPIS.c **** *
1187:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
1188:.\Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
1189:.\Generated_Source\PSoC5/SPIS.c **** *
1190:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_SetInterruptMode(uint8 intSrc) 
1192:.\Generated_Source\PSoC5/SPIS.c **** {
 1137              		.loc 1 1192 0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 8
 1140              		@ frame_needed = 1, uses_anonymous_args = 0
 1141              		@ link register save eliminated.
 1142 0000 80B4     		push	{r7}
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 42


 1143              		.cfi_def_cfa_offset 4
 1144              		.cfi_offset 7, -4
 1145 0002 83B0     		sub	sp, sp, #12
 1146              		.cfi_def_cfa_offset 16
 1147 0004 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
 1149 0006 0346     		mov	r3, r0
 1150 0008 FB71     		strb	r3, [r7, #7]
1193:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_MASK_REG  = intSrc;
 1151              		.loc 1 1193 0
 1152 000a 054A     		ldr	r2, .L75
 1153 000c FB79     		ldrb	r3, [r7, #7]
 1154 000e 1370     		strb	r3, [r2]
1194:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = intSrc;
 1155              		.loc 1 1194 0
 1156 0010 044A     		ldr	r2, .L75+4
 1157 0012 FB79     		ldrb	r3, [r7, #7]
 1158 0014 1370     		strb	r3, [r2]
1195:.\Generated_Source\PSoC5/SPIS.c **** }
 1159              		.loc 1 1195 0
 1160 0016 0C37     		adds	r7, r7, #12
 1161              		.cfi_def_cfa_offset 4
 1162 0018 BD46     		mov	sp, r7
 1163              		.cfi_def_cfa_register 13
 1164              		@ sp needed
 1165 001a 5DF8047B 		ldr	r7, [sp], #4
 1166              		.cfi_restore 7
 1167              		.cfi_def_cfa_offset 0
 1168 001e 7047     		bx	lr
 1169              	.L76:
 1170              		.align	2
 1171              	.L75:
 1172 0020 8D640040 		.word	1073767565
 1173 0024 8B640040 		.word	1073767563
 1174              		.cfi_endproc
 1175              	.LFE23:
 1176              		.size	SPIS_SetInterruptMode, .-SPIS_SetInterruptMode
 1177              		.section	.text.SPIS_ReadStatus,"ax",%progbits
 1178              		.align	2
 1179              		.global	SPIS_ReadStatus
 1180              		.thumb
 1181              		.thumb_func
 1182              		.type	SPIS_ReadStatus, %function
 1183              	SPIS_ReadStatus:
 1184              	.LFB24:
1196:.\Generated_Source\PSoC5/SPIS.c **** 
1197:.\Generated_Source\PSoC5/SPIS.c **** 
1198:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1199:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadStatus
1200:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1201:.\Generated_Source\PSoC5/SPIS.c **** *
1202:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1203:.\Generated_Source\PSoC5/SPIS.c **** *  Read the status register for the component.
1204:.\Generated_Source\PSoC5/SPIS.c **** *
1205:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1206:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1207:.\Generated_Source\PSoC5/SPIS.c **** *
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 43


1208:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1209:.\Generated_Source\PSoC5/SPIS.c **** *  Contents of the status register.
1210:.\Generated_Source\PSoC5/SPIS.c **** *
1211:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
1212:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatus - used to store in software status register,
1213:.\Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
1214:.\Generated_Source\PSoC5/SPIS.c **** *
1215:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
1216:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the status register for error detection
1217:.\Generated_Source\PSoC5/SPIS.c **** *  and flow control.
1218:.\Generated_Source\PSoC5/SPIS.c **** *
1219:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1220:.\Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
1221:.\Generated_Source\PSoC5/SPIS.c **** *
1222:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
1223:.\Generated_Source\PSoC5/SPIS.c **** *  No.
1224:.\Generated_Source\PSoC5/SPIS.c **** *
1225:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1226:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadStatus(void) 
1227:.\Generated_Source\PSoC5/SPIS.c **** {
 1185              		.loc 1 1227 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 8
 1188              		@ frame_needed = 1, uses_anonymous_args = 0
 1189              		@ link register save eliminated.
 1190 0000 80B4     		push	{r7}
 1191              		.cfi_def_cfa_offset 4
 1192              		.cfi_offset 7, -4
 1193 0002 83B0     		sub	sp, sp, #12
 1194              		.cfi_def_cfa_offset 16
 1195 0004 00AF     		add	r7, sp, #0
 1196              		.cfi_def_cfa_register 7
1228:.\Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
1229:.\Generated_Source\PSoC5/SPIS.c **** 
1230:.\Generated_Source\PSoC5/SPIS.c ****     #if ((SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED))
1231:.\Generated_Source\PSoC5/SPIS.c **** 
1232:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableInt();
1233:.\Generated_Source\PSoC5/SPIS.c **** 
1234:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx) |
1235:.\Generated_Source\PSoC5/SPIS.c ****               (SPIS_GET_STATUS_RX(SPIS_swStatusRx) & (uint8)~SPIS_STS_RX_FIFO_FULL);
1236:.\Generated_Source\PSoC5/SPIS.c **** 
1237:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = 0u;
1238:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusRx = 0u;
1239:.\Generated_Source\PSoC5/SPIS.c **** 
1240:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
1241:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableInt();
1242:.\Generated_Source\PSoC5/SPIS.c **** 
1243:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !((SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED)) */
1244:.\Generated_Source\PSoC5/SPIS.c **** 
1245:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_TX_STATUS_REG | (SPIS_RX_STATUS_REG &
 1197              		.loc 1 1245 0
 1198 0006 0A4B     		ldr	r3, .L79
 1199 0008 1B78     		ldrb	r3, [r3]
 1200 000a DBB2     		uxtb	r3, r3
 1201 000c DAB2     		uxtb	r2, r3
 1202 000e 094B     		ldr	r3, .L79+4
 1203 0010 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 44


 1204 0012 DBB2     		uxtb	r3, r3
 1205 0014 DBB2     		uxtb	r3, r3
 1206 0016 23F04003 		bic	r3, r3, #64
 1207 001a DBB2     		uxtb	r3, r3
 1208 001c 1343     		orrs	r3, r3, r2
 1209 001e DBB2     		uxtb	r3, r3
 1210 0020 FB71     		strb	r3, [r7, #7]
1246:.\Generated_Source\PSoC5/SPIS.c ****                                                       (uint8)~SPIS_STS_RX_FIFO_FULL);
1247:.\Generated_Source\PSoC5/SPIS.c **** 
1248:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* (SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED) */
1249:.\Generated_Source\PSoC5/SPIS.c **** 
1250:.\Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 1211              		.loc 1 1250 0
 1212 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1251:.\Generated_Source\PSoC5/SPIS.c **** }
 1213              		.loc 1 1251 0
 1214 0024 1846     		mov	r0, r3
 1215 0026 0C37     		adds	r7, r7, #12
 1216              		.cfi_def_cfa_offset 4
 1217 0028 BD46     		mov	sp, r7
 1218              		.cfi_def_cfa_register 13
 1219              		@ sp needed
 1220 002a 5DF8047B 		ldr	r7, [sp], #4
 1221              		.cfi_restore 7
 1222              		.cfi_def_cfa_offset 0
 1223 002e 7047     		bx	lr
 1224              	.L80:
 1225              		.align	2
 1226              	.L79:
 1227 0030 6D640040 		.word	1073767533
 1228 0034 6B640040 		.word	1073767531
 1229              		.cfi_endproc
 1230              	.LFE24:
 1231              		.size	SPIS_ReadStatus, .-SPIS_ReadStatus
 1232              		.text
 1233              	.Letext0:
 1234              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1235              		.section	.debug_info,"",%progbits
 1236              	.Ldebug_info0:
 1237 0000 2D040000 		.4byte	0x42d
 1238 0004 0400     		.2byte	0x4
 1239 0006 00000000 		.4byte	.Ldebug_abbrev0
 1240 000a 04       		.byte	0x4
 1241 000b 01       		.uleb128 0x1
 1242 000c 83010000 		.4byte	.LASF55
 1243 0010 01       		.byte	0x1
 1244 0011 26000000 		.4byte	.LASF56
 1245 0015 E3020000 		.4byte	.LASF57
 1246 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1247 001d 00000000 		.4byte	0
 1248 0021 00000000 		.4byte	.Ldebug_line0
 1249 0025 02       		.uleb128 0x2
 1250 0026 01       		.byte	0x1
 1251 0027 06       		.byte	0x6
 1252 0028 7C030000 		.4byte	.LASF0
 1253 002c 02       		.uleb128 0x2
 1254 002d 01       		.byte	0x1
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 45


 1255 002e 08       		.byte	0x8
 1256 002f 64010000 		.4byte	.LASF1
 1257 0033 02       		.uleb128 0x2
 1258 0034 02       		.byte	0x2
 1259 0035 05       		.byte	0x5
 1260 0036 2A030000 		.4byte	.LASF2
 1261 003a 02       		.uleb128 0x2
 1262 003b 02       		.byte	0x2
 1263 003c 07       		.byte	0x7
 1264 003d 88030000 		.4byte	.LASF3
 1265 0041 02       		.uleb128 0x2
 1266 0042 04       		.byte	0x4
 1267 0043 05       		.byte	0x5
 1268 0044 5A030000 		.4byte	.LASF4
 1269 0048 02       		.uleb128 0x2
 1270 0049 04       		.byte	0x4
 1271 004a 07       		.byte	0x7
 1272 004b FD000000 		.4byte	.LASF5
 1273 004f 02       		.uleb128 0x2
 1274 0050 08       		.byte	0x8
 1275 0051 05       		.byte	0x5
 1276 0052 BE020000 		.4byte	.LASF6
 1277 0056 02       		.uleb128 0x2
 1278 0057 08       		.byte	0x8
 1279 0058 07       		.byte	0x7
 1280 0059 62020000 		.4byte	.LASF7
 1281 005d 03       		.uleb128 0x3
 1282 005e 04       		.byte	0x4
 1283 005f 05       		.byte	0x5
 1284 0060 696E7400 		.ascii	"int\000"
 1285 0064 02       		.uleb128 0x2
 1286 0065 04       		.byte	0x4
 1287 0066 07       		.byte	0x7
 1288 0067 55020000 		.4byte	.LASF8
 1289 006b 04       		.uleb128 0x4
 1290 006c 0F010000 		.4byte	.LASF9
 1291 0070 02       		.byte	0x2
 1292 0071 3801     		.2byte	0x138
 1293 0073 2C000000 		.4byte	0x2c
 1294 0077 04       		.uleb128 0x4
 1295 0078 1F020000 		.4byte	.LASF10
 1296 007c 02       		.byte	0x2
 1297 007d 3901     		.2byte	0x139
 1298 007f 3A000000 		.4byte	0x3a
 1299 0083 02       		.uleb128 0x2
 1300 0084 04       		.byte	0x4
 1301 0085 04       		.byte	0x4
 1302 0086 ED000000 		.4byte	.LASF11
 1303 008a 02       		.uleb128 0x2
 1304 008b 08       		.byte	0x8
 1305 008c 04       		.byte	0x4
 1306 008d 11020000 		.4byte	.LASF12
 1307 0091 02       		.uleb128 0x2
 1308 0092 01       		.byte	0x1
 1309 0093 08       		.byte	0x8
 1310 0094 DE020000 		.4byte	.LASF13
 1311 0098 04       		.uleb128 0x4
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 46


 1312 0099 F8000000 		.4byte	.LASF14
 1313 009d 02       		.byte	0x2
 1314 009e E201     		.2byte	0x1e2
 1315 00a0 A4000000 		.4byte	0xa4
 1316 00a4 05       		.uleb128 0x5
 1317 00a5 6B000000 		.4byte	0x6b
 1318 00a9 04       		.uleb128 0x4
 1319 00aa 00000000 		.4byte	.LASF15
 1320 00ae 02       		.byte	0x2
 1321 00af E301     		.2byte	0x1e3
 1322 00b1 B5000000 		.4byte	0xb5
 1323 00b5 05       		.uleb128 0x5
 1324 00b6 77000000 		.4byte	0x77
 1325 00ba 02       		.uleb128 0x2
 1326 00bb 04       		.byte	0x4
 1327 00bc 07       		.byte	0x7
 1328 00bd A5020000 		.4byte	.LASF16
 1329 00c1 06       		.uleb128 0x6
 1330 00c2 79020000 		.4byte	.LASF17
 1331 00c6 01       		.byte	0x1
 1332 00c7 43       		.byte	0x43
 1333 00c8 00000000 		.4byte	.LFB0
 1334 00cc 30000000 		.4byte	.LFE0-.LFB0
 1335 00d0 01       		.uleb128 0x1
 1336 00d1 9C       		.byte	0x9c
 1337 00d2 07       		.uleb128 0x7
 1338 00d3 26020000 		.4byte	.LASF19
 1339 00d7 01       		.byte	0x1
 1340 00d8 8E       		.byte	0x8e
 1341 00d9 00000000 		.4byte	.LFB1
 1342 00dd 58000000 		.4byte	.LFE1-.LFB1
 1343 00e1 01       		.uleb128 0x1
 1344 00e2 9C       		.byte	0x9c
 1345 00e3 F6000000 		.4byte	0xf6
 1346 00e7 08       		.uleb128 0x8
 1347 00e8 3E010000 		.4byte	.LASF21
 1348 00ec 01       		.byte	0x1
 1349 00ed 90       		.byte	0x90
 1350 00ee 6B000000 		.4byte	0x6b
 1351 00f2 02       		.uleb128 0x2
 1352 00f3 91       		.byte	0x91
 1353 00f4 77       		.sleb128 -9
 1354 00f5 00       		.byte	0
 1355 00f6 06       		.uleb128 0x6
 1356 00f7 1B000000 		.4byte	.LASF18
 1357 00fb 01       		.byte	0x1
 1358 00fc BB       		.byte	0xbb
 1359 00fd 00000000 		.4byte	.LFB2
 1360 0101 20000000 		.4byte	.LFE2-.LFB2
 1361 0105 01       		.uleb128 0x1
 1362 0106 9C       		.byte	0x9c
 1363 0107 07       		.uleb128 0x7
 1364 0108 9B030000 		.4byte	.LASF20
 1365 010c 01       		.byte	0x1
 1366 010d D8       		.byte	0xd8
 1367 010e 00000000 		.4byte	.LFB3
 1368 0112 44000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 47


 1369 0116 01       		.uleb128 0x1
 1370 0117 9C       		.byte	0x9c
 1371 0118 2B010000 		.4byte	0x12b
 1372 011c 08       		.uleb128 0x8
 1373 011d 3E010000 		.4byte	.LASF21
 1374 0121 01       		.byte	0x1
 1375 0122 DA       		.byte	0xda
 1376 0123 6B000000 		.4byte	0x6b
 1377 0127 02       		.uleb128 0x2
 1378 0128 91       		.byte	0x91
 1379 0129 77       		.sleb128 -9
 1380 012a 00       		.byte	0
 1381 012b 09       		.uleb128 0x9
 1382 012c 72010000 		.4byte	.LASF22
 1383 0130 01       		.byte	0x1
 1384 0131 FD       		.byte	0xfd
 1385 0132 00000000 		.4byte	.LFB4
 1386 0136 0C000000 		.4byte	.LFE4-.LFB4
 1387 013a 01       		.uleb128 0x1
 1388 013b 9C       		.byte	0x9c
 1389 013c 0A       		.uleb128 0xa
 1390 013d 15010000 		.4byte	.LASF23
 1391 0141 01       		.byte	0x1
 1392 0142 1601     		.2byte	0x116
 1393 0144 00000000 		.4byte	.LFB5
 1394 0148 0C000000 		.4byte	.LFE5-.LFB5
 1395 014c 01       		.uleb128 0x1
 1396 014d 9C       		.byte	0x9c
 1397 014e 0A       		.uleb128 0xa
 1398 014f 83020000 		.4byte	.LASF24
 1399 0153 01       		.byte	0x1
 1400 0154 2F01     		.2byte	0x12f
 1401 0156 00000000 		.4byte	.LFB6
 1402 015a 0C000000 		.4byte	.LFE6-.LFB6
 1403 015e 01       		.uleb128 0x1
 1404 015f 9C       		.byte	0x9c
 1405 0160 0A       		.uleb128 0xa
 1406 0161 67000000 		.4byte	.LASF25
 1407 0165 01       		.byte	0x1
 1408 0166 4801     		.2byte	0x148
 1409 0168 00000000 		.4byte	.LFB7
 1410 016c 0C000000 		.4byte	.LFE7-.LFB7
 1411 0170 01       		.uleb128 0x1
 1412 0171 9C       		.byte	0x9c
 1413 0172 0B       		.uleb128 0xb
 1414 0173 A5030000 		.4byte	.LASF26
 1415 0177 01       		.byte	0x1
 1416 0178 6201     		.2byte	0x162
 1417 017a 00000000 		.4byte	.LFB8
 1418 017e 20000000 		.4byte	.LFE8-.LFB8
 1419 0182 01       		.uleb128 0x1
 1420 0183 9C       		.byte	0x9c
 1421 0184 98010000 		.4byte	0x198
 1422 0188 0C       		.uleb128 0xc
 1423 0189 18020000 		.4byte	.LASF28
 1424 018d 01       		.byte	0x1
 1425 018e 6201     		.2byte	0x162
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 48


 1426 0190 6B000000 		.4byte	0x6b
 1427 0194 02       		.uleb128 0x2
 1428 0195 91       		.byte	0x91
 1429 0196 77       		.sleb128 -9
 1430 0197 00       		.byte	0
 1431 0198 0B       		.uleb128 0xb
 1432 0199 C8030000 		.4byte	.LASF27
 1433 019d 01       		.byte	0x1
 1434 019e 7A01     		.2byte	0x17a
 1435 01a0 00000000 		.4byte	.LFB9
 1436 01a4 20000000 		.4byte	.LFE9-.LFB9
 1437 01a8 01       		.uleb128 0x1
 1438 01a9 9C       		.byte	0x9c
 1439 01aa BE010000 		.4byte	0x1be
 1440 01ae 0C       		.uleb128 0xc
 1441 01af 18020000 		.4byte	.LASF28
 1442 01b3 01       		.byte	0x1
 1443 01b4 7A01     		.2byte	0x17a
 1444 01b6 6B000000 		.4byte	0x6b
 1445 01ba 02       		.uleb128 0x2
 1446 01bb 91       		.byte	0x91
 1447 01bc 77       		.sleb128 -9
 1448 01bd 00       		.byte	0
 1449 01be 0D       		.uleb128 0xd
 1450 01bf AC000000 		.4byte	.LASF30
 1451 01c3 01       		.byte	0x1
 1452 01c4 9C01     		.2byte	0x19c
 1453 01c6 6B000000 		.4byte	0x6b
 1454 01ca 00000000 		.4byte	.LFB10
 1455 01ce 20000000 		.4byte	.LFE10-.LFB10
 1456 01d2 01       		.uleb128 0x1
 1457 01d3 9C       		.byte	0x9c
 1458 01d4 E8010000 		.4byte	0x1e8
 1459 01d8 0E       		.uleb128 0xe
 1460 01d9 63030000 		.4byte	.LASF29
 1461 01dd 01       		.byte	0x1
 1462 01de 9E01     		.2byte	0x19e
 1463 01e0 6B000000 		.4byte	0x6b
 1464 01e4 02       		.uleb128 0x2
 1465 01e5 91       		.byte	0x91
 1466 01e6 77       		.sleb128 -9
 1467 01e7 00       		.byte	0
 1468 01e8 0D       		.uleb128 0xd
 1469 01e9 CC020000 		.4byte	.LASF31
 1470 01ed 01       		.byte	0x1
 1471 01ee D101     		.2byte	0x1d1
 1472 01f0 6B000000 		.4byte	0x6b
 1473 01f4 00000000 		.4byte	.LFB11
 1474 01f8 20000000 		.4byte	.LFE11-.LFB11
 1475 01fc 01       		.uleb128 0x1
 1476 01fd 9C       		.byte	0x9c
 1477 01fe 12020000 		.4byte	0x212
 1478 0202 0E       		.uleb128 0xe
 1479 0203 63030000 		.4byte	.LASF29
 1480 0207 01       		.byte	0x1
 1481 0208 D301     		.2byte	0x1d3
 1482 020a 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 49


 1483 020e 02       		.uleb128 0x2
 1484 020f 91       		.byte	0x91
 1485 0210 77       		.sleb128 -9
 1486 0211 00       		.byte	0
 1487 0212 0B       		.uleb128 0xb
 1488 0213 56000000 		.4byte	.LASF32
 1489 0217 01       		.byte	0x1
 1490 0218 0C02     		.2byte	0x20c
 1491 021a 00000000 		.4byte	.LFB12
 1492 021e 34000000 		.4byte	.LFE12-.LFB12
 1493 0222 01       		.uleb128 0x1
 1494 0223 9C       		.byte	0x9c
 1495 0224 38020000 		.4byte	0x238
 1496 0228 0C       		.uleb128 0xc
 1497 0229 9E020000 		.4byte	.LASF33
 1498 022d 01       		.byte	0x1
 1499 022e 0C02     		.2byte	0x20c
 1500 0230 77000000 		.4byte	0x77
 1501 0234 02       		.uleb128 0x2
 1502 0235 91       		.byte	0x91
 1503 0236 76       		.sleb128 -10
 1504 0237 00       		.byte	0
 1505 0238 0B       		.uleb128 0xb
 1506 0239 06000000 		.4byte	.LASF34
 1507 023d 01       		.byte	0x1
 1508 023e 6B02     		.2byte	0x26b
 1509 0240 00000000 		.4byte	.LFB13
 1510 0244 20000000 		.4byte	.LFE13-.LFB13
 1511 0248 01       		.uleb128 0x1
 1512 0249 9C       		.byte	0x9c
 1513 024a 5E020000 		.4byte	0x25e
 1514 024e 0C       		.uleb128 0xc
 1515 024f BD030000 		.4byte	.LASF35
 1516 0253 01       		.byte	0x1
 1517 0254 6B02     		.2byte	0x26b
 1518 0256 77000000 		.4byte	0x77
 1519 025a 02       		.uleb128 0x2
 1520 025b 91       		.byte	0x91
 1521 025c 76       		.sleb128 -10
 1522 025d 00       		.byte	0
 1523 025e 0D       		.uleb128 0xd
 1524 025f 89000000 		.4byte	.LASF36
 1525 0263 01       		.byte	0x1
 1526 0264 9502     		.2byte	0x295
 1527 0266 77000000 		.4byte	0x77
 1528 026a 00000000 		.4byte	.LFB14
 1529 026e 20000000 		.4byte	.LFE14-.LFB14
 1530 0272 01       		.uleb128 0x1
 1531 0273 9C       		.byte	0x9c
 1532 0274 88020000 		.4byte	0x288
 1533 0278 0E       		.uleb128 0xe
 1534 0279 D1000000 		.4byte	.LASF37
 1535 027d 01       		.byte	0x1
 1536 027e 9702     		.2byte	0x297
 1537 0280 77000000 		.4byte	0x77
 1538 0284 02       		.uleb128 0x2
 1539 0285 91       		.byte	0x91
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 50


 1540 0286 76       		.sleb128 -10
 1541 0287 00       		.byte	0
 1542 0288 0D       		.uleb128 0xd
 1543 0289 4F010000 		.4byte	.LASF38
 1544 028d 01       		.byte	0x1
 1545 028e D702     		.2byte	0x2d7
 1546 0290 6B000000 		.4byte	0x6b
 1547 0294 00000000 		.4byte	.LFB15
 1548 0298 30000000 		.4byte	.LFE15-.LFB15
 1549 029c 01       		.uleb128 0x1
 1550 029d 9C       		.byte	0x9c
 1551 029e B2020000 		.4byte	0x2b2
 1552 02a2 0E       		.uleb128 0xe
 1553 02a3 F3000000 		.4byte	.LASF39
 1554 02a7 01       		.byte	0x1
 1555 02a8 D902     		.2byte	0x2d9
 1556 02aa 6B000000 		.4byte	0x6b
 1557 02ae 02       		.uleb128 0x2
 1558 02af 91       		.byte	0x91
 1559 02b0 77       		.sleb128 -9
 1560 02b1 00       		.byte	0
 1561 02b2 0D       		.uleb128 0xd
 1562 02b3 D8000000 		.4byte	.LASF40
 1563 02b7 01       		.byte	0x1
 1564 02b8 1803     		.2byte	0x318
 1565 02ba 6B000000 		.4byte	0x6b
 1566 02be 00000000 		.4byte	.LFB16
 1567 02c2 44000000 		.4byte	.LFE16-.LFB16
 1568 02c6 01       		.uleb128 0x1
 1569 02c7 9C       		.byte	0x9c
 1570 02c8 DC020000 		.4byte	0x2dc
 1571 02cc 0E       		.uleb128 0xe
 1572 02cd F3000000 		.4byte	.LASF39
 1573 02d1 01       		.byte	0x1
 1574 02d2 1A03     		.2byte	0x31a
 1575 02d4 6B000000 		.4byte	0x6b
 1576 02d8 02       		.uleb128 0x2
 1577 02d9 91       		.byte	0x91
 1578 02da 77       		.sleb128 -9
 1579 02db 00       		.byte	0
 1580 02dc 0A       		.uleb128 0xa
 1581 02dd BE000000 		.4byte	.LASF41
 1582 02e1 01       		.byte	0x1
 1583 02e2 6A03     		.2byte	0x36a
 1584 02e4 00000000 		.4byte	.LFB17
 1585 02e8 28000000 		.4byte	.LFE17-.LFB17
 1586 02ec 01       		.uleb128 0x1
 1587 02ed 9C       		.byte	0x9c
 1588 02ee 0F       		.uleb128 0xf
 1589 02ef 99000000 		.4byte	.LASF42
 1590 02f3 01       		.byte	0x1
 1591 02f4 A303     		.2byte	0x3a3
 1592 02f6 00000000 		.4byte	.LFB18
 1593 02fa 64000000 		.4byte	.LFE18-.LFB18
 1594 02fe 01       		.uleb128 0x1
 1595 02ff 9C       		.byte	0x9c
 1596 0300 14030000 		.4byte	0x314
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 51


 1597 0304 0E       		.uleb128 0xe
 1598 0305 3E010000 		.4byte	.LASF21
 1599 0309 01       		.byte	0x1
 1600 030a A503     		.2byte	0x3a5
 1601 030c 6B000000 		.4byte	0x6b
 1602 0310 02       		.uleb128 0x2
 1603 0311 91       		.byte	0x91
 1604 0312 77       		.sleb128 -9
 1605 0313 00       		.byte	0
 1606 0314 0F       		.uleb128 0xf
 1607 0315 26010000 		.4byte	.LASF43
 1608 0319 01       		.byte	0x1
 1609 031a 1704     		.2byte	0x417
 1610 031c 00000000 		.4byte	.LFB19
 1611 0320 3A000000 		.4byte	.LFE19-.LFB19
 1612 0324 01       		.uleb128 0x1
 1613 0325 9C       		.byte	0x9c
 1614 0326 58030000 		.4byte	0x358
 1615 032a 0C       		.uleb128 0xc
 1616 032b 43030000 		.4byte	.LASF44
 1617 032f 01       		.byte	0x1
 1618 0330 1704     		.2byte	0x417
 1619 0332 58030000 		.4byte	0x358
 1620 0336 02       		.uleb128 0x2
 1621 0337 91       		.byte	0x91
 1622 0338 6C       		.sleb128 -20
 1623 0339 0C       		.uleb128 0xc
 1624 033a 34010000 		.4byte	.LASF45
 1625 033e 01       		.byte	0x1
 1626 033f 1704     		.2byte	0x417
 1627 0341 6B000000 		.4byte	0x6b
 1628 0345 02       		.uleb128 0x2
 1629 0346 91       		.byte	0x91
 1630 0347 6B       		.sleb128 -21
 1631 0348 0E       		.uleb128 0xe
 1632 0349 95020000 		.4byte	.LASF46
 1633 034d 01       		.byte	0x1
 1634 034e 1A04     		.2byte	0x41a
 1635 0350 6B000000 		.4byte	0x6b
 1636 0354 02       		.uleb128 0x2
 1637 0355 91       		.byte	0x91
 1638 0356 77       		.sleb128 -9
 1639 0357 00       		.byte	0
 1640 0358 10       		.uleb128 0x10
 1641 0359 04       		.byte	0x4
 1642 035a 5E030000 		.4byte	0x35e
 1643 035e 11       		.uleb128 0x11
 1644 035f 77000000 		.4byte	0x77
 1645 0363 0F       		.uleb128 0xf
 1646 0364 6D030000 		.4byte	.LASF47
 1647 0368 01       		.byte	0x1
 1648 0369 3704     		.2byte	0x437
 1649 036b 00000000 		.4byte	.LFB20
 1650 036f 80000000 		.4byte	.LFE20-.LFB20
 1651 0373 01       		.uleb128 0x1
 1652 0374 9C       		.byte	0x9c
 1653 0375 89030000 		.4byte	0x389
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 52


 1654 0379 0E       		.uleb128 0xe
 1655 037a 3E010000 		.4byte	.LASF21
 1656 037e 01       		.byte	0x1
 1657 037f 3904     		.2byte	0x439
 1658 0381 6B000000 		.4byte	0x6b
 1659 0385 02       		.uleb128 0x2
 1660 0386 91       		.byte	0x91
 1661 0387 77       		.sleb128 -9
 1662 0388 00       		.byte	0
 1663 0389 0A       		.uleb128 0xa
 1664 038a 34030000 		.4byte	.LASF48
 1665 038e 01       		.byte	0x1
 1666 038f 6C04     		.2byte	0x46c
 1667 0391 00000000 		.4byte	.LFB21
 1668 0395 0C000000 		.4byte	.LFE21-.LFB21
 1669 0399 01       		.uleb128 0x1
 1670 039a 9C       		.byte	0x9c
 1671 039b 0A       		.uleb128 0xa
 1672 039c AE020000 		.4byte	.LASF49
 1673 03a0 01       		.byte	0x1
 1674 03a1 8904     		.2byte	0x489
 1675 03a3 00000000 		.4byte	.LFB22
 1676 03a7 0C000000 		.4byte	.LFE22-.LFB22
 1677 03ab 01       		.uleb128 0x1
 1678 03ac 9C       		.byte	0x9c
 1679 03ad 0B       		.uleb128 0xb
 1680 03ae 32020000 		.4byte	.LASF50
 1681 03b2 01       		.byte	0x1
 1682 03b3 A704     		.2byte	0x4a7
 1683 03b5 00000000 		.4byte	.LFB23
 1684 03b9 28000000 		.4byte	.LFE23-.LFB23
 1685 03bd 01       		.uleb128 0x1
 1686 03be 9C       		.byte	0x9c
 1687 03bf D3030000 		.4byte	0x3d3
 1688 03c3 0C       		.uleb128 0xc
 1689 03c4 18020000 		.4byte	.LASF28
 1690 03c8 01       		.byte	0x1
 1691 03c9 A704     		.2byte	0x4a7
 1692 03cb 6B000000 		.4byte	0x6b
 1693 03cf 02       		.uleb128 0x2
 1694 03d0 91       		.byte	0x91
 1695 03d1 77       		.sleb128 -9
 1696 03d2 00       		.byte	0
 1697 03d3 0D       		.uleb128 0xd
 1698 03d4 4A030000 		.4byte	.LASF51
 1699 03d8 01       		.byte	0x1
 1700 03d9 CA04     		.2byte	0x4ca
 1701 03db 6B000000 		.4byte	0x6b
 1702 03df 00000000 		.4byte	.LFB24
 1703 03e3 38000000 		.4byte	.LFE24-.LFB24
 1704 03e7 01       		.uleb128 0x1
 1705 03e8 9C       		.byte	0x9c
 1706 03e9 FD030000 		.4byte	0x3fd
 1707 03ed 0E       		.uleb128 0xe
 1708 03ee 63030000 		.4byte	.LASF29
 1709 03f2 01       		.byte	0x1
 1710 03f3 CC04     		.2byte	0x4cc
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 53


 1711 03f5 6B000000 		.4byte	0x6b
 1712 03f9 02       		.uleb128 0x2
 1713 03fa 91       		.byte	0x91
 1714 03fb 77       		.sleb128 -9
 1715 03fc 00       		.byte	0
 1716 03fd 12       		.uleb128 0x12
 1717 03fe 48020000 		.4byte	.LASF52
 1718 0402 01       		.byte	0x1
 1719 0403 26       		.byte	0x26
 1720 0404 6B000000 		.4byte	0x6b
 1721 0408 05       		.uleb128 0x5
 1722 0409 03       		.byte	0x3
 1723 040a 00000000 		.4byte	SPIS_initVar
 1724 040e 12       		.uleb128 0x12
 1725 040f 79000000 		.4byte	.LASF53
 1726 0413 01       		.byte	0x1
 1727 0414 28       		.byte	0x28
 1728 0415 A4000000 		.4byte	0xa4
 1729 0419 05       		.uleb128 0x5
 1730 041a 03       		.byte	0x3
 1731 041b 00000000 		.4byte	SPIS_swStatusTx
 1732 041f 12       		.uleb128 0x12
 1733 0420 46000000 		.4byte	.LASF54
 1734 0424 01       		.byte	0x1
 1735 0425 29       		.byte	0x29
 1736 0426 A4000000 		.4byte	0xa4
 1737 042a 05       		.uleb128 0x5
 1738 042b 03       		.byte	0x3
 1739 042c 00000000 		.4byte	SPIS_swStatusRx
 1740 0430 00       		.byte	0
 1741              		.section	.debug_abbrev,"",%progbits
 1742              	.Ldebug_abbrev0:
 1743 0000 01       		.uleb128 0x1
 1744 0001 11       		.uleb128 0x11
 1745 0002 01       		.byte	0x1
 1746 0003 25       		.uleb128 0x25
 1747 0004 0E       		.uleb128 0xe
 1748 0005 13       		.uleb128 0x13
 1749 0006 0B       		.uleb128 0xb
 1750 0007 03       		.uleb128 0x3
 1751 0008 0E       		.uleb128 0xe
 1752 0009 1B       		.uleb128 0x1b
 1753 000a 0E       		.uleb128 0xe
 1754 000b 55       		.uleb128 0x55
 1755 000c 17       		.uleb128 0x17
 1756 000d 11       		.uleb128 0x11
 1757 000e 01       		.uleb128 0x1
 1758 000f 10       		.uleb128 0x10
 1759 0010 17       		.uleb128 0x17
 1760 0011 00       		.byte	0
 1761 0012 00       		.byte	0
 1762 0013 02       		.uleb128 0x2
 1763 0014 24       		.uleb128 0x24
 1764 0015 00       		.byte	0
 1765 0016 0B       		.uleb128 0xb
 1766 0017 0B       		.uleb128 0xb
 1767 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 54


 1768 0019 0B       		.uleb128 0xb
 1769 001a 03       		.uleb128 0x3
 1770 001b 0E       		.uleb128 0xe
 1771 001c 00       		.byte	0
 1772 001d 00       		.byte	0
 1773 001e 03       		.uleb128 0x3
 1774 001f 24       		.uleb128 0x24
 1775 0020 00       		.byte	0
 1776 0021 0B       		.uleb128 0xb
 1777 0022 0B       		.uleb128 0xb
 1778 0023 3E       		.uleb128 0x3e
 1779 0024 0B       		.uleb128 0xb
 1780 0025 03       		.uleb128 0x3
 1781 0026 08       		.uleb128 0x8
 1782 0027 00       		.byte	0
 1783 0028 00       		.byte	0
 1784 0029 04       		.uleb128 0x4
 1785 002a 16       		.uleb128 0x16
 1786 002b 00       		.byte	0
 1787 002c 03       		.uleb128 0x3
 1788 002d 0E       		.uleb128 0xe
 1789 002e 3A       		.uleb128 0x3a
 1790 002f 0B       		.uleb128 0xb
 1791 0030 3B       		.uleb128 0x3b
 1792 0031 05       		.uleb128 0x5
 1793 0032 49       		.uleb128 0x49
 1794 0033 13       		.uleb128 0x13
 1795 0034 00       		.byte	0
 1796 0035 00       		.byte	0
 1797 0036 05       		.uleb128 0x5
 1798 0037 35       		.uleb128 0x35
 1799 0038 00       		.byte	0
 1800 0039 49       		.uleb128 0x49
 1801 003a 13       		.uleb128 0x13
 1802 003b 00       		.byte	0
 1803 003c 00       		.byte	0
 1804 003d 06       		.uleb128 0x6
 1805 003e 2E       		.uleb128 0x2e
 1806 003f 00       		.byte	0
 1807 0040 3F       		.uleb128 0x3f
 1808 0041 19       		.uleb128 0x19
 1809 0042 03       		.uleb128 0x3
 1810 0043 0E       		.uleb128 0xe
 1811 0044 3A       		.uleb128 0x3a
 1812 0045 0B       		.uleb128 0xb
 1813 0046 3B       		.uleb128 0x3b
 1814 0047 0B       		.uleb128 0xb
 1815 0048 27       		.uleb128 0x27
 1816 0049 19       		.uleb128 0x19
 1817 004a 11       		.uleb128 0x11
 1818 004b 01       		.uleb128 0x1
 1819 004c 12       		.uleb128 0x12
 1820 004d 06       		.uleb128 0x6
 1821 004e 40       		.uleb128 0x40
 1822 004f 18       		.uleb128 0x18
 1823 0050 9642     		.uleb128 0x2116
 1824 0052 19       		.uleb128 0x19
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 55


 1825 0053 00       		.byte	0
 1826 0054 00       		.byte	0
 1827 0055 07       		.uleb128 0x7
 1828 0056 2E       		.uleb128 0x2e
 1829 0057 01       		.byte	0x1
 1830 0058 3F       		.uleb128 0x3f
 1831 0059 19       		.uleb128 0x19
 1832 005a 03       		.uleb128 0x3
 1833 005b 0E       		.uleb128 0xe
 1834 005c 3A       		.uleb128 0x3a
 1835 005d 0B       		.uleb128 0xb
 1836 005e 3B       		.uleb128 0x3b
 1837 005f 0B       		.uleb128 0xb
 1838 0060 27       		.uleb128 0x27
 1839 0061 19       		.uleb128 0x19
 1840 0062 11       		.uleb128 0x11
 1841 0063 01       		.uleb128 0x1
 1842 0064 12       		.uleb128 0x12
 1843 0065 06       		.uleb128 0x6
 1844 0066 40       		.uleb128 0x40
 1845 0067 18       		.uleb128 0x18
 1846 0068 9642     		.uleb128 0x2116
 1847 006a 19       		.uleb128 0x19
 1848 006b 01       		.uleb128 0x1
 1849 006c 13       		.uleb128 0x13
 1850 006d 00       		.byte	0
 1851 006e 00       		.byte	0
 1852 006f 08       		.uleb128 0x8
 1853 0070 34       		.uleb128 0x34
 1854 0071 00       		.byte	0
 1855 0072 03       		.uleb128 0x3
 1856 0073 0E       		.uleb128 0xe
 1857 0074 3A       		.uleb128 0x3a
 1858 0075 0B       		.uleb128 0xb
 1859 0076 3B       		.uleb128 0x3b
 1860 0077 0B       		.uleb128 0xb
 1861 0078 49       		.uleb128 0x49
 1862 0079 13       		.uleb128 0x13
 1863 007a 02       		.uleb128 0x2
 1864 007b 18       		.uleb128 0x18
 1865 007c 00       		.byte	0
 1866 007d 00       		.byte	0
 1867 007e 09       		.uleb128 0x9
 1868 007f 2E       		.uleb128 0x2e
 1869 0080 00       		.byte	0
 1870 0081 3F       		.uleb128 0x3f
 1871 0082 19       		.uleb128 0x19
 1872 0083 03       		.uleb128 0x3
 1873 0084 0E       		.uleb128 0xe
 1874 0085 3A       		.uleb128 0x3a
 1875 0086 0B       		.uleb128 0xb
 1876 0087 3B       		.uleb128 0x3b
 1877 0088 0B       		.uleb128 0xb
 1878 0089 27       		.uleb128 0x27
 1879 008a 19       		.uleb128 0x19
 1880 008b 11       		.uleb128 0x11
 1881 008c 01       		.uleb128 0x1
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 56


 1882 008d 12       		.uleb128 0x12
 1883 008e 06       		.uleb128 0x6
 1884 008f 40       		.uleb128 0x40
 1885 0090 18       		.uleb128 0x18
 1886 0091 9742     		.uleb128 0x2117
 1887 0093 19       		.uleb128 0x19
 1888 0094 00       		.byte	0
 1889 0095 00       		.byte	0
 1890 0096 0A       		.uleb128 0xa
 1891 0097 2E       		.uleb128 0x2e
 1892 0098 00       		.byte	0
 1893 0099 3F       		.uleb128 0x3f
 1894 009a 19       		.uleb128 0x19
 1895 009b 03       		.uleb128 0x3
 1896 009c 0E       		.uleb128 0xe
 1897 009d 3A       		.uleb128 0x3a
 1898 009e 0B       		.uleb128 0xb
 1899 009f 3B       		.uleb128 0x3b
 1900 00a0 05       		.uleb128 0x5
 1901 00a1 27       		.uleb128 0x27
 1902 00a2 19       		.uleb128 0x19
 1903 00a3 11       		.uleb128 0x11
 1904 00a4 01       		.uleb128 0x1
 1905 00a5 12       		.uleb128 0x12
 1906 00a6 06       		.uleb128 0x6
 1907 00a7 40       		.uleb128 0x40
 1908 00a8 18       		.uleb128 0x18
 1909 00a9 9742     		.uleb128 0x2117
 1910 00ab 19       		.uleb128 0x19
 1911 00ac 00       		.byte	0
 1912 00ad 00       		.byte	0
 1913 00ae 0B       		.uleb128 0xb
 1914 00af 2E       		.uleb128 0x2e
 1915 00b0 01       		.byte	0x1
 1916 00b1 3F       		.uleb128 0x3f
 1917 00b2 19       		.uleb128 0x19
 1918 00b3 03       		.uleb128 0x3
 1919 00b4 0E       		.uleb128 0xe
 1920 00b5 3A       		.uleb128 0x3a
 1921 00b6 0B       		.uleb128 0xb
 1922 00b7 3B       		.uleb128 0x3b
 1923 00b8 05       		.uleb128 0x5
 1924 00b9 27       		.uleb128 0x27
 1925 00ba 19       		.uleb128 0x19
 1926 00bb 11       		.uleb128 0x11
 1927 00bc 01       		.uleb128 0x1
 1928 00bd 12       		.uleb128 0x12
 1929 00be 06       		.uleb128 0x6
 1930 00bf 40       		.uleb128 0x40
 1931 00c0 18       		.uleb128 0x18
 1932 00c1 9742     		.uleb128 0x2117
 1933 00c3 19       		.uleb128 0x19
 1934 00c4 01       		.uleb128 0x1
 1935 00c5 13       		.uleb128 0x13
 1936 00c6 00       		.byte	0
 1937 00c7 00       		.byte	0
 1938 00c8 0C       		.uleb128 0xc
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 57


 1939 00c9 05       		.uleb128 0x5
 1940 00ca 00       		.byte	0
 1941 00cb 03       		.uleb128 0x3
 1942 00cc 0E       		.uleb128 0xe
 1943 00cd 3A       		.uleb128 0x3a
 1944 00ce 0B       		.uleb128 0xb
 1945 00cf 3B       		.uleb128 0x3b
 1946 00d0 05       		.uleb128 0x5
 1947 00d1 49       		.uleb128 0x49
 1948 00d2 13       		.uleb128 0x13
 1949 00d3 02       		.uleb128 0x2
 1950 00d4 18       		.uleb128 0x18
 1951 00d5 00       		.byte	0
 1952 00d6 00       		.byte	0
 1953 00d7 0D       		.uleb128 0xd
 1954 00d8 2E       		.uleb128 0x2e
 1955 00d9 01       		.byte	0x1
 1956 00da 3F       		.uleb128 0x3f
 1957 00db 19       		.uleb128 0x19
 1958 00dc 03       		.uleb128 0x3
 1959 00dd 0E       		.uleb128 0xe
 1960 00de 3A       		.uleb128 0x3a
 1961 00df 0B       		.uleb128 0xb
 1962 00e0 3B       		.uleb128 0x3b
 1963 00e1 05       		.uleb128 0x5
 1964 00e2 27       		.uleb128 0x27
 1965 00e3 19       		.uleb128 0x19
 1966 00e4 49       		.uleb128 0x49
 1967 00e5 13       		.uleb128 0x13
 1968 00e6 11       		.uleb128 0x11
 1969 00e7 01       		.uleb128 0x1
 1970 00e8 12       		.uleb128 0x12
 1971 00e9 06       		.uleb128 0x6
 1972 00ea 40       		.uleb128 0x40
 1973 00eb 18       		.uleb128 0x18
 1974 00ec 9742     		.uleb128 0x2117
 1975 00ee 19       		.uleb128 0x19
 1976 00ef 01       		.uleb128 0x1
 1977 00f0 13       		.uleb128 0x13
 1978 00f1 00       		.byte	0
 1979 00f2 00       		.byte	0
 1980 00f3 0E       		.uleb128 0xe
 1981 00f4 34       		.uleb128 0x34
 1982 00f5 00       		.byte	0
 1983 00f6 03       		.uleb128 0x3
 1984 00f7 0E       		.uleb128 0xe
 1985 00f8 3A       		.uleb128 0x3a
 1986 00f9 0B       		.uleb128 0xb
 1987 00fa 3B       		.uleb128 0x3b
 1988 00fb 05       		.uleb128 0x5
 1989 00fc 49       		.uleb128 0x49
 1990 00fd 13       		.uleb128 0x13
 1991 00fe 02       		.uleb128 0x2
 1992 00ff 18       		.uleb128 0x18
 1993 0100 00       		.byte	0
 1994 0101 00       		.byte	0
 1995 0102 0F       		.uleb128 0xf
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 58


 1996 0103 2E       		.uleb128 0x2e
 1997 0104 01       		.byte	0x1
 1998 0105 3F       		.uleb128 0x3f
 1999 0106 19       		.uleb128 0x19
 2000 0107 03       		.uleb128 0x3
 2001 0108 0E       		.uleb128 0xe
 2002 0109 3A       		.uleb128 0x3a
 2003 010a 0B       		.uleb128 0xb
 2004 010b 3B       		.uleb128 0x3b
 2005 010c 05       		.uleb128 0x5
 2006 010d 27       		.uleb128 0x27
 2007 010e 19       		.uleb128 0x19
 2008 010f 11       		.uleb128 0x11
 2009 0110 01       		.uleb128 0x1
 2010 0111 12       		.uleb128 0x12
 2011 0112 06       		.uleb128 0x6
 2012 0113 40       		.uleb128 0x40
 2013 0114 18       		.uleb128 0x18
 2014 0115 9642     		.uleb128 0x2116
 2015 0117 19       		.uleb128 0x19
 2016 0118 01       		.uleb128 0x1
 2017 0119 13       		.uleb128 0x13
 2018 011a 00       		.byte	0
 2019 011b 00       		.byte	0
 2020 011c 10       		.uleb128 0x10
 2021 011d 0F       		.uleb128 0xf
 2022 011e 00       		.byte	0
 2023 011f 0B       		.uleb128 0xb
 2024 0120 0B       		.uleb128 0xb
 2025 0121 49       		.uleb128 0x49
 2026 0122 13       		.uleb128 0x13
 2027 0123 00       		.byte	0
 2028 0124 00       		.byte	0
 2029 0125 11       		.uleb128 0x11
 2030 0126 26       		.uleb128 0x26
 2031 0127 00       		.byte	0
 2032 0128 49       		.uleb128 0x49
 2033 0129 13       		.uleb128 0x13
 2034 012a 00       		.byte	0
 2035 012b 00       		.byte	0
 2036 012c 12       		.uleb128 0x12
 2037 012d 34       		.uleb128 0x34
 2038 012e 00       		.byte	0
 2039 012f 03       		.uleb128 0x3
 2040 0130 0E       		.uleb128 0xe
 2041 0131 3A       		.uleb128 0x3a
 2042 0132 0B       		.uleb128 0xb
 2043 0133 3B       		.uleb128 0x3b
 2044 0134 0B       		.uleb128 0xb
 2045 0135 49       		.uleb128 0x49
 2046 0136 13       		.uleb128 0x13
 2047 0137 3F       		.uleb128 0x3f
 2048 0138 19       		.uleb128 0x19
 2049 0139 02       		.uleb128 0x2
 2050 013a 18       		.uleb128 0x18
 2051 013b 00       		.byte	0
 2052 013c 00       		.byte	0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 59


 2053 013d 00       		.byte	0
 2054              		.section	.debug_aranges,"",%progbits
 2055 0000 DC000000 		.4byte	0xdc
 2056 0004 0200     		.2byte	0x2
 2057 0006 00000000 		.4byte	.Ldebug_info0
 2058 000a 04       		.byte	0x4
 2059 000b 00       		.byte	0
 2060 000c 0000     		.2byte	0
 2061 000e 0000     		.2byte	0
 2062 0010 00000000 		.4byte	.LFB0
 2063 0014 30000000 		.4byte	.LFE0-.LFB0
 2064 0018 00000000 		.4byte	.LFB1
 2065 001c 58000000 		.4byte	.LFE1-.LFB1
 2066 0020 00000000 		.4byte	.LFB2
 2067 0024 20000000 		.4byte	.LFE2-.LFB2
 2068 0028 00000000 		.4byte	.LFB3
 2069 002c 44000000 		.4byte	.LFE3-.LFB3
 2070 0030 00000000 		.4byte	.LFB4
 2071 0034 0C000000 		.4byte	.LFE4-.LFB4
 2072 0038 00000000 		.4byte	.LFB5
 2073 003c 0C000000 		.4byte	.LFE5-.LFB5
 2074 0040 00000000 		.4byte	.LFB6
 2075 0044 0C000000 		.4byte	.LFE6-.LFB6
 2076 0048 00000000 		.4byte	.LFB7
 2077 004c 0C000000 		.4byte	.LFE7-.LFB7
 2078 0050 00000000 		.4byte	.LFB8
 2079 0054 20000000 		.4byte	.LFE8-.LFB8
 2080 0058 00000000 		.4byte	.LFB9
 2081 005c 20000000 		.4byte	.LFE9-.LFB9
 2082 0060 00000000 		.4byte	.LFB10
 2083 0064 20000000 		.4byte	.LFE10-.LFB10
 2084 0068 00000000 		.4byte	.LFB11
 2085 006c 20000000 		.4byte	.LFE11-.LFB11
 2086 0070 00000000 		.4byte	.LFB12
 2087 0074 34000000 		.4byte	.LFE12-.LFB12
 2088 0078 00000000 		.4byte	.LFB13
 2089 007c 20000000 		.4byte	.LFE13-.LFB13
 2090 0080 00000000 		.4byte	.LFB14
 2091 0084 20000000 		.4byte	.LFE14-.LFB14
 2092 0088 00000000 		.4byte	.LFB15
 2093 008c 30000000 		.4byte	.LFE15-.LFB15
 2094 0090 00000000 		.4byte	.LFB16
 2095 0094 44000000 		.4byte	.LFE16-.LFB16
 2096 0098 00000000 		.4byte	.LFB17
 2097 009c 28000000 		.4byte	.LFE17-.LFB17
 2098 00a0 00000000 		.4byte	.LFB18
 2099 00a4 64000000 		.4byte	.LFE18-.LFB18
 2100 00a8 00000000 		.4byte	.LFB19
 2101 00ac 3A000000 		.4byte	.LFE19-.LFB19
 2102 00b0 00000000 		.4byte	.LFB20
 2103 00b4 80000000 		.4byte	.LFE20-.LFB20
 2104 00b8 00000000 		.4byte	.LFB21
 2105 00bc 0C000000 		.4byte	.LFE21-.LFB21
 2106 00c0 00000000 		.4byte	.LFB22
 2107 00c4 0C000000 		.4byte	.LFE22-.LFB22
 2108 00c8 00000000 		.4byte	.LFB23
 2109 00cc 28000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 60


 2110 00d0 00000000 		.4byte	.LFB24
 2111 00d4 38000000 		.4byte	.LFE24-.LFB24
 2112 00d8 00000000 		.4byte	0
 2113 00dc 00000000 		.4byte	0
 2114              		.section	.debug_ranges,"",%progbits
 2115              	.Ldebug_ranges0:
 2116 0000 00000000 		.4byte	.LFB0
 2117 0004 30000000 		.4byte	.LFE0
 2118 0008 00000000 		.4byte	.LFB1
 2119 000c 58000000 		.4byte	.LFE1
 2120 0010 00000000 		.4byte	.LFB2
 2121 0014 20000000 		.4byte	.LFE2
 2122 0018 00000000 		.4byte	.LFB3
 2123 001c 44000000 		.4byte	.LFE3
 2124 0020 00000000 		.4byte	.LFB4
 2125 0024 0C000000 		.4byte	.LFE4
 2126 0028 00000000 		.4byte	.LFB5
 2127 002c 0C000000 		.4byte	.LFE5
 2128 0030 00000000 		.4byte	.LFB6
 2129 0034 0C000000 		.4byte	.LFE6
 2130 0038 00000000 		.4byte	.LFB7
 2131 003c 0C000000 		.4byte	.LFE7
 2132 0040 00000000 		.4byte	.LFB8
 2133 0044 20000000 		.4byte	.LFE8
 2134 0048 00000000 		.4byte	.LFB9
 2135 004c 20000000 		.4byte	.LFE9
 2136 0050 00000000 		.4byte	.LFB10
 2137 0054 20000000 		.4byte	.LFE10
 2138 0058 00000000 		.4byte	.LFB11
 2139 005c 20000000 		.4byte	.LFE11
 2140 0060 00000000 		.4byte	.LFB12
 2141 0064 34000000 		.4byte	.LFE12
 2142 0068 00000000 		.4byte	.LFB13
 2143 006c 20000000 		.4byte	.LFE13
 2144 0070 00000000 		.4byte	.LFB14
 2145 0074 20000000 		.4byte	.LFE14
 2146 0078 00000000 		.4byte	.LFB15
 2147 007c 30000000 		.4byte	.LFE15
 2148 0080 00000000 		.4byte	.LFB16
 2149 0084 44000000 		.4byte	.LFE16
 2150 0088 00000000 		.4byte	.LFB17
 2151 008c 28000000 		.4byte	.LFE17
 2152 0090 00000000 		.4byte	.LFB18
 2153 0094 64000000 		.4byte	.LFE18
 2154 0098 00000000 		.4byte	.LFB19
 2155 009c 3A000000 		.4byte	.LFE19
 2156 00a0 00000000 		.4byte	.LFB20
 2157 00a4 80000000 		.4byte	.LFE20
 2158 00a8 00000000 		.4byte	.LFB21
 2159 00ac 0C000000 		.4byte	.LFE21
 2160 00b0 00000000 		.4byte	.LFB22
 2161 00b4 0C000000 		.4byte	.LFE22
 2162 00b8 00000000 		.4byte	.LFB23
 2163 00bc 28000000 		.4byte	.LFE23
 2164 00c0 00000000 		.4byte	.LFB24
 2165 00c4 38000000 		.4byte	.LFE24
 2166 00c8 00000000 		.4byte	0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 61


 2167 00cc 00000000 		.4byte	0
 2168              		.section	.debug_line,"",%progbits
 2169              	.Ldebug_line0:
 2170 0000 73020000 		.section	.debug_str,"MS",%progbits,1
 2170      02004300 
 2170      00000201 
 2170      FB0E0D00 
 2170      01010101 
 2171              	.LASF15:
 2172 0000 72656731 		.ascii	"reg16\000"
 2172      3600
 2173              	.LASF34:
 2174 0006 53504953 		.ascii	"SPIS_WriteTxDataZero\000"
 2174      5F577269 
 2174      74655478 
 2174      44617461 
 2174      5A65726F 
 2175              	.LASF18:
 2176 001b 53504953 		.ascii	"SPIS_Start\000"
 2176      5F537461 
 2176      727400
 2177              	.LASF56:
 2178 0026 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\SPIS.c\000"
 2178      6E657261 
 2178      7465645F 
 2178      536F7572 
 2178      63655C50 
 2179              	.LASF54:
 2180 0046 53504953 		.ascii	"SPIS_swStatusRx\000"
 2180      5F737753 
 2180      74617475 
 2180      73527800 
 2181              	.LASF32:
 2182 0056 53504953 		.ascii	"SPIS_WriteTxData\000"
 2182      5F577269 
 2182      74655478 
 2182      44617461 
 2182      00
 2183              	.LASF25:
 2184 0067 53504953 		.ascii	"SPIS_DisableRxInt\000"
 2184      5F446973 
 2184      61626C65 
 2184      5278496E 
 2184      7400
 2185              	.LASF53:
 2186 0079 53504953 		.ascii	"SPIS_swStatusTx\000"
 2186      5F737753 
 2186      74617475 
 2186      73547800 
 2187              	.LASF36:
 2188 0089 53504953 		.ascii	"SPIS_ReadRxData\000"
 2188      5F526561 
 2188      64527844 
 2188      61746100 
 2189              	.LASF42:
 2190 0099 53504953 		.ascii	"SPIS_ClearTxBuffer\000"
 2190      5F436C65 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 62


 2190      61725478 
 2190      42756666 
 2190      657200
 2191              	.LASF30:
 2192 00ac 53504953 		.ascii	"SPIS_ReadTxStatus\000"
 2192      5F526561 
 2192      64547853 
 2192      74617475 
 2192      7300
 2193              	.LASF41:
 2194 00be 53504953 		.ascii	"SPIS_ClearRxBuffer\000"
 2194      5F436C65 
 2194      61725278 
 2194      42756666 
 2194      657200
 2195              	.LASF37:
 2196 00d1 72784461 		.ascii	"rxData\000"
 2196      746100
 2197              	.LASF40:
 2198 00d8 53504953 		.ascii	"SPIS_GetTxBufferSize\000"
 2198      5F476574 
 2198      54784275 
 2198      66666572 
 2198      53697A65 
 2199              	.LASF11:
 2200 00ed 666C6F61 		.ascii	"float\000"
 2200      7400
 2201              	.LASF39:
 2202 00f3 73697A65 		.ascii	"size\000"
 2202      00
 2203              	.LASF14:
 2204 00f8 72656738 		.ascii	"reg8\000"
 2204      00
 2205              	.LASF5:
 2206 00fd 6C6F6E67 		.ascii	"long unsigned int\000"
 2206      20756E73 
 2206      69676E65 
 2206      6420696E 
 2206      7400
 2207              	.LASF9:
 2208 010f 75696E74 		.ascii	"uint8\000"
 2208      3800
 2209              	.LASF23:
 2210 0115 53504953 		.ascii	"SPIS_EnableRxInt\000"
 2210      5F456E61 
 2210      626C6552 
 2210      78496E74 
 2210      00
 2211              	.LASF43:
 2212 0126 53504953 		.ascii	"SPIS_PutArray\000"
 2212      5F507574 
 2212      41727261 
 2212      7900
 2213              	.LASF45:
 2214 0134 62797465 		.ascii	"byteCount\000"
 2214      436F756E 
 2214      7400
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 63


 2215              	.LASF21:
 2216 013e 656E6162 		.ascii	"enableInterrupts\000"
 2216      6C65496E 
 2216      74657272 
 2216      75707473 
 2216      00
 2217              	.LASF38:
 2218 014f 53504953 		.ascii	"SPIS_GetRxBufferSize\000"
 2218      5F476574 
 2218      52784275 
 2218      66666572 
 2218      53697A65 
 2219              	.LASF1:
 2220 0164 756E7369 		.ascii	"unsigned char\000"
 2220      676E6564 
 2220      20636861 
 2220      7200
 2221              	.LASF22:
 2222 0172 53504953 		.ascii	"SPIS_EnableTxInt\000"
 2222      5F456E61 
 2222      626C6554 
 2222      78496E74 
 2222      00
 2223              	.LASF55:
 2224 0183 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2224      4320342E 
 2224      392E3320 
 2224      32303135 
 2224      30333033 
 2225 01b6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2225      20726576 
 2225      6973696F 
 2225      6E203232 
 2225      31323230 
 2226 01e9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2226      66756E63 
 2226      74696F6E 
 2226      2D736563 
 2226      74696F6E 
 2227              	.LASF12:
 2228 0211 646F7562 		.ascii	"double\000"
 2228      6C6500
 2229              	.LASF28:
 2230 0218 696E7453 		.ascii	"intSrc\000"
 2230      726300
 2231              	.LASF10:
 2232 021f 75696E74 		.ascii	"uint16\000"
 2232      313600
 2233              	.LASF19:
 2234 0226 53504953 		.ascii	"SPIS_Enable\000"
 2234      5F456E61 
 2234      626C6500 
 2235              	.LASF50:
 2236 0232 53504953 		.ascii	"SPIS_SetInterruptMode\000"
 2236      5F536574 
 2236      496E7465 
 2236      72727570 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 64


 2236      744D6F64 
 2237              	.LASF52:
 2238 0248 53504953 		.ascii	"SPIS_initVar\000"
 2238      5F696E69 
 2238      74566172 
 2238      00
 2239              	.LASF8:
 2240 0255 756E7369 		.ascii	"unsigned int\000"
 2240      676E6564 
 2240      20696E74 
 2240      00
 2241              	.LASF7:
 2242 0262 6C6F6E67 		.ascii	"long long unsigned int\000"
 2242      206C6F6E 
 2242      6720756E 
 2242      7369676E 
 2242      65642069 
 2243              	.LASF17:
 2244 0279 53504953 		.ascii	"SPIS_Init\000"
 2244      5F496E69 
 2244      7400
 2245              	.LASF24:
 2246 0283 53504953 		.ascii	"SPIS_DisableTxInt\000"
 2246      5F446973 
 2246      61626C65 
 2246      5478496E 
 2246      7400
 2247              	.LASF46:
 2248 0295 62756649 		.ascii	"bufIndex\000"
 2248      6E646578 
 2248      00
 2249              	.LASF33:
 2250 029e 74784461 		.ascii	"txData\000"
 2250      746100
 2251              	.LASF16:
 2252 02a5 73697A65 		.ascii	"sizetype\000"
 2252      74797065 
 2252      00
 2253              	.LASF49:
 2254 02ae 53504953 		.ascii	"SPIS_DisableInt\000"
 2254      5F446973 
 2254      61626C65 
 2254      496E7400 
 2255              	.LASF6:
 2256 02be 6C6F6E67 		.ascii	"long long int\000"
 2256      206C6F6E 
 2256      6720696E 
 2256      7400
 2257              	.LASF31:
 2258 02cc 53504953 		.ascii	"SPIS_ReadRxStatus\000"
 2258      5F526561 
 2258      64527853 
 2258      74617475 
 2258      7300
 2259              	.LASF13:
 2260 02de 63686172 		.ascii	"char\000"
 2260      00
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 65


 2261              	.LASF57:
 2262 02e3 433A5C55 		.ascii	"C:\\Users\\jthem\\Documents\\PSoC Creator\\PWMExamp"
 2262      73657273 
 2262      5C6A7468 
 2262      656D5C44 
 2262      6F63756D 
 2263 0311 6C653031 		.ascii	"le01\\EasyBoard_5LP.cydsn\000"
 2263      5C456173 
 2263      79426F61 
 2263      72645F35 
 2263      4C502E63 
 2264              	.LASF2:
 2265 032a 73686F72 		.ascii	"short int\000"
 2265      7420696E 
 2265      7400
 2266              	.LASF48:
 2267 0334 53504953 		.ascii	"SPIS_EnableInt\000"
 2267      5F456E61 
 2267      626C6549 
 2267      6E7400
 2268              	.LASF44:
 2269 0343 62756666 		.ascii	"buffer\000"
 2269      657200
 2270              	.LASF51:
 2271 034a 53504953 		.ascii	"SPIS_ReadStatus\000"
 2271      5F526561 
 2271      64537461 
 2271      74757300 
 2272              	.LASF4:
 2273 035a 6C6F6E67 		.ascii	"long int\000"
 2273      20696E74 
 2273      00
 2274              	.LASF29:
 2275 0363 746D7053 		.ascii	"tmpStatus\000"
 2275      74617475 
 2275      7300
 2276              	.LASF47:
 2277 036d 53504953 		.ascii	"SPIS_ClearFIFO\000"
 2277      5F436C65 
 2277      61724649 
 2277      464F00
 2278              	.LASF0:
 2279 037c 7369676E 		.ascii	"signed char\000"
 2279      65642063 
 2279      68617200 
 2280              	.LASF3:
 2281 0388 73686F72 		.ascii	"short unsigned int\000"
 2281      7420756E 
 2281      7369676E 
 2281      65642069 
 2281      6E7400
 2282              	.LASF20:
 2283 039b 53504953 		.ascii	"SPIS_Stop\000"
 2283      5F53746F 
 2283      7000
 2284              	.LASF26:
 2285 03a5 53504953 		.ascii	"SPIS_SetTxInterruptMode\000"
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccj8v7dj.s 			page 66


 2285      5F536574 
 2285      5478496E 
 2285      74657272 
 2285      7570744D 
 2286              	.LASF35:
 2287 03bd 74784461 		.ascii	"txDataByte\000"
 2287      74614279 
 2287      746500
 2288              	.LASF27:
 2289 03c8 53504953 		.ascii	"SPIS_SetRxInterruptMode\000"
 2289      5F536574 
 2289      5278496E 
 2289      74657272 
 2289      7570744D 
 2290              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
