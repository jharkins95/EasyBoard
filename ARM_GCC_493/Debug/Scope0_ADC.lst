ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Scope0_ADC.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	Scope0_ADC_initVar
  19              		.bss
  20              		.type	Scope0_ADC_initVar, %object
  21              		.size	Scope0_ADC_initVar, 1
  22              	Scope0_ADC_initVar:
  23 0000 00       		.space	1
  24              		.comm	Scope0_ADC_offset,2,2
  25              		.comm	Scope0_ADC_countsPerVolt,2,2
  26              		.comm	Scope0_ADC_countsPer10Volt,4,4
  27              		.comm	Scope0_ADC_shift,2,2
  28              		.section	.text.Scope0_ADC_Start,"ax",%progbits
  29              		.align	2
  30              		.global	Scope0_ADC_Start
  31              		.thumb
  32              		.thumb_func
  33              		.type	Scope0_ADC_Start, %function
  34              	Scope0_ADC_Start:
  35              	.LFB0:
  36              		.file 1 ".\\Generated_Source\\PSoC5\\Scope0_ADC.c"
   1:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Scope0_ADC.c **** * File Name: Scope0_ADC.c
   3:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
   5:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Description:
   6:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  This file provides the source code to the API for the Successive
   7:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  approximation ADC Component.
   8:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
   9:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Note:
  10:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
  11:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/Scope0_ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/Scope0_ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/Scope0_ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
  18:.\Generated_Source\PSoC5/Scope0_ADC.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/Scope0_ADC.c **** #include "Scope0_ADC.h"
  20:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
  21:.\Generated_Source\PSoC5/Scope0_ADC.c **** #if(Scope0_ADC_DEFAULT_INTERNAL_CLK)
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 2


  22:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #include "Scope0_ADC_theACLK.h"
  23:.\Generated_Source\PSoC5/Scope0_ADC.c **** #endif /* End Scope0_ADC_DEFAULT_INTERNAL_CLK */
  24:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
  25:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
  26:.\Generated_Source\PSoC5/Scope0_ADC.c **** /***************************************
  27:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Forward function references
  28:.\Generated_Source\PSoC5/Scope0_ADC.c **** ***************************************/
  29:.\Generated_Source\PSoC5/Scope0_ADC.c **** static void Scope0_ADC_CalcGain(uint8 resolution);
  30:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
  31:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
  32:.\Generated_Source\PSoC5/Scope0_ADC.c **** /***************************************
  33:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Global data allocation
  34:.\Generated_Source\PSoC5/Scope0_ADC.c **** ***************************************/
  35:.\Generated_Source\PSoC5/Scope0_ADC.c **** uint8 Scope0_ADC_initVar = 0u;
  36:.\Generated_Source\PSoC5/Scope0_ADC.c **** volatile int16 Scope0_ADC_offset;
  37:.\Generated_Source\PSoC5/Scope0_ADC.c **** volatile int16 Scope0_ADC_countsPerVolt;     /* Obsolete Gain compensation */
  38:.\Generated_Source\PSoC5/Scope0_ADC.c **** volatile int32 Scope0_ADC_countsPer10Volt;   /* Gain compensation */
  39:.\Generated_Source\PSoC5/Scope0_ADC.c **** volatile int16 Scope0_ADC_shift;
  40:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
  41:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
  42:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_Start
  44:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
  45:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
  46:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
  47:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  This is the preferred method to begin component operation.
  48:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_Start() sets the initVar variable, calls the
  49:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_Init() function, and then calls the
  50:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_Enable() function.
  51:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
  52:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
  53:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
  54:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
  55:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
  56:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
  57:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
  58:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Global variables:
  59:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  The Scope0_ADC_initVar variable is used to indicate when/if initial
  60:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  configuration of this component has happened. The variable is initialized to
  61:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_Start() routine.
  64:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  If re-initialization of the component is required the variable should be set
  65:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  to zero before call of Scope0_ADC_Start() routine, or the user may call
  66:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_Init() and Scope0_ADC_Enable() as done in the
  67:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_Start() routine.
  68:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
  69:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Side Effect:
  70:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  If the initVar variable is already set, this function only calls the
  71:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_Enable() function.
  72:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
  73:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
  74:.\Generated_Source\PSoC5/Scope0_ADC.c **** void Scope0_ADC_Start(void)
  75:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
  37              		.loc 1 75 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 3


  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  76:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
  77:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  78:.\Generated_Source\PSoC5/Scope0_ADC.c ****     if(Scope0_ADC_initVar == 0u)
  47              		.loc 1 78 0
  48 0004 054B     		ldr	r3, .L3
  49 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50 0008 002B     		cmp	r3, #0
  51 000a 04D1     		bne	.L2
  79:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {
  80:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_Init();
  52              		.loc 1 80 0
  53 000c FFF7FEFF 		bl	Scope0_ADC_Init
  81:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_initVar = 1u;
  54              		.loc 1 81 0
  55 0010 024B     		ldr	r3, .L3
  56 0012 0122     		movs	r2, #1
  57 0014 1A70     		strb	r2, [r3]
  58              	.L2:
  82:.\Generated_Source\PSoC5/Scope0_ADC.c ****     }
  83:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_Enable();
  59              		.loc 1 83 0
  60 0016 FFF7FEFF 		bl	Scope0_ADC_Enable
  84:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
  61              		.loc 1 84 0
  62 001a 80BD     		pop	{r7, pc}
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 001c 00000000 		.word	Scope0_ADC_initVar
  67              		.cfi_endproc
  68              	.LFE0:
  69              		.size	Scope0_ADC_Start, .-Scope0_ADC_Start
  70              		.section	.text.Scope0_ADC_Init,"ax",%progbits
  71              		.align	2
  72              		.global	Scope0_ADC_Init
  73              		.thumb
  74              		.thumb_func
  75              		.type	Scope0_ADC_Init, %function
  76              	Scope0_ADC_Init:
  77              	.LFB1:
  85:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
  86:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
  87:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
  88:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_Init
  89:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
  90:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
  91:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
  92:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  93:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  94:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_Start().
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 4


  95:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
  96:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
  97:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
  98:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
  99:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 100:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 101:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 102:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Global variables:
 103:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  The Scope0_ADC_offset variable is initialized to 0.
 104:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 105:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/Scope0_ADC.c **** void Scope0_ADC_Init(void)
 107:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
  78              		.loc 1 107 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 80B5     		push	{r7, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 00AF     		add	r7, sp, #0
  87              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 109:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* This is only valid if there is an internal clock */
 110:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if(Scope0_ADC_DEFAULT_INTERNAL_CLK)
 111:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_theACLK_SetMode(CYCLK_DUTY);
  88              		.loc 1 111 0
  89 0004 1020     		movs	r0, #16
  90 0006 FFF7FEFF 		bl	Scope0_ADC_theACLK_SetModeRegister
 112:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif /* End Scope0_ADC_DEFAULT_INTERNAL_CLK */
 113:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 114:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if(Scope0_ADC_IRQ_REMOVE == 0u)
 115:.\Generated_Source\PSoC5/Scope0_ADC.c ****         /* Start and set interrupt vector */
 116:.\Generated_Source\PSoC5/Scope0_ADC.c ****         CyIntSetPriority(Scope0_ADC_INTC_NUMBER, Scope0_ADC_INTC_PRIOR_NUMBER);
  91              		.loc 1 116 0
  92 000a 0520     		movs	r0, #5
  93 000c 0721     		movs	r1, #7
  94 000e FFF7FEFF 		bl	CyIntSetPriority
 117:.\Generated_Source\PSoC5/Scope0_ADC.c ****         (void)CyIntSetVector(Scope0_ADC_INTC_NUMBER, &Scope0_ADC_ISR);
  95              		.loc 1 117 0
  96 0012 0520     		movs	r0, #5
  97 0014 0849     		ldr	r1, .L6
  98 0016 FFF7FEFF 		bl	CyIntSetVector
 118:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif   /* End Scope0_ADC_IRQ_REMOVE */
 119:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 120:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Enable IRQ mode*/
 121:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_SAR_CSR1_REG |= Scope0_ADC_SAR_IRQ_MASK_EN | Scope0_ADC_SAR_IRQ_MODE_EDGE;
  99              		.loc 1 121 0
 100 001a 084A     		ldr	r2, .L6+4
 101 001c 074B     		ldr	r3, .L6+4
 102 001e 1B78     		ldrb	r3, [r3]
 103 0020 DBB2     		uxtb	r3, r3
 104 0022 43F00603 		orr	r3, r3, #6
 105 0026 DBB2     		uxtb	r3, r3
 106 0028 1370     		strb	r3, [r2]
 122:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 5


 123:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /*Set SAR ADC resolution ADC */
 124:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_SetResolution(Scope0_ADC_DEFAULT_RESOLUTION);
 107              		.loc 1 124 0
 108 002a 0820     		movs	r0, #8
 109 002c FFF7FEFF 		bl	Scope0_ADC_SetResolution
 125:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_offset = 0;
 110              		.loc 1 125 0
 111 0030 034B     		ldr	r3, .L6+8
 112 0032 0022     		movs	r2, #0
 113 0034 1A80     		strh	r2, [r3]	@ movhi
 126:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 114              		.loc 1 126 0
 115 0036 80BD     		pop	{r7, pc}
 116              	.L7:
 117              		.align	2
 118              	.L6:
 119 0038 00000000 		.word	Scope0_ADC_ISR
 120 003c 01590040 		.word	1073764609
 121 0040 00000000 		.word	Scope0_ADC_offset
 122              		.cfi_endproc
 123              	.LFE1:
 124              		.size	Scope0_ADC_Init, .-Scope0_ADC_Init
 125              		.section	.text.Scope0_ADC_Enable,"ax",%progbits
 126              		.align	2
 127              		.global	Scope0_ADC_Enable
 128              		.thumb
 129              		.thumb_func
 130              		.type	Scope0_ADC_Enable, %function
 131              	Scope0_ADC_Enable:
 132              	.LFB2:
 127:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 128:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 129:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_Enable
 131:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 132:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 133:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
 134:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Enables the reference, clock and power for SAR ADC.
 135:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 136:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 137:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 138:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 139:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 140:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 141:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 142:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/Scope0_ADC.c **** void Scope0_ADC_Enable(void)
 144:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 133              		.loc 1 144 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 8
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137 0000 80B5     		push	{r7, lr}
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 7, -8
 140              		.cfi_offset 14, -4
 141 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 6


 142              		.cfi_def_cfa_offset 16
 143 0004 00AF     		add	r7, sp, #0
 144              		.cfi_def_cfa_register 7
 145:.\Generated_Source\PSoC5/Scope0_ADC.c ****     uint8 tmpReg;
 146:.\Generated_Source\PSoC5/Scope0_ADC.c ****     uint8 enableInterrupts;
 147:.\Generated_Source\PSoC5/Scope0_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 145              		.loc 1 147 0
 146 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 147 000a 0346     		mov	r3, r0
 148 000c FB71     		strb	r3, [r7, #7]
 148:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 149:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_PWRMGR_SAR_REG |= Scope0_ADC_ACT_PWR_SAR_EN;
 149              		.loc 1 150 0
 150 000e 2E4A     		ldr	r2, .L9
 151 0010 2D4B     		ldr	r3, .L9
 152 0012 1B78     		ldrb	r3, [r3]
 153 0014 DBB2     		uxtb	r3, r3
 154 0016 43F00103 		orr	r3, r3, #1
 155 001a DBB2     		uxtb	r3, r3
 156 001c 1370     		strb	r3, [r2]
 151:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 152:.\Generated_Source\PSoC5/Scope0_ADC.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_STBY_PWRMGR_SAR_REG |= Scope0_ADC_STBY_PWR_SAR_EN;
 157              		.loc 1 153 0
 158 001e 2B4A     		ldr	r2, .L9+4
 159 0020 2A4B     		ldr	r3, .L9+4
 160 0022 1B78     		ldrb	r3, [r3]
 161 0024 DBB2     		uxtb	r3, r3
 162 0026 43F00103 		orr	r3, r3, #1
 163 002a DBB2     		uxtb	r3, r3
 164 002c 1370     		strb	r3, [r2]
 154:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 155:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* This is only valid if there is an internal clock */
 156:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if(Scope0_ADC_DEFAULT_INTERNAL_CLK)
 157:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_PWRMGR_CLK_REG |= Scope0_ADC_ACT_PWR_CLK_EN;
 165              		.loc 1 157 0
 166 002e 284A     		ldr	r2, .L9+8
 167 0030 274B     		ldr	r3, .L9+8
 168 0032 1B78     		ldrb	r3, [r3]
 169 0034 DBB2     		uxtb	r3, r3
 170 0036 43F02003 		orr	r3, r3, #32
 171 003a DBB2     		uxtb	r3, r3
 172 003c 1370     		strb	r3, [r2]
 158:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_STBY_PWRMGR_CLK_REG |= Scope0_ADC_STBY_PWR_CLK_EN;
 173              		.loc 1 158 0
 174 003e 254A     		ldr	r2, .L9+12
 175 0040 244B     		ldr	r3, .L9+12
 176 0042 1B78     		ldrb	r3, [r3]
 177 0044 DBB2     		uxtb	r3, r3
 178 0046 43F02003 		orr	r3, r3, #32
 179 004a DBB2     		uxtb	r3, r3
 180 004c 1370     		strb	r3, [r2]
 159:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif /* End Scope0_ADC_DEFAULT_INTERNAL_CLK */
 160:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 161:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:.\Generated_Source\PSoC5/Scope0_ADC.c ****     tmpReg = Scope0_ADC_SAR_CSR3_REG;
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 7


 181              		.loc 1 162 0
 182 004e 224B     		ldr	r3, .L9+16
 183 0050 1B78     		ldrb	r3, [r3]
 184 0052 BB71     		strb	r3, [r7, #6]
 163:.\Generated_Source\PSoC5/Scope0_ADC.c ****     tmpReg |= Scope0_ADC_SAR_EN_BUF_VCM_EN;
 185              		.loc 1 163 0
 186 0054 BB79     		ldrb	r3, [r7, #6]
 187 0056 43F00203 		orr	r3, r3, #2
 188 005a BB71     		strb	r3, [r7, #6]
 164:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if((Scope0_ADC_DEFAULT_REFERENCE == Scope0_ADC__EXT_REF) || \
 166:.\Generated_Source\PSoC5/Scope0_ADC.c ****         (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VNEG_VDDA_DIFF))
 167:.\Generated_Source\PSoC5/Scope0_ADC.c ****         tmpReg &= (uint8)~Scope0_ADC_SAR_EN_BUF_VREF_EN;
 168:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:.\Generated_Source\PSoC5/Scope0_ADC.c ****         tmpReg |= Scope0_ADC_SAR_EN_BUF_VREF_EN;
 189              		.loc 1 169 0
 190 005c BB79     		ldrb	r3, [r7, #6]
 191 005e 43F00103 		orr	r3, r3, #1
 192 0062 BB71     		strb	r3, [r7, #6]
 170:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif /* Scope0_ADC_DEFAULT_REFERENCE == Scope0_ADC__EXT_REF */
 171:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_SAR_CSR3_REG = tmpReg;
 193              		.loc 1 171 0
 194 0064 1C4A     		ldr	r2, .L9+16
 195 0066 BB79     		ldrb	r3, [r7, #6]
 196 0068 1370     		strb	r3, [r2]
 172:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 173:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Set reference for ADC */
 174:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if(Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VNEG_VDDA_DIFF)
 175:.\Generated_Source\PSoC5/Scope0_ADC.c ****         #if(Scope0_ADC_DEFAULT_REFERENCE == Scope0_ADC__EXT_REF)
 176:.\Generated_Source\PSoC5/Scope0_ADC.c ****             Scope0_ADC_SAR_CSR6_REG = Scope0_ADC_INT_BYPASS_EXT_VREF; /* S2 */
 177:.\Generated_Source\PSoC5/Scope0_ADC.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:.\Generated_Source\PSoC5/Scope0_ADC.c ****             Scope0_ADC_SAR_CSR6_REG = Scope0_ADC_VDDA_VREF;           /* S7 */
 179:.\Generated_Source\PSoC5/Scope0_ADC.c ****         #endif /* Scope0_ADC_DEFAULT_REFERENCE == Scope0_ADC__EXT_REF */
 180:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #else  /* Reference goes through internal buffer */
 181:.\Generated_Source\PSoC5/Scope0_ADC.c ****         #if(Scope0_ADC_DEFAULT_REFERENCE == Scope0_ADC__INT_REF_NOT_BYPASSED)
 182:.\Generated_Source\PSoC5/Scope0_ADC.c ****             Scope0_ADC_SAR_CSR6_REG = Scope0_ADC_INT_VREF;            /* S3 + S4 */
 197              		.loc 1 182 0
 198 006a 1C4B     		ldr	r3, .L9+20
 199 006c 1822     		movs	r2, #24
 200 006e 1A70     		strb	r2, [r3]
 183:.\Generated_Source\PSoC5/Scope0_ADC.c ****         #else /* INTREF Bypassed of External */
 184:.\Generated_Source\PSoC5/Scope0_ADC.c ****             Scope0_ADC_SAR_CSR6_REG = Scope0_ADC_INT_BYPASS_EXT_VREF; /* S2 */
 185:.\Generated_Source\PSoC5/Scope0_ADC.c ****         #endif /* Scope0_ADC_DEFAULT_REFERENCE == Scope0_ADC__INT_REF_NOT_BYPASSED */
 186:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif /* VNEG_VDDA_DIFF */
 187:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 188:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if(Scope0_ADC_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_SAR_CSR5_REG &= (uint8)~Scope0_ADC_SAR_DLY_INC;
 191:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_SAR_CSR5_REG |= Scope0_ADC_SAR_DLY_INC;
 201              		.loc 1 192 0
 202 0070 1B4A     		ldr	r2, .L9+24
 203 0072 1B4B     		ldr	r3, .L9+24
 204 0074 1B78     		ldrb	r3, [r3]
 205 0076 DBB2     		uxtb	r3, r3
 206 0078 43F04003 		orr	r3, r3, #64
 207 007c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 8


 208 007e 1370     		strb	r3, [r2]
 193:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif /* Scope0_ADC_HIGH_POWER_PULSE == 0u */
 194:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 195:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Increase comparator latch enable delay by 20%, 
 196:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  Default for 1MSPS) 
 198:.\Generated_Source\PSoC5/Scope0_ADC.c ****     */
 199:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if(Scope0_ADC_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_SAR_CSR5_REG |= Scope0_ADC_SAR_SEL_CSEL_DFT_CHAR;
 201:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #else /* for <500ksps */
 202:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_SAR_CSR5_REG &= (uint8)~Scope0_ADC_SAR_SEL_CSEL_DFT_CHAR;
 209              		.loc 1 202 0
 210 0080 174A     		ldr	r2, .L9+24
 211 0082 174B     		ldr	r3, .L9+24
 212 0084 1B78     		ldrb	r3, [r3]
 213 0086 DBB2     		uxtb	r3, r3
 214 0088 23F00303 		bic	r3, r3, #3
 215 008c DBB2     		uxtb	r3, r3
 216 008e 1370     		strb	r3, [r2]
 203:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif /* Scope0_ADC_HIGH_POWER_PULSE == 0u */
 204:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 205:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_SAR_CSR0_REG = (uint8)((uint8)Scope0_ADC_DEFAULT_POWER << Scope0_ADC_SAR_POWER_SHIFT
 217              		.loc 1 206 0
 218 0090 144B     		ldr	r3, .L9+28
 219 0092 C822     		movs	r2, #200
 220 0094 1A70     		strb	r2, [r3]
 207:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if ((CY_PSOC5LP) || (Scope0_ADC_DEFAULT_REFERENCE != Scope0_ADC__EXT_REF))
 209:.\Generated_Source\PSoC5/Scope0_ADC.c ****         | Scope0_ADC_SAR_HIZ_CLEAR
 210:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif /* SAR_HIZ_CLEAR */
 211:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /*Set Convertion mode */
 212:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if(Scope0_ADC_DEFAULT_CONV_MODE != Scope0_ADC__FREE_RUNNING)      /* If triggered mode */
 213:.\Generated_Source\PSoC5/Scope0_ADC.c ****         | Scope0_ADC_SAR_MX_SOF_UDB           /* source: UDB */
 214:.\Generated_Source\PSoC5/Scope0_ADC.c ****         | Scope0_ADC_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif /* Scope0_ADC_DEFAULT_CONV_MODE */
 216:.\Generated_Source\PSoC5/Scope0_ADC.c ****     ; /* end of multiple line initialization */
 217:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 218:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_SAR_TR0_REG = Scope0_ADC_SAR_CAP_TRIM_2;
 221              		.loc 1 218 0
 222 0096 144B     		ldr	r3, .L9+32
 223 0098 0222     		movs	r2, #2
 224 009a 1A70     		strb	r2, [r3]
 219:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 220:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Enable clock for SAR ADC*/
 221:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_SAR_CLK_REG |= Scope0_ADC_SAR_MX_CLK_EN;
 225              		.loc 1 221 0
 226 009c 134A     		ldr	r2, .L9+36
 227 009e 134B     		ldr	r3, .L9+36
 228 00a0 1B78     		ldrb	r3, [r3]
 229 00a2 DBB2     		uxtb	r3, r3
 230 00a4 43F00803 		orr	r3, r3, #8
 231 00a8 DBB2     		uxtb	r3, r3
 232 00aa 1370     		strb	r3, [r2]
 222:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 223:.\Generated_Source\PSoC5/Scope0_ADC.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 233              		.loc 1 223 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 9


 234 00ac 0A20     		movs	r0, #10
 235 00ae FFF7FEFF 		bl	CyDelayUs
 224:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 225:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if(Scope0_ADC_IRQ_REMOVE == 0u)
 226:.\Generated_Source\PSoC5/Scope0_ADC.c ****         /* Clear a pending interrupt */
 227:.\Generated_Source\PSoC5/Scope0_ADC.c ****         CyIntClearPending(Scope0_ADC_INTC_NUMBER);
 236              		.loc 1 227 0
 237 00b2 0F4B     		ldr	r3, .L9+40
 238 00b4 2022     		movs	r2, #32
 239 00b6 1A60     		str	r2, [r3]
 228:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif   /* End Scope0_ADC_IRQ_REMOVE */
 229:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 230:.\Generated_Source\PSoC5/Scope0_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 240              		.loc 1 230 0
 241 00b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 242 00ba 1846     		mov	r0, r3
 243 00bc FFF7FEFF 		bl	CyExitCriticalSection
 231:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 244              		.loc 1 231 0
 245 00c0 0837     		adds	r7, r7, #8
 246              		.cfi_def_cfa_offset 8
 247 00c2 BD46     		mov	sp, r7
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 00c4 80BD     		pop	{r7, pc}
 251              	.L10:
 252 00c6 00BF     		.align	2
 253              	.L9:
 254 00c8 AB430040 		.word	1073759147
 255 00cc BB430040 		.word	1073759163
 256 00d0 A2430040 		.word	1073759138
 257 00d4 B2430040 		.word	1073759154
 258 00d8 03590040 		.word	1073764611
 259 00dc 06590040 		.word	1073764614
 260 00e0 05590040 		.word	1073764613
 261 00e4 00590040 		.word	1073764608
 262 00e8 14460040 		.word	1073759764
 263 00ec 275B0040 		.word	1073765159
 264 00f0 80E200E0 		.word	-536812928
 265              		.cfi_endproc
 266              	.LFE2:
 267              		.size	Scope0_ADC_Enable, .-Scope0_ADC_Enable
 268              		.section	.text.Scope0_ADC_Stop,"ax",%progbits
 269              		.align	2
 270              		.global	Scope0_ADC_Stop
 271              		.thumb
 272              		.thumb_func
 273              		.type	Scope0_ADC_Stop, %function
 274              	Scope0_ADC_Stop:
 275              	.LFB3:
 232:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 233:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 234:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 235:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_Stop
 236:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 237:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 238:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 10


 239:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 241:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 242:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 243:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 244:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 245:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 246:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 247:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 248:.\Generated_Source\PSoC5/Scope0_ADC.c **** void Scope0_ADC_Stop(void)
 249:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 276              		.loc 1 249 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 8
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 82B0     		sub	sp, sp, #8
 285              		.cfi_def_cfa_offset 16
 286 0004 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 250:.\Generated_Source\PSoC5/Scope0_ADC.c ****     uint8 enableInterrupts;
 251:.\Generated_Source\PSoC5/Scope0_ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 288              		.loc 1 251 0
 289 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 290 000a 0346     		mov	r3, r0
 291 000c FB71     		strb	r3, [r7, #7]
 252:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 253:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Stop all conversions */
 254:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_SAR_CSR0_REG &= (uint8)~Scope0_ADC_SAR_SOF_START_CONV;
 292              		.loc 1 254 0
 293 000e 174A     		ldr	r2, .L12
 294 0010 164B     		ldr	r3, .L12
 295 0012 1B78     		ldrb	r3, [r3]
 296 0014 DBB2     		uxtb	r3, r3
 297 0016 23F00103 		bic	r3, r3, #1
 298 001a DBB2     		uxtb	r3, r3
 299 001c 1370     		strb	r3, [r2]
 255:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_PWRMGR_SAR_REG &= (uint8)~Scope0_ADC_ACT_PWR_SAR_EN;
 300              		.loc 1 256 0
 301 001e 144A     		ldr	r2, .L12+4
 302 0020 134B     		ldr	r3, .L12+4
 303 0022 1B78     		ldrb	r3, [r3]
 304 0024 DBB2     		uxtb	r3, r3
 305 0026 23F00103 		bic	r3, r3, #1
 306 002a DBB2     		uxtb	r3, r3
 307 002c 1370     		strb	r3, [r2]
 257:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_STBY_PWRMGR_SAR_REG &= (uint8)~Scope0_ADC_STBY_PWR_SAR_EN;
 308              		.loc 1 258 0
 309 002e 114A     		ldr	r2, .L12+8
 310 0030 104B     		ldr	r3, .L12+8
 311 0032 1B78     		ldrb	r3, [r3]
 312 0034 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 11


 313 0036 23F00103 		bic	r3, r3, #1
 314 003a DBB2     		uxtb	r3, r3
 315 003c 1370     		strb	r3, [r2]
 259:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 260:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* This is only valid if there is an internal clock */
 261:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if(Scope0_ADC_DEFAULT_INTERNAL_CLK)
 262:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_PWRMGR_CLK_REG &= (uint8)~Scope0_ADC_ACT_PWR_CLK_EN;
 316              		.loc 1 262 0
 317 003e 0E4A     		ldr	r2, .L12+12
 318 0040 0D4B     		ldr	r3, .L12+12
 319 0042 1B78     		ldrb	r3, [r3]
 320 0044 DBB2     		uxtb	r3, r3
 321 0046 23F02003 		bic	r3, r3, #32
 322 004a DBB2     		uxtb	r3, r3
 323 004c 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_STBY_PWRMGR_CLK_REG &= (uint8)~Scope0_ADC_STBY_PWR_CLK_EN;
 324              		.loc 1 263 0
 325 004e 0B4A     		ldr	r2, .L12+16
 326 0050 0A4B     		ldr	r3, .L12+16
 327 0052 1B78     		ldrb	r3, [r3]
 328 0054 DBB2     		uxtb	r3, r3
 329 0056 23F02003 		bic	r3, r3, #32
 330 005a DBB2     		uxtb	r3, r3
 331 005c 1370     		strb	r3, [r2]
 264:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif /* End Scope0_ADC_DEFAULT_INTERNAL_CLK */
 265:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 266:.\Generated_Source\PSoC5/Scope0_ADC.c ****     CyExitCriticalSection(enableInterrupts);
 332              		.loc 1 266 0
 333 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 334 0060 1846     		mov	r0, r3
 335 0062 FFF7FEFF 		bl	CyExitCriticalSection
 267:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 268:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 336              		.loc 1 268 0
 337 0066 0837     		adds	r7, r7, #8
 338              		.cfi_def_cfa_offset 8
 339 0068 BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 006a 80BD     		pop	{r7, pc}
 343              	.L13:
 344              		.align	2
 345              	.L12:
 346 006c 00590040 		.word	1073764608
 347 0070 AB430040 		.word	1073759147
 348 0074 BB430040 		.word	1073759163
 349 0078 A2430040 		.word	1073759138
 350 007c B2430040 		.word	1073759154
 351              		.cfi_endproc
 352              	.LFE3:
 353              		.size	Scope0_ADC_Stop, .-Scope0_ADC_Stop
 354              		.section	.text.Scope0_ADC_SetPower,"ax",%progbits
 355              		.align	2
 356              		.global	Scope0_ADC_SetPower
 357              		.thumb
 358              		.thumb_func
 359              		.type	Scope0_ADC_SetPower, %function
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 12


 360              	Scope0_ADC_SetPower:
 361              	.LFB4:
 269:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 270:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 271:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 272:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_SetPower
 273:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 274:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 275:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
 276:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  settings with faster clock speeds.
 278:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 279:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 280:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  power:  Power setting for ADC
 281:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  0 ->    Normal
 282:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  1 ->    Medium power
 283:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  2 ->    1.25 power
 284:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  3 ->    Minimum power.
 285:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 286:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 287:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 288:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 289:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/Scope0_ADC.c **** void Scope0_ADC_SetPower(uint8 power)
 291:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 362              		.loc 1 291 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 16
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 367 0000 80B4     		push	{r7}
 368              		.cfi_def_cfa_offset 4
 369              		.cfi_offset 7, -4
 370 0002 85B0     		sub	sp, sp, #20
 371              		.cfi_def_cfa_offset 24
 372 0004 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 374 0006 0346     		mov	r3, r0
 375 0008 FB71     		strb	r3, [r7, #7]
 292:.\Generated_Source\PSoC5/Scope0_ADC.c ****     uint8 tmpReg;
 293:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 294:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* mask off invalid power settings */
 295:.\Generated_Source\PSoC5/Scope0_ADC.c ****     power &= Scope0_ADC_SAR_API_POWER_MASK;
 376              		.loc 1 295 0
 377 000a FB79     		ldrb	r3, [r7, #7]
 378 000c 03F00303 		and	r3, r3, #3
 379 0010 FB71     		strb	r3, [r7, #7]
 296:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 297:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Set Power parameter  */
 298:.\Generated_Source\PSoC5/Scope0_ADC.c ****     tmpReg = Scope0_ADC_SAR_CSR0_REG & (uint8)~Scope0_ADC_SAR_POWER_MASK;
 380              		.loc 1 298 0
 381 0012 0A4B     		ldr	r3, .L15
 382 0014 1B78     		ldrb	r3, [r3]
 383 0016 DBB2     		uxtb	r3, r3
 384 0018 03F03F03 		and	r3, r3, #63
 385 001c FB73     		strb	r3, [r7, #15]
 299:.\Generated_Source\PSoC5/Scope0_ADC.c ****     tmpReg |= (uint8)(power << Scope0_ADC_SAR_POWER_SHIFT);
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 13


 386              		.loc 1 299 0
 387 001e FB79     		ldrb	r3, [r7, #7]
 388 0020 9B01     		lsls	r3, r3, #6
 389 0022 DAB2     		uxtb	r2, r3
 390 0024 FB7B     		ldrb	r3, [r7, #15]
 391 0026 1343     		orrs	r3, r3, r2
 392 0028 FB73     		strb	r3, [r7, #15]
 300:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_SAR_CSR0_REG = tmpReg;
 393              		.loc 1 300 0
 394 002a 044A     		ldr	r2, .L15
 395 002c FB7B     		ldrb	r3, [r7, #15]
 396 002e 1370     		strb	r3, [r2]
 301:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 397              		.loc 1 301 0
 398 0030 1437     		adds	r7, r7, #20
 399              		.cfi_def_cfa_offset 4
 400 0032 BD46     		mov	sp, r7
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 0034 5DF8047B 		ldr	r7, [sp], #4
 404              		.cfi_restore 7
 405              		.cfi_def_cfa_offset 0
 406 0038 7047     		bx	lr
 407              	.L16:
 408 003a 00BF     		.align	2
 409              	.L15:
 410 003c 00590040 		.word	1073764608
 411              		.cfi_endproc
 412              	.LFE4:
 413              		.size	Scope0_ADC_SetPower, .-Scope0_ADC_SetPower
 414              		.section	.text.Scope0_ADC_SetResolution,"ax",%progbits
 415              		.align	2
 416              		.global	Scope0_ADC_SetResolution
 417              		.thumb
 418              		.thumb_func
 419              		.type	Scope0_ADC_SetResolution, %function
 420              	Scope0_ADC_SetResolution:
 421              	.LFB5:
 302:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 303:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 304:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 305:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_SetResolution
 306:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 307:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 308:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
 309:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Sets the Relution of the SAR.
 310:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 311:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 312:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  resolution:
 313:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  12 ->    RES12
 314:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  10 ->    RES10
 315:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  8  ->    RES8
 316:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 317:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 318:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 319:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 320:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Side Effects:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 14


 321:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  recommended best practice is to stop conversions with
 323:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  conversions with ADC_StartConvert().
 325:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  If you decide not to stop conversions before calling this API, you
 326:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  before changing the resolution.
 328:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  not be changed until the current conversion is complete. Data will not be
 330:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  clock cycles.
 332:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  You may need add a delay of this number of clock cycles after
 333:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  ADC_SetResolution() is called before data is valid again.
 334:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  input range, and voltage reference.
 338:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 339:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 340:.\Generated_Source\PSoC5/Scope0_ADC.c **** void Scope0_ADC_SetResolution(uint8 resolution)
 341:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 422              		.loc 1 341 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 16
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 80B5     		push	{r7, lr}
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 84B0     		sub	sp, sp, #16
 431              		.cfi_def_cfa_offset 24
 432 0004 00AF     		add	r7, sp, #0
 433              		.cfi_def_cfa_register 7
 434 0006 0346     		mov	r3, r0
 435 0008 FB71     		strb	r3, [r7, #7]
 342:.\Generated_Source\PSoC5/Scope0_ADC.c ****     uint8 tmpReg;
 343:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 344:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:.\Generated_Source\PSoC5/Scope0_ADC.c ****     switch (resolution)
 436              		.loc 1 345 0
 437 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 438 000c 0A2B     		cmp	r3, #10
 439 000e 07D0     		beq	.L19
 440 0010 0C2B     		cmp	r3, #12
 441 0012 02D0     		beq	.L20
 442 0014 082B     		cmp	r3, #8
 443 0016 06D0     		beq	.L21
 444 0018 08E0     		b	.L23
 445              	.L20:
 346:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {
 347:.\Generated_Source\PSoC5/Scope0_ADC.c ****         case (uint8)Scope0_ADC__BITS_12:
 348:.\Generated_Source\PSoC5/Scope0_ADC.c ****             tmpReg = Scope0_ADC_SAR_RESOLUTION_12BIT | Scope0_ADC_SAR_SAMPLE_WIDTH;
 446              		.loc 1 348 0
 447 001a C223     		movs	r3, #194
 448 001c FB73     		strb	r3, [r7, #15]
 349:.\Generated_Source\PSoC5/Scope0_ADC.c ****             break;
 449              		.loc 1 349 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 15


 450 001e 0BE0     		b	.L22
 451              	.L19:
 350:.\Generated_Source\PSoC5/Scope0_ADC.c ****         case (uint8)Scope0_ADC__BITS_10:
 351:.\Generated_Source\PSoC5/Scope0_ADC.c ****             tmpReg = Scope0_ADC_SAR_RESOLUTION_10BIT | Scope0_ADC_SAR_SAMPLE_WIDTH;
 452              		.loc 1 351 0
 453 0020 8223     		movs	r3, #130
 454 0022 FB73     		strb	r3, [r7, #15]
 352:.\Generated_Source\PSoC5/Scope0_ADC.c ****             break;
 455              		.loc 1 352 0
 456 0024 08E0     		b	.L22
 457              	.L21:
 353:.\Generated_Source\PSoC5/Scope0_ADC.c ****         case (uint8)Scope0_ADC__BITS_8:
 354:.\Generated_Source\PSoC5/Scope0_ADC.c ****             tmpReg = Scope0_ADC_SAR_RESOLUTION_8BIT | Scope0_ADC_SAR_SAMPLE_WIDTH;
 458              		.loc 1 354 0
 459 0026 4223     		movs	r3, #66
 460 0028 FB73     		strb	r3, [r7, #15]
 355:.\Generated_Source\PSoC5/Scope0_ADC.c ****             break;
 461              		.loc 1 355 0
 462 002a 05E0     		b	.L22
 463              	.L23:
 356:.\Generated_Source\PSoC5/Scope0_ADC.c ****         default:
 357:.\Generated_Source\PSoC5/Scope0_ADC.c ****             tmpReg = Scope0_ADC_SAR_RESOLUTION_12BIT | Scope0_ADC_SAR_SAMPLE_WIDTH;
 464              		.loc 1 357 0
 465 002c C223     		movs	r3, #194
 466 002e FB73     		strb	r3, [r7, #15]
 358:.\Generated_Source\PSoC5/Scope0_ADC.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:.\Generated_Source\PSoC5/Scope0_ADC.c ****             CYASSERT(0u != 0u);
 467              		.loc 1 359 0
 468 0030 0020     		movs	r0, #0
 469 0032 FFF7FEFF 		bl	CyHalt
 360:.\Generated_Source\PSoC5/Scope0_ADC.c ****             break;
 470              		.loc 1 360 0
 471 0036 00BF     		nop
 472              	.L22:
 361:.\Generated_Source\PSoC5/Scope0_ADC.c ****     }
 362:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_SAR_CSR2_REG = tmpReg;
 473              		.loc 1 362 0
 474 0038 044A     		ldr	r2, .L24
 475 003a FB7B     		ldrb	r3, [r7, #15]
 476 003c 1370     		strb	r3, [r2]
 363:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 364:.\Generated_Source\PSoC5/Scope0_ADC.c ****      /* Calculate gain for convert counts to volts */
 365:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_CalcGain(resolution);
 477              		.loc 1 365 0
 478 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 479 0040 1846     		mov	r0, r3
 480 0042 FFF7FEFF 		bl	Scope0_ADC_CalcGain
 366:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 481              		.loc 1 366 0
 482 0046 1037     		adds	r7, r7, #16
 483              		.cfi_def_cfa_offset 8
 484 0048 BD46     		mov	sp, r7
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 004a 80BD     		pop	{r7, pc}
 488              	.L25:
 489              		.align	2
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 16


 490              	.L24:
 491 004c 02590040 		.word	1073764610
 492              		.cfi_endproc
 493              	.LFE5:
 494              		.size	Scope0_ADC_SetResolution, .-Scope0_ADC_SetResolution
 495              		.section	.text.Scope0_ADC_StartConvert,"ax",%progbits
 496              		.align	2
 497              		.global	Scope0_ADC_StartConvert
 498              		.thumb
 499              		.thumb_func
 500              		.type	Scope0_ADC_StartConvert, %function
 501              	Scope0_ADC_StartConvert:
 502              	.LFB6:
 367:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 368:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 369:.\Generated_Source\PSoC5/Scope0_ADC.c **** #if(Scope0_ADC_DEFAULT_CONV_MODE != Scope0_ADC__HARDWARE_TRIGGER)
 370:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 371:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 372:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC5/Scope0_ADC.c ****     * Function Name: Scope0_ADC_StartConvert
 374:.\Generated_Source\PSoC5/Scope0_ADC.c ****     ********************************************************************************
 375:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *
 376:.\Generated_Source\PSoC5/Scope0_ADC.c ****     * Summary:
 377:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  version of the SOC and every conversion must be triggered by
 380:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  Scope0_ADC_StartConvert(). This function is not available when the
 381:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  Hardware Trigger sample mode is selected.
 382:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *
 383:.\Generated_Source\PSoC5/Scope0_ADC.c ****     * Parameters:
 384:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  None.
 385:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *
 386:.\Generated_Source\PSoC5/Scope0_ADC.c ****     * Return:
 387:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  None.
 388:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *
 389:.\Generated_Source\PSoC5/Scope0_ADC.c ****     * Theory:
 390:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *
 395:.\Generated_Source\PSoC5/Scope0_ADC.c ****     * Side Effects:
 396:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  external pin to the internal SOF generation. Application should not call
 398:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  StartConvert if external source used for SOF.
 399:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *
 400:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *******************************************************************************/
 401:.\Generated_Source\PSoC5/Scope0_ADC.c ****     void Scope0_ADC_StartConvert(void)
 402:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {
 503              		.loc 1 402 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508 0000 80B4     		push	{r7}
 509              		.cfi_def_cfa_offset 4
 510              		.cfi_offset 7, -4
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 17


 511 0002 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 403:.\Generated_Source\PSoC5/Scope0_ADC.c ****         #if(Scope0_ADC_DEFAULT_CONV_MODE != Scope0_ADC__FREE_RUNNING)  /* If software triggered mod
 404:.\Generated_Source\PSoC5/Scope0_ADC.c ****             Scope0_ADC_SAR_CSR0_REG &= (uint8)~Scope0_ADC_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:.\Generated_Source\PSoC5/Scope0_ADC.c ****         #endif /* End Scope0_ADC_DEFAULT_CONV_MODE */
 406:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 407:.\Generated_Source\PSoC5/Scope0_ADC.c ****         /* Start the conversion */
 408:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_SAR_CSR0_REG |= Scope0_ADC_SAR_SOF_START_CONV;
 513              		.loc 1 408 0
 514 0004 054A     		ldr	r2, .L27
 515 0006 054B     		ldr	r3, .L27
 516 0008 1B78     		ldrb	r3, [r3]
 517 000a DBB2     		uxtb	r3, r3
 518 000c 43F00103 		orr	r3, r3, #1
 519 0010 DBB2     		uxtb	r3, r3
 520 0012 1370     		strb	r3, [r2]
 409:.\Generated_Source\PSoC5/Scope0_ADC.c ****     }
 521              		.loc 1 409 0
 522 0014 BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 0016 5DF8047B 		ldr	r7, [sp], #4
 526              		.cfi_restore 7
 527              		.cfi_def_cfa_offset 0
 528 001a 7047     		bx	lr
 529              	.L28:
 530              		.align	2
 531              	.L27:
 532 001c 00590040 		.word	1073764608
 533              		.cfi_endproc
 534              	.LFE6:
 535              		.size	Scope0_ADC_StartConvert, .-Scope0_ADC_StartConvert
 536              		.section	.text.Scope0_ADC_StopConvert,"ax",%progbits
 537              		.align	2
 538              		.global	Scope0_ADC_StopConvert
 539              		.thumb
 540              		.thumb_func
 541              		.type	Scope0_ADC_StopConvert, %function
 542              	Scope0_ADC_StopConvert:
 543              	.LFB7:
 410:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 411:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 412:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /*******************************************************************************
 413:.\Generated_Source\PSoC5/Scope0_ADC.c ****     * Function Name: Scope0_ADC_StopConvert
 414:.\Generated_Source\PSoC5/Scope0_ADC.c ****     ********************************************************************************
 415:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *
 416:.\Generated_Source\PSoC5/Scope0_ADC.c ****     * Summary:
 417:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *
 421:.\Generated_Source\PSoC5/Scope0_ADC.c ****     * Parameters:
 422:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  None.
 423:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *
 424:.\Generated_Source\PSoC5/Scope0_ADC.c ****     * Return:
 425:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  None.
 426:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 18


 427:.\Generated_Source\PSoC5/Scope0_ADC.c ****     * Theory:
 428:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  Stops ADC conversion in Free Running mode.
 429:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *
 430:.\Generated_Source\PSoC5/Scope0_ADC.c ****     * Side Effects:
 431:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *
 434:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *******************************************************************************/
 435:.\Generated_Source\PSoC5/Scope0_ADC.c ****     void Scope0_ADC_StopConvert(void)
 436:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {
 544              		.loc 1 436 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 549 0000 80B4     		push	{r7}
 550              		.cfi_def_cfa_offset 4
 551              		.cfi_offset 7, -4
 552 0002 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 437:.\Generated_Source\PSoC5/Scope0_ADC.c ****         /* Stop all conversions */
 438:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_SAR_CSR0_REG &= (uint8)~Scope0_ADC_SAR_SOF_START_CONV;
 554              		.loc 1 438 0
 555 0004 054A     		ldr	r2, .L30
 556 0006 054B     		ldr	r3, .L30
 557 0008 1B78     		ldrb	r3, [r3]
 558 000a DBB2     		uxtb	r3, r3
 559 000c 23F00103 		bic	r3, r3, #1
 560 0010 DBB2     		uxtb	r3, r3
 561 0012 1370     		strb	r3, [r2]
 439:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 440:.\Generated_Source\PSoC5/Scope0_ADC.c ****         #if(Scope0_ADC_DEFAULT_CONV_MODE != Scope0_ADC__FREE_RUNNING)  /* If software triggered mod
 441:.\Generated_Source\PSoC5/Scope0_ADC.c ****             /* Return source to UDB for hardware SOF signal */
 442:.\Generated_Source\PSoC5/Scope0_ADC.c ****             Scope0_ADC_SAR_CSR0_REG |= Scope0_ADC_SAR_MX_SOF_UDB;    /* source: UDB */
 443:.\Generated_Source\PSoC5/Scope0_ADC.c ****         #endif /* End Scope0_ADC_DEFAULT_CONV_MODE */
 444:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 445:.\Generated_Source\PSoC5/Scope0_ADC.c ****     }
 562              		.loc 1 445 0
 563 0014 BD46     		mov	sp, r7
 564              		.cfi_def_cfa_register 13
 565              		@ sp needed
 566 0016 5DF8047B 		ldr	r7, [sp], #4
 567              		.cfi_restore 7
 568              		.cfi_def_cfa_offset 0
 569 001a 7047     		bx	lr
 570              	.L31:
 571              		.align	2
 572              	.L30:
 573 001c 00590040 		.word	1073764608
 574              		.cfi_endproc
 575              	.LFE7:
 576              		.size	Scope0_ADC_StopConvert, .-Scope0_ADC_StopConvert
 577              		.section	.text.Scope0_ADC_IsEndConversion,"ax",%progbits
 578              		.align	2
 579              		.global	Scope0_ADC_IsEndConversion
 580              		.thumb
 581              		.thumb_func
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 19


 582              		.type	Scope0_ADC_IsEndConversion, %function
 583              	Scope0_ADC_IsEndConversion:
 584              	.LFB8:
 446:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 447:.\Generated_Source\PSoC5/Scope0_ADC.c **** #endif /* End Scope0_ADC_DEFAULT_CONV_MODE != Scope0_ADC__HARDWARE_TRIGGER */
 448:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 449:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 450:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_IsEndConversion
 452:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 454:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
 455:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Immediately returns the status of the conversion or does not return
 456:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  parameter.
 458:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 459:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 460:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  retMode:  Check conversion return mode.
 461:.\Generated_Source\PSoC5/Scope0_ADC.c **** *   Scope0_ADC_RETURN_STATUS: Immediately returns the status. If the
 462:.\Generated_Source\PSoC5/Scope0_ADC.c **** *     value returned is zero, the conversion is not complete, and this function
 463:.\Generated_Source\PSoC5/Scope0_ADC.c **** *     should be retried until a nonzero result is returned.
 464:.\Generated_Source\PSoC5/Scope0_ADC.c **** *   Scope0_ADC_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:.\Generated_Source\PSoC5/Scope0_ADC.c **** *     conversion is complete.
 466:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 467:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 468:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:.\Generated_Source\PSoC5/Scope0_ADC.c **** *           1 =>  The last conversion is complete.
 470:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 471:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Side Effects:
 472:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 474:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 475:.\Generated_Source\PSoC5/Scope0_ADC.c **** uint8 Scope0_ADC_IsEndConversion(uint8 retMode)
 476:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 585              		.loc 1 476 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 16
 588              		@ frame_needed = 1, uses_anonymous_args = 0
 589 0000 80B5     		push	{r7, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 7, -8
 592              		.cfi_offset 14, -4
 593 0002 84B0     		sub	sp, sp, #16
 594              		.cfi_def_cfa_offset 24
 595 0004 00AF     		add	r7, sp, #0
 596              		.cfi_def_cfa_register 7
 597 0006 0346     		mov	r3, r0
 598 0008 FB71     		strb	r3, [r7, #7]
 599              	.L34:
 477:.\Generated_Source\PSoC5/Scope0_ADC.c ****     uint8 status;
 478:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 479:.\Generated_Source\PSoC5/Scope0_ADC.c ****     do
 480:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {
 481:.\Generated_Source\PSoC5/Scope0_ADC.c ****         status = Scope0_ADC_SAR_CSR1_REG & Scope0_ADC_SAR_EOF_1;
 600              		.loc 1 481 0 discriminator 2
 601 000a 0C4B     		ldr	r3, .L37
 602 000c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 20


 603 000e DBB2     		uxtb	r3, r3
 604 0010 03F00103 		and	r3, r3, #1
 605 0014 FB73     		strb	r3, [r7, #15]
 482:.\Generated_Source\PSoC5/Scope0_ADC.c ****     } while ((status != Scope0_ADC_SAR_EOF_1) && (retMode == Scope0_ADC_WAIT_FOR_RESULT));
 606              		.loc 1 482 0 discriminator 2
 607 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 608 0018 012B     		cmp	r3, #1
 609 001a 02D0     		beq	.L33
 610              		.loc 1 482 0 is_stmt 0 discriminator 1
 611 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612 001e 002B     		cmp	r3, #0
 613 0020 F3D0     		beq	.L34
 614              	.L33:
 483:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* If convertion complete, wait until EOF bit released */
 484:.\Generated_Source\PSoC5/Scope0_ADC.c ****     if(status == Scope0_ADC_SAR_EOF_1)
 615              		.loc 1 484 0 is_stmt 1
 616 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 617 0024 012B     		cmp	r3, #1
 618 0026 04D1     		bne	.L35
 485:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {
 486:.\Generated_Source\PSoC5/Scope0_ADC.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:.\Generated_Source\PSoC5/Scope0_ADC.c ****         CyDelayUs(1u);
 619              		.loc 1 487 0
 620 0028 0120     		movs	r0, #1
 621 002a FFF7FEFF 		bl	CyDelayUs
 488:.\Generated_Source\PSoC5/Scope0_ADC.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:.\Generated_Source\PSoC5/Scope0_ADC.c ****         CY_GET_REG8(Scope0_ADC_SAR_CSR1_PTR);
 622              		.loc 1 489 0
 623 002e 034B     		ldr	r3, .L37
 624 0030 1B78     		ldrb	r3, [r3]
 625              	.L35:
 490:.\Generated_Source\PSoC5/Scope0_ADC.c ****     }
 491:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 492:.\Generated_Source\PSoC5/Scope0_ADC.c ****     return(status);
 626              		.loc 1 492 0
 627 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 493:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 628              		.loc 1 493 0
 629 0034 1846     		mov	r0, r3
 630 0036 1037     		adds	r7, r7, #16
 631              		.cfi_def_cfa_offset 8
 632 0038 BD46     		mov	sp, r7
 633              		.cfi_def_cfa_register 13
 634              		@ sp needed
 635 003a 80BD     		pop	{r7, pc}
 636              	.L38:
 637              		.align	2
 638              	.L37:
 639 003c 01590040 		.word	1073764609
 640              		.cfi_endproc
 641              	.LFE8:
 642              		.size	Scope0_ADC_IsEndConversion, .-Scope0_ADC_IsEndConversion
 643              		.section	.text.Scope0_ADC_GetResult8,"ax",%progbits
 644              		.align	2
 645              		.global	Scope0_ADC_GetResult8
 646              		.thumb
 647              		.thumb_func
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 21


 648              		.type	Scope0_ADC_GetResult8, %function
 649              	Scope0_ADC_GetResult8:
 650              	.LFB9:
 494:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 495:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 496:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_GetResult8
 498:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 500:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
 501:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  than 8 bits, the function returns the LSB of the result.
 503:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_IsEndConversion() should be called to verify that the data
 504:.\Generated_Source\PSoC5/Scope0_ADC.c **** *   sample is ready.
 505:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 506:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 507:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 508:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 509:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 510:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  The LSB of the last ADC conversion.
 511:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 512:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Global Variables:
 513:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_shift - used to convert the ADC counts to the 2s
 514:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  compliment form.
 515:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 516:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Side Effects:
 517:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Converts the ADC counts to the 2s complement form.
 518:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 519:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 520:.\Generated_Source\PSoC5/Scope0_ADC.c **** int8 Scope0_ADC_GetResult8( void )
 521:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 651              		.loc 1 521 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 656 0000 80B4     		push	{r7}
 657              		.cfi_def_cfa_offset 4
 658              		.cfi_offset 7, -4
 659 0002 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 522:.\Generated_Source\PSoC5/Scope0_ADC.c ****     return( (int8)Scope0_ADC_SAR_WRK0_REG - (int8)Scope0_ADC_shift);
 661              		.loc 1 522 0
 662 0004 074B     		ldr	r3, .L41
 663 0006 1B78     		ldrb	r3, [r3]
 664 0008 DAB2     		uxtb	r2, r3
 665 000a 074B     		ldr	r3, .L41+4
 666 000c 1B88     		ldrh	r3, [r3]	@ movhi
 667 000e 9BB2     		uxth	r3, r3
 668 0010 DBB2     		uxtb	r3, r3
 669 0012 D31A     		subs	r3, r2, r3
 670 0014 DBB2     		uxtb	r3, r3
 671 0016 DBB2     		uxtb	r3, r3
 672 0018 5BB2     		sxtb	r3, r3
 523:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 673              		.loc 1 523 0
 674 001a 1846     		mov	r0, r3
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 22


 675 001c BD46     		mov	sp, r7
 676              		.cfi_def_cfa_register 13
 677              		@ sp needed
 678 001e 5DF8047B 		ldr	r7, [sp], #4
 679              		.cfi_restore 7
 680              		.cfi_def_cfa_offset 0
 681 0022 7047     		bx	lr
 682              	.L42:
 683              		.align	2
 684              	.L41:
 685 0024 A05B0040 		.word	1073765280
 686 0028 00000000 		.word	Scope0_ADC_shift
 687              		.cfi_endproc
 688              	.LFE9:
 689              		.size	Scope0_ADC_GetResult8, .-Scope0_ADC_GetResult8
 690              		.section	.text.Scope0_ADC_GetResult16,"ax",%progbits
 691              		.align	2
 692              		.global	Scope0_ADC_GetResult16
 693              		.thumb
 694              		.thumb_func
 695              		.type	Scope0_ADC_GetResult16, %function
 696              	Scope0_ADC_GetResult16:
 697              	.LFB10:
 524:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 525:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 526:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 527:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_GetResult16
 528:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 529:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 530:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
 531:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  of 8 to 12 bits.
 533:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_IsEndConversion() should be called to verify that the data
 534:.\Generated_Source\PSoC5/Scope0_ADC.c **** *   sample is ready
 535:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 536:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 538:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 539:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 540:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  The 16-bit result of the last ADC conversion
 541:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 542:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Global Variables:
 543:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_shift - used to convert the ADC counts to the 2s
 544:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  compliment form.
 545:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 546:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Side Effects:
 547:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Converts the ADC counts to the 2s complement form.
 548:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 549:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 550:.\Generated_Source\PSoC5/Scope0_ADC.c **** int16 Scope0_ADC_GetResult16( void )
 551:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 698              		.loc 1 551 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 8
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703 0000 80B4     		push	{r7}
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 23


 704              		.cfi_def_cfa_offset 4
 705              		.cfi_offset 7, -4
 706 0002 83B0     		sub	sp, sp, #12
 707              		.cfi_def_cfa_offset 16
 708 0004 00AF     		add	r7, sp, #0
 709              		.cfi_def_cfa_register 7
 552:.\Generated_Source\PSoC5/Scope0_ADC.c ****     uint16 res;
 553:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 554:.\Generated_Source\PSoC5/Scope0_ADC.c ****     res = CY_GET_REG16(Scope0_ADC_SAR_WRK_PTR);
 710              		.loc 1 554 0
 711 0006 094B     		ldr	r3, .L45
 712 0008 1B88     		ldrh	r3, [r3]	@ movhi
 713 000a FB80     		strh	r3, [r7, #6]	@ movhi
 555:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 556:.\Generated_Source\PSoC5/Scope0_ADC.c ****     return( (int16)res - Scope0_ADC_shift );
 714              		.loc 1 556 0
 715 000c 084B     		ldr	r3, .L45+4
 716 000e 1B88     		ldrh	r3, [r3]	@ movhi
 717 0010 9BB2     		uxth	r3, r3
 718 0012 9BB2     		uxth	r3, r3
 719 0014 FA88     		ldrh	r2, [r7, #6]	@ movhi
 720 0016 D31A     		subs	r3, r2, r3
 721 0018 9BB2     		uxth	r3, r3
 722 001a 9BB2     		uxth	r3, r3
 723 001c 1BB2     		sxth	r3, r3
 557:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 724              		.loc 1 557 0
 725 001e 1846     		mov	r0, r3
 726 0020 0C37     		adds	r7, r7, #12
 727              		.cfi_def_cfa_offset 4
 728 0022 BD46     		mov	sp, r7
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 0024 5DF8047B 		ldr	r7, [sp], #4
 732              		.cfi_restore 7
 733              		.cfi_def_cfa_offset 0
 734 0028 7047     		bx	lr
 735              	.L46:
 736 002a 00BF     		.align	2
 737              	.L45:
 738 002c A05B0040 		.word	1073765280
 739 0030 00000000 		.word	Scope0_ADC_shift
 740              		.cfi_endproc
 741              	.LFE10:
 742              		.size	Scope0_ADC_GetResult16, .-Scope0_ADC_GetResult16
 743              		.section	.text.Scope0_ADC_SetOffset,"ax",%progbits
 744              		.align	2
 745              		.global	Scope0_ADC_SetOffset
 746              		.thumb
 747              		.thumb_func
 748              		.type	Scope0_ADC_SetOffset, %function
 749              	Scope0_ADC_SetOffset:
 750              	.LFB11:
 558:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 559:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 560:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_SetOffset
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 24


 562:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 563:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 564:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
 565:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Sets the ADC offset, which is used by Scope0_ADC_CountsTo_Volts(),
 566:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_CountsTo_mVolts(), and Scope0_ADC_CountsTo_uVolts()
 567:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  conversion.
 569:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 570:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 571:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:.\Generated_Source\PSoC5/Scope0_ADC.c ****    the same input voltage.
 573:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 574:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 575:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 576:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 577:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Global Variables:
 578:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  The Scope0_ADC_offset variable modified. This variable is used for
 579:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  offset calibration purpose.
 580:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Affects the Scope0_ADC_CountsTo_Volts,
 581:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_CountsTo_mVolts, Scope0_ADC_CountsTo_uVolts functions
 582:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  by subtracting the given offset.
 583:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 584:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC5/Scope0_ADC.c **** void Scope0_ADC_SetOffset(int16 offset)
 586:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 751              		.loc 1 586 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 8
 754              		@ frame_needed = 1, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 756 0000 80B4     		push	{r7}
 757              		.cfi_def_cfa_offset 4
 758              		.cfi_offset 7, -4
 759 0002 83B0     		sub	sp, sp, #12
 760              		.cfi_def_cfa_offset 16
 761 0004 00AF     		add	r7, sp, #0
 762              		.cfi_def_cfa_register 7
 763 0006 0346     		mov	r3, r0
 764 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_offset = offset;
 765              		.loc 1 587 0
 766 000a 044A     		ldr	r2, .L48
 767 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 768 000e 1380     		strh	r3, [r2]	@ movhi
 588:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 769              		.loc 1 588 0
 770 0010 0C37     		adds	r7, r7, #12
 771              		.cfi_def_cfa_offset 4
 772 0012 BD46     		mov	sp, r7
 773              		.cfi_def_cfa_register 13
 774              		@ sp needed
 775 0014 5DF8047B 		ldr	r7, [sp], #4
 776              		.cfi_restore 7
 777              		.cfi_def_cfa_offset 0
 778 0018 7047     		bx	lr
 779              	.L49:
 780 001a 00BF     		.align	2
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 25


 781              	.L48:
 782 001c 00000000 		.word	Scope0_ADC_offset
 783              		.cfi_endproc
 784              	.LFE11:
 785              		.size	Scope0_ADC_SetOffset, .-Scope0_ADC_SetOffset
 786              		.section	.text.Scope0_ADC_CalcGain,"ax",%progbits
 787              		.align	2
 788              		.thumb
 789              		.thumb_func
 790              		.type	Scope0_ADC_CalcGain, %function
 791              	Scope0_ADC_CalcGain:
 792              	.LFB12:
 589:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 590:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 591:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 592:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_CalcGain
 593:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 594:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 595:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
 596:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 598:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 599:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  uint8: resolution
 600:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 601:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 602:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 603:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 604:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Global Variables:
 605:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_shift variable initialized. This variable is used to
 606:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  convert the ADC counts to the 2s compliment form.
 607:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_countsPer10Volt variable initialized. This variable is used
 608:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  for gain calibration purpose.
 609:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 610:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 611:.\Generated_Source\PSoC5/Scope0_ADC.c **** static void Scope0_ADC_CalcGain( uint8 resolution )
 612:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 793              		.loc 1 612 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 16
 796              		@ frame_needed = 1, uses_anonymous_args = 0
 797 0000 80B5     		push	{r7, lr}
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 7, -8
 800              		.cfi_offset 14, -4
 801 0002 84B0     		sub	sp, sp, #16
 802              		.cfi_def_cfa_offset 24
 803 0004 00AF     		add	r7, sp, #0
 804              		.cfi_def_cfa_register 7
 805 0006 0346     		mov	r3, r0
 806 0008 FB71     		strb	r3, [r7, #7]
 613:.\Generated_Source\PSoC5/Scope0_ADC.c ****     int32 counts;
 614:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if(!((Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSS_TO_VREF) || \
 615:.\Generated_Source\PSoC5/Scope0_ADC.c ****          (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSSA_TO_VDDA) || \
 616:.\Generated_Source\PSoC5/Scope0_ADC.c ****          (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSSA_TO_VDAC)) )
 617:.\Generated_Source\PSoC5/Scope0_ADC.c ****         uint16 diff_zero;
 618:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif /* End Scope0_ADC_DEFAULT_RANGE */
 619:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 26


 620:.\Generated_Source\PSoC5/Scope0_ADC.c ****     switch (resolution)
 807              		.loc 1 620 0
 808 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 809 000c 0A2B     		cmp	r3, #10
 810 000e 08D0     		beq	.L52
 811 0010 0C2B     		cmp	r3, #12
 812 0012 02D0     		beq	.L53
 813 0014 082B     		cmp	r3, #8
 814 0016 08D0     		beq	.L54
 815 0018 0BE0     		b	.L56
 816              	.L53:
 621:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {
 622:.\Generated_Source\PSoC5/Scope0_ADC.c ****         case (uint8)Scope0_ADC__BITS_12:
 623:.\Generated_Source\PSoC5/Scope0_ADC.c ****             counts = (int32)Scope0_ADC_SAR_WRK_MAX_12BIT;
 817              		.loc 1 623 0
 818 001a 4FF48053 		mov	r3, #4096
 819 001e FB60     		str	r3, [r7, #12]
 624:.\Generated_Source\PSoC5/Scope0_ADC.c ****             #if(!((Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSS_TO_VREF) || \
 625:.\Generated_Source\PSoC5/Scope0_ADC.c ****                  (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSSA_TO_VDDA) || \
 626:.\Generated_Source\PSoC5/Scope0_ADC.c ****                  (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSSA_TO_VDAC)) )
 627:.\Generated_Source\PSoC5/Scope0_ADC.c ****                 diff_zero = Scope0_ADC_SAR_DIFF_SHIFT;
 628:.\Generated_Source\PSoC5/Scope0_ADC.c ****             #endif /* End Scope0_ADC_DEFAULT_RANGE */
 629:.\Generated_Source\PSoC5/Scope0_ADC.c ****             break;
 820              		.loc 1 629 0
 821 0020 0DE0     		b	.L55
 822              	.L52:
 630:.\Generated_Source\PSoC5/Scope0_ADC.c ****         case (uint8)Scope0_ADC__BITS_10:
 631:.\Generated_Source\PSoC5/Scope0_ADC.c ****             counts = (int32)Scope0_ADC_SAR_WRK_MAX_10BIT;
 823              		.loc 1 631 0
 824 0022 4FF48063 		mov	r3, #1024
 825 0026 FB60     		str	r3, [r7, #12]
 632:.\Generated_Source\PSoC5/Scope0_ADC.c ****             #if(!((Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSS_TO_VREF) || \
 633:.\Generated_Source\PSoC5/Scope0_ADC.c ****                  (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSSA_TO_VDDA) || \
 634:.\Generated_Source\PSoC5/Scope0_ADC.c ****                  (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSSA_TO_VDAC)) )
 635:.\Generated_Source\PSoC5/Scope0_ADC.c ****                 diff_zero = Scope0_ADC_SAR_DIFF_SHIFT >> 2u;
 636:.\Generated_Source\PSoC5/Scope0_ADC.c ****             #endif /* End Scope0_ADC_DEFAULT_RANGE */
 637:.\Generated_Source\PSoC5/Scope0_ADC.c ****             break;
 826              		.loc 1 637 0
 827 0028 09E0     		b	.L55
 828              	.L54:
 638:.\Generated_Source\PSoC5/Scope0_ADC.c ****         case (uint8)Scope0_ADC__BITS_8:
 639:.\Generated_Source\PSoC5/Scope0_ADC.c ****             counts = (int32)Scope0_ADC_SAR_WRK_MAX_8BIT;
 829              		.loc 1 639 0
 830 002a 4FF48073 		mov	r3, #256
 831 002e FB60     		str	r3, [r7, #12]
 640:.\Generated_Source\PSoC5/Scope0_ADC.c ****             #if(!((Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSS_TO_VREF) || \
 641:.\Generated_Source\PSoC5/Scope0_ADC.c ****                  (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSSA_TO_VDDA) || \
 642:.\Generated_Source\PSoC5/Scope0_ADC.c ****                  (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSSA_TO_VDAC)) )
 643:.\Generated_Source\PSoC5/Scope0_ADC.c ****                 diff_zero = Scope0_ADC_SAR_DIFF_SHIFT >> 4u;
 644:.\Generated_Source\PSoC5/Scope0_ADC.c ****             #endif /* End Scope0_ADC_DEFAULT_RANGE */
 645:.\Generated_Source\PSoC5/Scope0_ADC.c ****             break;
 832              		.loc 1 645 0
 833 0030 05E0     		b	.L55
 834              	.L56:
 646:.\Generated_Source\PSoC5/Scope0_ADC.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:.\Generated_Source\PSoC5/Scope0_ADC.c ****             counts = 0;
 835              		.loc 1 647 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 27


 836 0032 0023     		movs	r3, #0
 837 0034 FB60     		str	r3, [r7, #12]
 648:.\Generated_Source\PSoC5/Scope0_ADC.c ****             #if(!((Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSS_TO_VREF) || \
 649:.\Generated_Source\PSoC5/Scope0_ADC.c ****                  (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSSA_TO_VDDA) || \
 650:.\Generated_Source\PSoC5/Scope0_ADC.c ****                  (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSSA_TO_VDAC)) )
 651:.\Generated_Source\PSoC5/Scope0_ADC.c ****                 diff_zero = 0u;
 652:.\Generated_Source\PSoC5/Scope0_ADC.c ****             #endif /* End Scope0_ADC_DEFAULT_RANGE */
 653:.\Generated_Source\PSoC5/Scope0_ADC.c ****             CYASSERT(0u != 0u);
 838              		.loc 1 653 0
 839 0036 0020     		movs	r0, #0
 840 0038 FFF7FEFF 		bl	CyHalt
 654:.\Generated_Source\PSoC5/Scope0_ADC.c ****             break;
 841              		.loc 1 654 0
 842 003c 00BF     		nop
 843              	.L55:
 655:.\Generated_Source\PSoC5/Scope0_ADC.c ****     }
 656:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_countsPerVolt = 0; /* Clear obsolete variable */
 844              		.loc 1 656 0
 845 003e 0C4B     		ldr	r3, .L57
 846 0040 0022     		movs	r2, #0
 847 0042 1A80     		strh	r2, [r3]	@ movhi
 657:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_countsPer10Volt = (((counts * Scope0_ADC_10MV_COUNTS) +
 848              		.loc 1 658 0
 849 0044 FB68     		ldr	r3, [r7, #12]
 850 0046 42F21072 		movw	r2, #10000
 851 004a 02FB03F3 		mul	r3, r2, r3
 852 004e 03F6C413 		addw	r3, r3, #2500
 659:.\Generated_Source\PSoC5/Scope0_ADC.c ****                         Scope0_ADC_DEFAULT_REF_VOLTAGE_MV) / (Scope0_ADC_DEFAULT_REF_VOLTAGE_MV * 2
 853              		.loc 1 659 0
 854 0052 084A     		ldr	r2, .L57+4
 855 0054 82FB0312 		smull	r1, r2, r2, r3
 856 0058 D212     		asrs	r2, r2, #11
 857 005a DB17     		asrs	r3, r3, #31
 858 005c D31A     		subs	r3, r2, r3
 658:.\Generated_Source\PSoC5/Scope0_ADC.c ****                         Scope0_ADC_DEFAULT_REF_VOLTAGE_MV) / (Scope0_ADC_DEFAULT_REF_VOLTAGE_MV * 2
 859              		.loc 1 658 0
 860 005e 064A     		ldr	r2, .L57+8
 861 0060 1360     		str	r3, [r2]
 660:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 661:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #if( (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSS_TO_VREF) || \
 662:.\Generated_Source\PSoC5/Scope0_ADC.c ****          (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSSA_TO_VDDA) || \
 663:.\Generated_Source\PSoC5/Scope0_ADC.c ****          (Scope0_ADC_DEFAULT_RANGE == Scope0_ADC__VSSA_TO_VDAC) )
 664:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_shift = 0;
 862              		.loc 1 664 0
 863 0062 064B     		ldr	r3, .L57+12
 864 0064 0022     		movs	r2, #0
 865 0066 1A80     		strh	r2, [r3]	@ movhi
 665:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #else
 666:.\Generated_Source\PSoC5/Scope0_ADC.c ****         Scope0_ADC_shift = diff_zero;
 667:.\Generated_Source\PSoC5/Scope0_ADC.c ****     #endif /* End Scope0_ADC_DEFAULT_RANGE */
 668:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 866              		.loc 1 668 0
 867 0068 1037     		adds	r7, r7, #16
 868              		.cfi_def_cfa_offset 8
 869 006a BD46     		mov	sp, r7
 870              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 28


 871              		@ sp needed
 872 006c 80BD     		pop	{r7, pc}
 873              	.L58:
 874 006e 00BF     		.align	2
 875              	.L57:
 876 0070 00000000 		.word	Scope0_ADC_countsPerVolt
 877 0074 AD8BDB68 		.word	1759218605
 878 0078 00000000 		.word	Scope0_ADC_countsPer10Volt
 879 007c 00000000 		.word	Scope0_ADC_shift
 880              		.cfi_endproc
 881              	.LFE12:
 882              		.size	Scope0_ADC_CalcGain, .-Scope0_ADC_CalcGain
 883              		.section	.text.Scope0_ADC_SetGain,"ax",%progbits
 884              		.align	2
 885              		.global	Scope0_ADC_SetGain
 886              		.thumb
 887              		.thumb_func
 888              		.type	Scope0_ADC_SetGain, %function
 889              	Scope0_ADC_SetGain:
 890              	.LFB13:
 669:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 670:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 671:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_SetGain
 673:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 675:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
 676:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  that follow. This value is set by default by the reference and input range
 678:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  input or if the ADC is using an external reference.
 680:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 681:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 682:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  int16 adcGain counts per volt
 683:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 684:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 685:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 686:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 687:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Global Variables:
 688:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_countsPer10Volt variable modified. This variable is used
 689:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  for gain calibration purpose.
 690:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 691:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 692:.\Generated_Source\PSoC5/Scope0_ADC.c **** void Scope0_ADC_SetGain(int16 adcGain)
 693:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 891              		.loc 1 693 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 8
 894              		@ frame_needed = 1, uses_anonymous_args = 0
 895              		@ link register save eliminated.
 896 0000 80B4     		push	{r7}
 897              		.cfi_def_cfa_offset 4
 898              		.cfi_offset 7, -4
 899 0002 83B0     		sub	sp, sp, #12
 900              		.cfi_def_cfa_offset 16
 901 0004 00AF     		add	r7, sp, #0
 902              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 29


 903 0006 0346     		mov	r3, r0
 904 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 694:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_countsPer10Volt = (int32)adcGain * 10;
 905              		.loc 1 694 0
 906 000a B7F90620 		ldrsh	r2, [r7, #6]
 907 000e 1346     		mov	r3, r2
 908 0010 9B00     		lsls	r3, r3, #2
 909 0012 1344     		add	r3, r3, r2
 910 0014 5B00     		lsls	r3, r3, #1
 911 0016 1A46     		mov	r2, r3
 912 0018 034B     		ldr	r3, .L60
 913 001a 1A60     		str	r2, [r3]
 695:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 914              		.loc 1 695 0
 915 001c 0C37     		adds	r7, r7, #12
 916              		.cfi_def_cfa_offset 4
 917 001e BD46     		mov	sp, r7
 918              		.cfi_def_cfa_register 13
 919              		@ sp needed
 920 0020 5DF8047B 		ldr	r7, [sp], #4
 921              		.cfi_restore 7
 922              		.cfi_def_cfa_offset 0
 923 0024 7047     		bx	lr
 924              	.L61:
 925 0026 00BF     		.align	2
 926              	.L60:
 927 0028 00000000 		.word	Scope0_ADC_countsPer10Volt
 928              		.cfi_endproc
 929              	.LFE13:
 930              		.size	Scope0_ADC_SetGain, .-Scope0_ADC_SetGain
 931              		.section	.text.Scope0_ADC_SetScaledGain,"ax",%progbits
 932              		.align	2
 933              		.global	Scope0_ADC_SetScaledGain
 934              		.thumb
 935              		.thumb_func
 936              		.type	Scope0_ADC_SetScaledGain, %function
 937              	Scope0_ADC_SetScaledGain:
 938              	.LFB14:
 696:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 697:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 698:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_SetScaledGain
 700:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 702:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
 703:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  that follow. This value is set by default by the reference and input range
 705:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  input or if the ADC is using an external reference.
 707:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 708:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 709:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  int32 adcGain  counts per 10 volt
 710:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 711:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 712:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  None.
 713:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 714:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Global Variables:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 30


 715:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_countsPer10Volt variable modified. This variable is used
 716:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  for gain calibration purpose.
 717:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 718:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 719:.\Generated_Source\PSoC5/Scope0_ADC.c **** void Scope0_ADC_SetScaledGain(int32 adcGain)
 720:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 939              		.loc 1 720 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 8
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943              		@ link register save eliminated.
 944 0000 80B4     		push	{r7}
 945              		.cfi_def_cfa_offset 4
 946              		.cfi_offset 7, -4
 947 0002 83B0     		sub	sp, sp, #12
 948              		.cfi_def_cfa_offset 16
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 951 0006 7860     		str	r0, [r7, #4]
 721:.\Generated_Source\PSoC5/Scope0_ADC.c ****     Scope0_ADC_countsPer10Volt = adcGain;
 952              		.loc 1 721 0
 953 0008 034A     		ldr	r2, .L63
 954 000a 7B68     		ldr	r3, [r7, #4]
 955 000c 1360     		str	r3, [r2]
 722:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 956              		.loc 1 722 0
 957 000e 0C37     		adds	r7, r7, #12
 958              		.cfi_def_cfa_offset 4
 959 0010 BD46     		mov	sp, r7
 960              		.cfi_def_cfa_register 13
 961              		@ sp needed
 962 0012 5DF8047B 		ldr	r7, [sp], #4
 963              		.cfi_restore 7
 964              		.cfi_def_cfa_offset 0
 965 0016 7047     		bx	lr
 966              	.L64:
 967              		.align	2
 968              	.L63:
 969 0018 00000000 		.word	Scope0_ADC_countsPer10Volt
 970              		.cfi_endproc
 971              	.LFE14:
 972              		.size	Scope0_ADC_SetScaledGain, .-Scope0_ADC_SetScaledGain
 973              		.section	.text.Scope0_ADC_CountsTo_mVolts,"ax",%progbits
 974              		.align	2
 975              		.global	Scope0_ADC_CountsTo_mVolts
 976              		.thumb
 977              		.thumb_func
 978              		.type	Scope0_ADC_CountsTo_mVolts, %function
 979              	Scope0_ADC_CountsTo_mVolts:
 980              	.LFB15:
 723:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 724:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 725:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 726:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_CountsTo_mVolts
 727:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 728:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 729:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 31


 730:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 732:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 733:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 735:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 736:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  int16 Result in mVolts
 737:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 738:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Global Variables:
 739:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_offset variable used.
 740:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_countsPer10Volt variable used.
 741:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 742:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC5/Scope0_ADC.c **** int16 Scope0_ADC_CountsTo_mVolts(int16 adcCounts)
 744:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 981              		.loc 1 744 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 16
 984              		@ frame_needed = 1, uses_anonymous_args = 0
 985              		@ link register save eliminated.
 986 0000 80B4     		push	{r7}
 987              		.cfi_def_cfa_offset 4
 988              		.cfi_offset 7, -4
 989 0002 85B0     		sub	sp, sp, #20
 990              		.cfi_def_cfa_offset 24
 991 0004 00AF     		add	r7, sp, #0
 992              		.cfi_def_cfa_register 7
 993 0006 0346     		mov	r3, r0
 994 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 745:.\Generated_Source\PSoC5/Scope0_ADC.c ****     int16 mVolts;
 746:.\Generated_Source\PSoC5/Scope0_ADC.c ****     int32 countsPer10Volt;
 747:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 748:.\Generated_Source\PSoC5/Scope0_ADC.c ****     if(Scope0_ADC_countsPerVolt != 0)
 995              		.loc 1 748 0
 996 000a 1D4B     		ldr	r3, .L71
 997 000c 1B88     		ldrh	r3, [r3]	@ movhi
 998 000e 9BB2     		uxth	r3, r3
 999 0010 002B     		cmp	r3, #0
 1000 0012 09D0     		beq	.L66
 749:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {   /* Support obsolete method */
 750:.\Generated_Source\PSoC5/Scope0_ADC.c ****         countsPer10Volt = (int32)Scope0_ADC_countsPerVolt * 10;
 1001              		.loc 1 750 0
 1002 0014 1A4B     		ldr	r3, .L71
 1003 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1004 0018 9BB2     		uxth	r3, r3
 1005 001a 1AB2     		sxth	r2, r3
 1006 001c 1346     		mov	r3, r2
 1007 001e 9B00     		lsls	r3, r3, #2
 1008 0020 1344     		add	r3, r3, r2
 1009 0022 5B00     		lsls	r3, r3, #1
 1010 0024 FB60     		str	r3, [r7, #12]
 1011 0026 02E0     		b	.L67
 1012              	.L66:
 751:.\Generated_Source\PSoC5/Scope0_ADC.c ****     }
 752:.\Generated_Source\PSoC5/Scope0_ADC.c ****     else
 753:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {
 754:.\Generated_Source\PSoC5/Scope0_ADC.c ****         countsPer10Volt = Scope0_ADC_countsPer10Volt;
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 32


 1013              		.loc 1 754 0
 1014 0028 164B     		ldr	r3, .L71+4
 1015 002a 1B68     		ldr	r3, [r3]
 1016 002c FB60     		str	r3, [r7, #12]
 1017              	.L67:
 755:.\Generated_Source\PSoC5/Scope0_ADC.c ****     }
 756:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 757:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Subtract ADC offset */
 758:.\Generated_Source\PSoC5/Scope0_ADC.c ****     adcCounts -= Scope0_ADC_offset;
 1018              		.loc 1 758 0
 1019 002e 164B     		ldr	r3, .L71+8
 1020 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1021 0032 9BB2     		uxth	r3, r3
 1022 0034 FA88     		ldrh	r2, [r7, #6]
 1023 0036 9BB2     		uxth	r3, r3
 1024 0038 D31A     		subs	r3, r2, r3
 1025 003a 9BB2     		uxth	r3, r3
 1026 003c FB80     		strh	r3, [r7, #6]	@ movhi
 759:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Convert to millivolts with rounding */
 760:.\Generated_Source\PSoC5/Scope0_ADC.c ****     mVolts = (int16)( (( (int32)adcCounts * Scope0_ADC_10MV_COUNTS ) + ( (adcCounts > 0) ?
 1027              		.loc 1 760 0
 1028 003e B7F90630 		ldrsh	r3, [r7, #6]
 1029 0042 42F21072 		movw	r2, #10000
 1030 0046 02FB03F2 		mul	r2, r2, r3
 761:.\Generated_Source\PSoC5/Scope0_ADC.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1031              		.loc 1 761 0
 1032 004a B7F90630 		ldrsh	r3, [r7, #6]
 1033 004e 002B     		cmp	r3, #0
 1034 0050 04DD     		ble	.L68
 1035              		.loc 1 761 0 is_stmt 0 discriminator 1
 1036 0052 FB68     		ldr	r3, [r7, #12]
 1037 0054 D90F     		lsrs	r1, r3, #31
 1038 0056 0B44     		add	r3, r3, r1
 1039 0058 5B10     		asrs	r3, r3, #1
 1040 005a 04E0     		b	.L69
 1041              	.L68:
 1042              		.loc 1 761 0 discriminator 2
 1043 005c FB68     		ldr	r3, [r7, #12]
 1044 005e D90F     		lsrs	r1, r3, #31
 1045 0060 0B44     		add	r3, r3, r1
 1046 0062 5B10     		asrs	r3, r3, #1
 1047 0064 5B42     		negs	r3, r3
 1048              	.L69:
 760:.\Generated_Source\PSoC5/Scope0_ADC.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1049              		.loc 1 760 0 is_stmt 1
 1050 0066 1A44     		add	r2, r2, r3
 1051              		.loc 1 761 0
 1052 0068 FB68     		ldr	r3, [r7, #12]
 1053 006a 92FBF3F3 		sdiv	r3, r2, r3
 760:.\Generated_Source\PSoC5/Scope0_ADC.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1054              		.loc 1 760 0
 1055 006e 7B81     		strh	r3, [r7, #10]	@ movhi
 762:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 763:.\Generated_Source\PSoC5/Scope0_ADC.c ****     return( mVolts );
 1056              		.loc 1 763 0
 1057 0070 7B89     		ldrh	r3, [r7, #10]
 1058 0072 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 33


 764:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 1059              		.loc 1 764 0
 1060 0074 1846     		mov	r0, r3
 1061 0076 1437     		adds	r7, r7, #20
 1062              		.cfi_def_cfa_offset 4
 1063 0078 BD46     		mov	sp, r7
 1064              		.cfi_def_cfa_register 13
 1065              		@ sp needed
 1066 007a 5DF8047B 		ldr	r7, [sp], #4
 1067              		.cfi_restore 7
 1068              		.cfi_def_cfa_offset 0
 1069 007e 7047     		bx	lr
 1070              	.L72:
 1071              		.align	2
 1072              	.L71:
 1073 0080 00000000 		.word	Scope0_ADC_countsPerVolt
 1074 0084 00000000 		.word	Scope0_ADC_countsPer10Volt
 1075 0088 00000000 		.word	Scope0_ADC_offset
 1076              		.cfi_endproc
 1077              	.LFE15:
 1078              		.size	Scope0_ADC_CountsTo_mVolts, .-Scope0_ADC_CountsTo_mVolts
 1079              		.global	__aeabi_ldivmod
 1080              		.section	.text.Scope0_ADC_CountsTo_uVolts,"ax",%progbits
 1081              		.align	2
 1082              		.global	Scope0_ADC_CountsTo_uVolts
 1083              		.thumb
 1084              		.thumb_func
 1085              		.type	Scope0_ADC_CountsTo_uVolts, %function
 1086              	Scope0_ADC_CountsTo_uVolts:
 1087              	.LFB16:
 765:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 766:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 767:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 768:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_CountsTo_uVolts
 769:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 770:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 771:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
 772:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 774:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 775:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  int16 adcCounts: Result from the ADC conversion
 776:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 777:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 778:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  int32 Result in micro Volts
 779:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 780:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Global Variables:
 781:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_offset variable used.
 782:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_countsPer10Volt used to convert ADC counts to uVolts.
 783:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 784:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 785:.\Generated_Source\PSoC5/Scope0_ADC.c **** int32 Scope0_ADC_CountsTo_uVolts(int16 adcCounts)
 786:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 1088              		.loc 1 786 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 24
 1091              		@ frame_needed = 1, uses_anonymous_args = 0
 1092 0000 B0B5     		push	{r4, r5, r7, lr}
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 34


 1093              		.cfi_def_cfa_offset 16
 1094              		.cfi_offset 4, -16
 1095              		.cfi_offset 5, -12
 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 86B0     		sub	sp, sp, #24
 1099              		.cfi_def_cfa_offset 40
 1100 0004 00AF     		add	r7, sp, #0
 1101              		.cfi_def_cfa_register 7
 1102 0006 0346     		mov	r3, r0
 1103 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 787:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 788:.\Generated_Source\PSoC5/Scope0_ADC.c ****     int64 uVolts;
 789:.\Generated_Source\PSoC5/Scope0_ADC.c ****     int32 countsPer10Volt;
 790:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 791:.\Generated_Source\PSoC5/Scope0_ADC.c ****     if(Scope0_ADC_countsPerVolt != 0)
 1104              		.loc 1 791 0
 1105 000a 1E4B     		ldr	r3, .L77
 1106 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1107 000e 9BB2     		uxth	r3, r3
 1108 0010 002B     		cmp	r3, #0
 1109 0012 09D0     		beq	.L74
 792:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {   /* Support obsolete method */
 793:.\Generated_Source\PSoC5/Scope0_ADC.c ****         countsPer10Volt = (int32)Scope0_ADC_countsPerVolt * 10;
 1110              		.loc 1 793 0
 1111 0014 1B4B     		ldr	r3, .L77
 1112 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1113 0018 9BB2     		uxth	r3, r3
 1114 001a 1AB2     		sxth	r2, r3
 1115 001c 1346     		mov	r3, r2
 1116 001e 9B00     		lsls	r3, r3, #2
 1117 0020 1344     		add	r3, r3, r2
 1118 0022 5B00     		lsls	r3, r3, #1
 1119 0024 7B61     		str	r3, [r7, #20]
 1120 0026 02E0     		b	.L75
 1121              	.L74:
 794:.\Generated_Source\PSoC5/Scope0_ADC.c ****     }
 795:.\Generated_Source\PSoC5/Scope0_ADC.c ****     else
 796:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {
 797:.\Generated_Source\PSoC5/Scope0_ADC.c ****         countsPer10Volt = Scope0_ADC_countsPer10Volt;
 1122              		.loc 1 797 0
 1123 0028 174B     		ldr	r3, .L77+4
 1124 002a 1B68     		ldr	r3, [r3]
 1125 002c 7B61     		str	r3, [r7, #20]
 1126              	.L75:
 798:.\Generated_Source\PSoC5/Scope0_ADC.c ****     }
 799:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 800:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Subtract ADC offset */
 801:.\Generated_Source\PSoC5/Scope0_ADC.c ****     adcCounts -= Scope0_ADC_offset;
 1127              		.loc 1 801 0
 1128 002e 174B     		ldr	r3, .L77+8
 1129 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1130 0032 9BB2     		uxth	r3, r3
 1131 0034 FA88     		ldrh	r2, [r7, #6]
 1132 0036 9BB2     		uxth	r3, r3
 1133 0038 D31A     		subs	r3, r2, r3
 1134 003a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 35


 1135 003c FB80     		strh	r3, [r7, #6]	@ movhi
 802:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:.\Generated_Source\PSoC5/Scope0_ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:.\Generated_Source\PSoC5/Scope0_ADC.c ****     */
 805:.\Generated_Source\PSoC5/Scope0_ADC.c ****     uVolts = (( (int64)adcCounts * Scope0_ADC_10UV_COUNTS ) / countsPer10Volt);
 1136              		.loc 1 805 0
 1137 003e B7F90620 		ldrsh	r2, [r7, #6]
 1138 0042 4FEAE273 		asr	r3, r2, #31
 1139 0046 1249     		ldr	r1, .L77+12
 1140 0048 01FB03F0 		mul	r0, r1, r3
 1141 004c 0021     		movs	r1, #0
 1142 004e 01FB02F1 		mul	r1, r1, r2
 1143 0052 0144     		add	r1, r1, r0
 1144 0054 0E48     		ldr	r0, .L77+12
 1145 0056 A2FB0023 		umull	r2, r3, r2, r0
 1146 005a 1944     		add	r1, r1, r3
 1147 005c 0B46     		mov	r3, r1
 1148 005e 7969     		ldr	r1, [r7, #20]
 1149 0060 0C46     		mov	r4, r1
 1150 0062 4FEAE475 		asr	r5, r4, #31
 1151 0066 1046     		mov	r0, r2
 1152 0068 1946     		mov	r1, r3
 1153 006a 2246     		mov	r2, r4
 1154 006c 2B46     		mov	r3, r5
 1155 006e FFF7FEFF 		bl	__aeabi_ldivmod
 1156 0072 0246     		mov	r2, r0
 1157 0074 0B46     		mov	r3, r1
 1158 0076 C7E90223 		strd	r2, [r7, #8]
 806:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 807:.\Generated_Source\PSoC5/Scope0_ADC.c ****     return( uVolts );
 1159              		.loc 1 807 0
 1160 007a BB68     		ldr	r3, [r7, #8]
 808:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 1161              		.loc 1 808 0
 1162 007c 1846     		mov	r0, r3
 1163 007e 1837     		adds	r7, r7, #24
 1164              		.cfi_def_cfa_offset 16
 1165 0080 BD46     		mov	sp, r7
 1166              		.cfi_def_cfa_register 13
 1167              		@ sp needed
 1168 0082 B0BD     		pop	{r4, r5, r7, pc}
 1169              	.L78:
 1170              		.align	2
 1171              	.L77:
 1172 0084 00000000 		.word	Scope0_ADC_countsPerVolt
 1173 0088 00000000 		.word	Scope0_ADC_countsPer10Volt
 1174 008c 00000000 		.word	Scope0_ADC_offset
 1175 0090 80969800 		.word	10000000
 1176              		.cfi_endproc
 1177              	.LFE16:
 1178              		.size	Scope0_ADC_CountsTo_uVolts, .-Scope0_ADC_CountsTo_uVolts
 1179              		.global	__aeabi_i2f
 1180              		.global	__aeabi_fmul
 1181              		.global	__aeabi_fdiv
 1182              		.section	.text.Scope0_ADC_CountsTo_Volts,"ax",%progbits
 1183              		.align	2
 1184              		.global	Scope0_ADC_CountsTo_Volts
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 36


 1185              		.thumb
 1186              		.thumb_func
 1187              		.type	Scope0_ADC_CountsTo_Volts, %function
 1188              	Scope0_ADC_CountsTo_Volts:
 1189              	.LFB17:
 809:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 810:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 811:.\Generated_Source\PSoC5/Scope0_ADC.c **** /*******************************************************************************
 812:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Function Name: Scope0_ADC_CountsTo_Volts
 813:.\Generated_Source\PSoC5/Scope0_ADC.c **** ********************************************************************************
 814:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 815:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Summary:
 816:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Converts the ADC output to volts as a floating-point number.
 817:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 818:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Parameters:
 819:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  int16 adcCounts: Result from the ADC conversion
 820:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 821:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Return:
 822:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  float Result in Volts
 823:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 824:.\Generated_Source\PSoC5/Scope0_ADC.c **** * Global Variables:
 825:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_offset variable used.
 826:.\Generated_Source\PSoC5/Scope0_ADC.c **** *  Scope0_ADC_countsPer10Volt used to convert ADC counts to Volts.
 827:.\Generated_Source\PSoC5/Scope0_ADC.c **** *
 828:.\Generated_Source\PSoC5/Scope0_ADC.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC5/Scope0_ADC.c **** float32 Scope0_ADC_CountsTo_Volts(int16 adcCounts)
 830:.\Generated_Source\PSoC5/Scope0_ADC.c **** {
 1190              		.loc 1 830 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 16
 1193              		@ frame_needed = 1, uses_anonymous_args = 0
 1194 0000 90B5     		push	{r4, r7, lr}
 1195              		.cfi_def_cfa_offset 12
 1196              		.cfi_offset 4, -12
 1197              		.cfi_offset 7, -8
 1198              		.cfi_offset 14, -4
 1199 0002 85B0     		sub	sp, sp, #20
 1200              		.cfi_def_cfa_offset 32
 1201 0004 00AF     		add	r7, sp, #0
 1202              		.cfi_def_cfa_register 7
 1203 0006 0346     		mov	r3, r0
 1204 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 831:.\Generated_Source\PSoC5/Scope0_ADC.c ****     float32 volts;
 832:.\Generated_Source\PSoC5/Scope0_ADC.c ****     int32 countsPer10Volt;
 833:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 834:.\Generated_Source\PSoC5/Scope0_ADC.c ****     if(Scope0_ADC_countsPerVolt != 0)
 1205              		.loc 1 834 0
 1206 000a 1A4B     		ldr	r3, .L83
 1207 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1208 000e 9BB2     		uxth	r3, r3
 1209 0010 002B     		cmp	r3, #0
 1210 0012 09D0     		beq	.L80
 835:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {   /* Support obsolete method */
 836:.\Generated_Source\PSoC5/Scope0_ADC.c ****         countsPer10Volt = (int32)Scope0_ADC_countsPerVolt * 10;
 1211              		.loc 1 836 0
 1212 0014 174B     		ldr	r3, .L83
 1213 0016 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 37


 1214 0018 9BB2     		uxth	r3, r3
 1215 001a 1AB2     		sxth	r2, r3
 1216 001c 1346     		mov	r3, r2
 1217 001e 9B00     		lsls	r3, r3, #2
 1218 0020 1344     		add	r3, r3, r2
 1219 0022 5B00     		lsls	r3, r3, #1
 1220 0024 FB60     		str	r3, [r7, #12]
 1221 0026 02E0     		b	.L81
 1222              	.L80:
 837:.\Generated_Source\PSoC5/Scope0_ADC.c ****     }
 838:.\Generated_Source\PSoC5/Scope0_ADC.c ****     else
 839:.\Generated_Source\PSoC5/Scope0_ADC.c ****     {
 840:.\Generated_Source\PSoC5/Scope0_ADC.c ****         countsPer10Volt = Scope0_ADC_countsPer10Volt;
 1223              		.loc 1 840 0
 1224 0028 134B     		ldr	r3, .L83+4
 1225 002a 1B68     		ldr	r3, [r3]
 1226 002c FB60     		str	r3, [r7, #12]
 1227              	.L81:
 841:.\Generated_Source\PSoC5/Scope0_ADC.c ****     }
 842:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 843:.\Generated_Source\PSoC5/Scope0_ADC.c ****     /* Subtract ADC offset */
 844:.\Generated_Source\PSoC5/Scope0_ADC.c ****     adcCounts -= Scope0_ADC_offset;
 1228              		.loc 1 844 0
 1229 002e 134B     		ldr	r3, .L83+8
 1230 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1231 0032 9BB2     		uxth	r3, r3
 1232 0034 FA88     		ldrh	r2, [r7, #6]
 1233 0036 9BB2     		uxth	r3, r3
 1234 0038 D31A     		subs	r3, r2, r3
 1235 003a 9BB2     		uxth	r3, r3
 1236 003c FB80     		strh	r3, [r7, #6]	@ movhi
 845:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 846:.\Generated_Source\PSoC5/Scope0_ADC.c ****     volts = ((float32)adcCounts * Scope0_ADC_10V_COUNTS) / (float32)countsPer10Volt;
 1237              		.loc 1 846 0
 1238 003e B7F90630 		ldrsh	r3, [r7, #6]
 1239 0042 1846     		mov	r0, r3
 1240 0044 FFF7FEFF 		bl	__aeabi_i2f
 1241 0048 0346     		mov	r3, r0
 1242 004a 1846     		mov	r0, r3
 1243 004c 0C49     		ldr	r1, .L83+12
 1244 004e FFF7FEFF 		bl	__aeabi_fmul
 1245 0052 0346     		mov	r3, r0
 1246 0054 1C46     		mov	r4, r3
 1247 0056 F868     		ldr	r0, [r7, #12]
 1248 0058 FFF7FEFF 		bl	__aeabi_i2f
 1249 005c 0346     		mov	r3, r0
 1250 005e 2046     		mov	r0, r4
 1251 0060 1946     		mov	r1, r3
 1252 0062 FFF7FEFF 		bl	__aeabi_fdiv
 1253 0066 0346     		mov	r3, r0
 1254 0068 BB60     		str	r3, [r7, #8]	@ float
 847:.\Generated_Source\PSoC5/Scope0_ADC.c **** 
 848:.\Generated_Source\PSoC5/Scope0_ADC.c ****     return( volts );
 1255              		.loc 1 848 0
 1256 006a BB68     		ldr	r3, [r7, #8]	@ float
 849:.\Generated_Source\PSoC5/Scope0_ADC.c **** }
 1257              		.loc 1 849 0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 38


 1258 006c 1846     		mov	r0, r3
 1259 006e 1437     		adds	r7, r7, #20
 1260              		.cfi_def_cfa_offset 12
 1261 0070 BD46     		mov	sp, r7
 1262              		.cfi_def_cfa_register 13
 1263              		@ sp needed
 1264 0072 90BD     		pop	{r4, r7, pc}
 1265              	.L84:
 1266              		.align	2
 1267              	.L83:
 1268 0074 00000000 		.word	Scope0_ADC_countsPerVolt
 1269 0078 00000000 		.word	Scope0_ADC_countsPer10Volt
 1270 007c 00000000 		.word	Scope0_ADC_offset
 1271 0080 00002041 		.word	1092616192
 1272              		.cfi_endproc
 1273              	.LFE17:
 1274              		.size	Scope0_ADC_CountsTo_Volts, .-Scope0_ADC_CountsTo_Volts
 1275              		.text
 1276              	.Letext0:
 1277              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1278              		.section	.debug_info,"",%progbits
 1279              	.Ldebug_info0:
 1280 0000 74040000 		.4byte	0x474
 1281 0004 0400     		.2byte	0x4
 1282 0006 00000000 		.4byte	.Ldebug_abbrev0
 1283 000a 04       		.byte	0x4
 1284 000b 01       		.uleb128 0x1
 1285 000c 29020000 		.4byte	.LASF59
 1286 0010 01       		.byte	0x1
 1287 0011 41030000 		.4byte	.LASF60
 1288 0015 38010000 		.4byte	.LASF61
 1289 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1290 001d 00000000 		.4byte	0
 1291 0021 00000000 		.4byte	.Ldebug_line0
 1292 0025 02       		.uleb128 0x2
 1293 0026 04       		.byte	0x4
 1294 0027 05       		.byte	0x5
 1295 0028 696E7400 		.ascii	"int\000"
 1296 002c 03       		.uleb128 0x3
 1297 002d 04       		.byte	0x4
 1298 002e 07       		.byte	0x7
 1299 002f 97010000 		.4byte	.LASF0
 1300 0033 03       		.uleb128 0x3
 1301 0034 01       		.byte	0x1
 1302 0035 06       		.byte	0x6
 1303 0036 92000000 		.4byte	.LASF1
 1304 003a 03       		.uleb128 0x3
 1305 003b 01       		.byte	0x1
 1306 003c 08       		.byte	0x8
 1307 003d E7020000 		.4byte	.LASF2
 1308 0041 03       		.uleb128 0x3
 1309 0042 02       		.byte	0x2
 1310 0043 05       		.byte	0x5
 1311 0044 10030000 		.4byte	.LASF3
 1312 0048 03       		.uleb128 0x3
 1313 0049 02       		.byte	0x2
 1314 004a 07       		.byte	0x7
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 39


 1315 004b C3010000 		.4byte	.LASF4
 1316 004f 03       		.uleb128 0x3
 1317 0050 04       		.byte	0x4
 1318 0051 05       		.byte	0x5
 1319 0052 BE000000 		.4byte	.LASF5
 1320 0056 03       		.uleb128 0x3
 1321 0057 04       		.byte	0x4
 1322 0058 07       		.byte	0x7
 1323 0059 AB010000 		.4byte	.LASF6
 1324 005d 03       		.uleb128 0x3
 1325 005e 08       		.byte	0x8
 1326 005f 05       		.byte	0x5
 1327 0060 84000000 		.4byte	.LASF7
 1328 0064 03       		.uleb128 0x3
 1329 0065 08       		.byte	0x8
 1330 0066 07       		.byte	0x7
 1331 0067 55000000 		.4byte	.LASF8
 1332 006b 03       		.uleb128 0x3
 1333 006c 04       		.byte	0x4
 1334 006d 07       		.byte	0x7
 1335 006e 07020000 		.4byte	.LASF9
 1336 0072 03       		.uleb128 0x3
 1337 0073 01       		.byte	0x1
 1338 0074 08       		.byte	0x8
 1339 0075 A8030000 		.4byte	.LASF10
 1340 0079 04       		.uleb128 0x4
 1341 007a E7000000 		.4byte	.LASF11
 1342 007e 02       		.byte	0x2
 1343 007f 3801     		.2byte	0x138
 1344 0081 3A000000 		.4byte	0x3a
 1345 0085 04       		.uleb128 0x4
 1346 0086 00000000 		.4byte	.LASF12
 1347 008a 02       		.byte	0x2
 1348 008b 3901     		.2byte	0x139
 1349 008d 48000000 		.4byte	0x48
 1350 0091 04       		.uleb128 0x4
 1351 0092 21010000 		.4byte	.LASF13
 1352 0096 02       		.byte	0x2
 1353 0097 3A01     		.2byte	0x13a
 1354 0099 56000000 		.4byte	0x56
 1355 009d 04       		.uleb128 0x4
 1356 009e D6010000 		.4byte	.LASF14
 1357 00a2 02       		.byte	0x2
 1358 00a3 3B01     		.2byte	0x13b
 1359 00a5 33000000 		.4byte	0x33
 1360 00a9 04       		.uleb128 0x4
 1361 00aa 43040000 		.4byte	.LASF15
 1362 00ae 02       		.byte	0x2
 1363 00af 3C01     		.2byte	0x13c
 1364 00b1 41000000 		.4byte	0x41
 1365 00b5 04       		.uleb128 0x4
 1366 00b6 A5000000 		.4byte	.LASF16
 1367 00ba 02       		.byte	0x2
 1368 00bb 3D01     		.2byte	0x13d
 1369 00bd 4F000000 		.4byte	0x4f
 1370 00c1 04       		.uleb128 0x4
 1371 00c2 FF010000 		.4byte	.LASF17
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 40


 1372 00c6 02       		.byte	0x2
 1373 00c7 3E01     		.2byte	0x13e
 1374 00c9 CD000000 		.4byte	0xcd
 1375 00cd 03       		.uleb128 0x3
 1376 00ce 04       		.byte	0x4
 1377 00cf 04       		.byte	0x4
 1378 00d0 D6020000 		.4byte	.LASF18
 1379 00d4 03       		.uleb128 0x3
 1380 00d5 08       		.byte	0x8
 1381 00d6 04       		.byte	0x4
 1382 00d7 1A010000 		.4byte	.LASF19
 1383 00db 04       		.uleb128 0x4
 1384 00dc D0020000 		.4byte	.LASF20
 1385 00e0 02       		.byte	0x2
 1386 00e1 4301     		.2byte	0x143
 1387 00e3 5D000000 		.4byte	0x5d
 1388 00e7 04       		.uleb128 0x4
 1389 00e8 E2020000 		.4byte	.LASF21
 1390 00ec 02       		.byte	0x2
 1391 00ed E201     		.2byte	0x1e2
 1392 00ef F3000000 		.4byte	0xf3
 1393 00f3 05       		.uleb128 0x5
 1394 00f4 79000000 		.4byte	0x79
 1395 00f8 04       		.uleb128 0x4
 1396 00f9 E1000000 		.4byte	.LASF22
 1397 00fd 02       		.byte	0x2
 1398 00fe E301     		.2byte	0x1e3
 1399 0100 04010000 		.4byte	0x104
 1400 0104 05       		.uleb128 0x5
 1401 0105 85000000 		.4byte	0x85
 1402 0109 04       		.uleb128 0x4
 1403 010a F9010000 		.4byte	.LASF23
 1404 010e 02       		.byte	0x2
 1405 010f E401     		.2byte	0x1e4
 1406 0111 15010000 		.4byte	0x115
 1407 0115 05       		.uleb128 0x5
 1408 0116 91000000 		.4byte	0x91
 1409 011a 06       		.uleb128 0x6
 1410 011b 1A030000 		.4byte	.LASF24
 1411 011f 01       		.byte	0x1
 1412 0120 4A       		.byte	0x4a
 1413 0121 00000000 		.4byte	.LFB0
 1414 0125 20000000 		.4byte	.LFE0-.LFB0
 1415 0129 01       		.uleb128 0x1
 1416 012a 9C       		.byte	0x9c
 1417 012b 06       		.uleb128 0x6
 1418 012c 67030000 		.4byte	.LASF25
 1419 0130 01       		.byte	0x1
 1420 0131 6A       		.byte	0x6a
 1421 0132 00000000 		.4byte	.LFB1
 1422 0136 44000000 		.4byte	.LFE1-.LFB1
 1423 013a 01       		.uleb128 0x1
 1424 013b 9C       		.byte	0x9c
 1425 013c 07       		.uleb128 0x7
 1426 013d ED000000 		.4byte	.LASF28
 1427 0141 01       		.byte	0x1
 1428 0142 8F       		.byte	0x8f
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 41


 1429 0143 00000000 		.4byte	.LFB2
 1430 0147 F4000000 		.4byte	.LFE2-.LFB2
 1431 014b 01       		.uleb128 0x1
 1432 014c 9C       		.byte	0x9c
 1433 014d 6E010000 		.4byte	0x16e
 1434 0151 08       		.uleb128 0x8
 1435 0152 49040000 		.4byte	.LASF26
 1436 0156 01       		.byte	0x1
 1437 0157 91       		.byte	0x91
 1438 0158 79000000 		.4byte	0x79
 1439 015c 02       		.uleb128 0x2
 1440 015d 91       		.byte	0x91
 1441 015e 76       		.sleb128 -10
 1442 015f 08       		.uleb128 0x8
 1443 0160 D5030000 		.4byte	.LASF27
 1444 0164 01       		.byte	0x1
 1445 0165 92       		.byte	0x92
 1446 0166 79000000 		.4byte	0x79
 1447 016a 02       		.uleb128 0x2
 1448 016b 91       		.byte	0x91
 1449 016c 77       		.sleb128 -9
 1450 016d 00       		.byte	0
 1451 016e 07       		.uleb128 0x7
 1452 016f 7F010000 		.4byte	.LASF29
 1453 0173 01       		.byte	0x1
 1454 0174 F8       		.byte	0xf8
 1455 0175 00000000 		.4byte	.LFB3
 1456 0179 80000000 		.4byte	.LFE3-.LFB3
 1457 017d 01       		.uleb128 0x1
 1458 017e 9C       		.byte	0x9c
 1459 017f 92010000 		.4byte	0x192
 1460 0183 08       		.uleb128 0x8
 1461 0184 D5030000 		.4byte	.LASF27
 1462 0188 01       		.byte	0x1
 1463 0189 FA       		.byte	0xfa
 1464 018a 79000000 		.4byte	0x79
 1465 018e 02       		.uleb128 0x2
 1466 018f 91       		.byte	0x91
 1467 0190 77       		.sleb128 -9
 1468 0191 00       		.byte	0
 1469 0192 09       		.uleb128 0x9
 1470 0193 94030000 		.4byte	.LASF30
 1471 0197 01       		.byte	0x1
 1472 0198 2201     		.2byte	0x122
 1473 019a 00000000 		.4byte	.LFB4
 1474 019e 40000000 		.4byte	.LFE4-.LFB4
 1475 01a2 01       		.uleb128 0x1
 1476 01a3 9C       		.byte	0x9c
 1477 01a4 C7010000 		.4byte	0x1c7
 1478 01a8 0A       		.uleb128 0xa
 1479 01a9 DC020000 		.4byte	.LASF32
 1480 01ad 01       		.byte	0x1
 1481 01ae 2201     		.2byte	0x122
 1482 01b0 79000000 		.4byte	0x79
 1483 01b4 02       		.uleb128 0x2
 1484 01b5 91       		.byte	0x91
 1485 01b6 6F       		.sleb128 -17
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 42


 1486 01b7 0B       		.uleb128 0xb
 1487 01b8 49040000 		.4byte	.LASF26
 1488 01bc 01       		.byte	0x1
 1489 01bd 2401     		.2byte	0x124
 1490 01bf 79000000 		.4byte	0x79
 1491 01c3 02       		.uleb128 0x2
 1492 01c4 91       		.byte	0x91
 1493 01c5 77       		.sleb128 -9
 1494 01c6 00       		.byte	0
 1495 01c7 0C       		.uleb128 0xc
 1496 01c8 B7020000 		.4byte	.LASF31
 1497 01cc 01       		.byte	0x1
 1498 01cd 5401     		.2byte	0x154
 1499 01cf 00000000 		.4byte	.LFB5
 1500 01d3 50000000 		.4byte	.LFE5-.LFB5
 1501 01d7 01       		.uleb128 0x1
 1502 01d8 9C       		.byte	0x9c
 1503 01d9 FC010000 		.4byte	0x1fc
 1504 01dd 0A       		.uleb128 0xa
 1505 01de 77030000 		.4byte	.LASF33
 1506 01e2 01       		.byte	0x1
 1507 01e3 5401     		.2byte	0x154
 1508 01e5 79000000 		.4byte	0x79
 1509 01e9 02       		.uleb128 0x2
 1510 01ea 91       		.byte	0x91
 1511 01eb 6F       		.sleb128 -17
 1512 01ec 0B       		.uleb128 0xb
 1513 01ed 49040000 		.4byte	.LASF26
 1514 01f1 01       		.byte	0x1
 1515 01f2 5601     		.2byte	0x156
 1516 01f4 79000000 		.4byte	0x79
 1517 01f8 02       		.uleb128 0x2
 1518 01f9 91       		.byte	0x91
 1519 01fa 77       		.sleb128 -9
 1520 01fb 00       		.byte	0
 1521 01fc 0D       		.uleb128 0xd
 1522 01fd 6C000000 		.4byte	.LASF34
 1523 0201 01       		.byte	0x1
 1524 0202 9101     		.2byte	0x191
 1525 0204 00000000 		.4byte	.LFB6
 1526 0208 20000000 		.4byte	.LFE6-.LFB6
 1527 020c 01       		.uleb128 0x1
 1528 020d 9C       		.byte	0x9c
 1529 020e 0D       		.uleb128 0xd
 1530 020f B4030000 		.4byte	.LASF35
 1531 0213 01       		.byte	0x1
 1532 0214 B301     		.2byte	0x1b3
 1533 0216 00000000 		.4byte	.LFB7
 1534 021a 20000000 		.4byte	.LFE7-.LFB7
 1535 021e 01       		.uleb128 0x1
 1536 021f 9C       		.byte	0x9c
 1537 0220 0E       		.uleb128 0xe
 1538 0221 E6030000 		.4byte	.LASF38
 1539 0225 01       		.byte	0x1
 1540 0226 DB01     		.2byte	0x1db
 1541 0228 79000000 		.4byte	0x79
 1542 022c 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 43


 1543 0230 40000000 		.4byte	.LFE8-.LFB8
 1544 0234 01       		.uleb128 0x1
 1545 0235 9C       		.byte	0x9c
 1546 0236 59020000 		.4byte	0x259
 1547 023a 0A       		.uleb128 0xa
 1548 023b 8F010000 		.4byte	.LASF36
 1549 023f 01       		.byte	0x1
 1550 0240 DB01     		.2byte	0x1db
 1551 0242 79000000 		.4byte	0x79
 1552 0246 02       		.uleb128 0x2
 1553 0247 91       		.byte	0x91
 1554 0248 6F       		.sleb128 -17
 1555 0249 0B       		.uleb128 0xb
 1556 024a 9E000000 		.4byte	.LASF37
 1557 024e 01       		.byte	0x1
 1558 024f DD01     		.2byte	0x1dd
 1559 0251 79000000 		.4byte	0x79
 1560 0255 02       		.uleb128 0x2
 1561 0256 91       		.byte	0x91
 1562 0257 77       		.sleb128 -9
 1563 0258 00       		.byte	0
 1564 0259 0F       		.uleb128 0xf
 1565 025a 2B030000 		.4byte	.LASF62
 1566 025e 01       		.byte	0x1
 1567 025f 0802     		.2byte	0x208
 1568 0261 9D000000 		.4byte	0x9d
 1569 0265 00000000 		.4byte	.LFB9
 1570 0269 2C000000 		.4byte	.LFE9-.LFB9
 1571 026d 01       		.uleb128 0x1
 1572 026e 9C       		.byte	0x9c
 1573 026f 10       		.uleb128 0x10
 1574 0270 DB010000 		.4byte	.LASF39
 1575 0274 01       		.byte	0x1
 1576 0275 2602     		.2byte	0x226
 1577 0277 A9000000 		.4byte	0xa9
 1578 027b 00000000 		.4byte	.LFB10
 1579 027f 34000000 		.4byte	.LFE10-.LFB10
 1580 0283 01       		.uleb128 0x1
 1581 0284 9C       		.byte	0x9c
 1582 0285 99020000 		.4byte	0x299
 1583 0289 11       		.uleb128 0x11
 1584 028a 72657300 		.ascii	"res\000"
 1585 028e 01       		.byte	0x1
 1586 028f 2802     		.2byte	0x228
 1587 0291 85000000 		.4byte	0x85
 1588 0295 02       		.uleb128 0x2
 1589 0296 91       		.byte	0x91
 1590 0297 76       		.sleb128 -10
 1591 0298 00       		.byte	0
 1592 0299 09       		.uleb128 0x9
 1593 029a 2F000000 		.4byte	.LASF40
 1594 029e 01       		.byte	0x1
 1595 029f 4902     		.2byte	0x249
 1596 02a1 00000000 		.4byte	.LFB11
 1597 02a5 20000000 		.4byte	.LFE11-.LFB11
 1598 02a9 01       		.uleb128 0x1
 1599 02aa 9C       		.byte	0x9c
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 44


 1600 02ab BF020000 		.4byte	0x2bf
 1601 02af 0A       		.uleb128 0xa
 1602 02b0 AD030000 		.4byte	.LASF41
 1603 02b4 01       		.byte	0x1
 1604 02b5 4902     		.2byte	0x249
 1605 02b7 A9000000 		.4byte	0xa9
 1606 02bb 02       		.uleb128 0x2
 1607 02bc 91       		.byte	0x91
 1608 02bd 76       		.sleb128 -10
 1609 02be 00       		.byte	0
 1610 02bf 12       		.uleb128 0x12
 1611 02c0 01040000 		.4byte	.LASF63
 1612 02c4 01       		.byte	0x1
 1613 02c5 6302     		.2byte	0x263
 1614 02c7 00000000 		.4byte	.LFB12
 1615 02cb 80000000 		.4byte	.LFE12-.LFB12
 1616 02cf 01       		.uleb128 0x1
 1617 02d0 9C       		.byte	0x9c
 1618 02d1 F4020000 		.4byte	0x2f4
 1619 02d5 0A       		.uleb128 0xa
 1620 02d6 77030000 		.4byte	.LASF33
 1621 02da 01       		.byte	0x1
 1622 02db 6302     		.2byte	0x263
 1623 02dd 79000000 		.4byte	0x79
 1624 02e1 02       		.uleb128 0x2
 1625 02e2 91       		.byte	0x91
 1626 02e3 6F       		.sleb128 -17
 1627 02e4 0B       		.uleb128 0xb
 1628 02e5 0F000000 		.4byte	.LASF42
 1629 02e9 01       		.byte	0x1
 1630 02ea 6502     		.2byte	0x265
 1631 02ec B5000000 		.4byte	0xb5
 1632 02f0 02       		.uleb128 0x2
 1633 02f1 91       		.byte	0x91
 1634 02f2 74       		.sleb128 -12
 1635 02f3 00       		.byte	0
 1636 02f4 09       		.uleb128 0x9
 1637 02f5 AB000000 		.4byte	.LASF43
 1638 02f9 01       		.byte	0x1
 1639 02fa B402     		.2byte	0x2b4
 1640 02fc 00000000 		.4byte	.LFB13
 1641 0300 2C000000 		.4byte	.LFE13-.LFB13
 1642 0304 01       		.uleb128 0x1
 1643 0305 9C       		.byte	0x9c
 1644 0306 1A030000 		.4byte	0x31a
 1645 030a 0A       		.uleb128 0xa
 1646 030b 07000000 		.4byte	.LASF44
 1647 030f 01       		.byte	0x1
 1648 0310 B402     		.2byte	0x2b4
 1649 0312 A9000000 		.4byte	0xa9
 1650 0316 02       		.uleb128 0x2
 1651 0317 91       		.byte	0x91
 1652 0318 76       		.sleb128 -10
 1653 0319 00       		.byte	0
 1654 031a 09       		.uleb128 0x9
 1655 031b 16000000 		.4byte	.LASF45
 1656 031f 01       		.byte	0x1
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 45


 1657 0320 CF02     		.2byte	0x2cf
 1658 0322 00000000 		.4byte	.LFB14
 1659 0326 1C000000 		.4byte	.LFE14-.LFB14
 1660 032a 01       		.uleb128 0x1
 1661 032b 9C       		.byte	0x9c
 1662 032c 40030000 		.4byte	0x340
 1663 0330 0A       		.uleb128 0xa
 1664 0331 07000000 		.4byte	.LASF44
 1665 0335 01       		.byte	0x1
 1666 0336 CF02     		.2byte	0x2cf
 1667 0338 B5000000 		.4byte	0xb5
 1668 033c 02       		.uleb128 0x2
 1669 033d 91       		.byte	0x91
 1670 033e 74       		.sleb128 -12
 1671 033f 00       		.byte	0
 1672 0340 10       		.uleb128 0x10
 1673 0341 F5020000 		.4byte	.LASF46
 1674 0345 01       		.byte	0x1
 1675 0346 E702     		.2byte	0x2e7
 1676 0348 A9000000 		.4byte	0xa9
 1677 034c 00000000 		.4byte	.LFB15
 1678 0350 8C000000 		.4byte	.LFE15-.LFB15
 1679 0354 01       		.uleb128 0x1
 1680 0355 9C       		.byte	0x9c
 1681 0356 88030000 		.4byte	0x388
 1682 035a 0A       		.uleb128 0xa
 1683 035b CB030000 		.4byte	.LASF47
 1684 035f 01       		.byte	0x1
 1685 0360 E702     		.2byte	0x2e7
 1686 0362 A9000000 		.4byte	0xa9
 1687 0366 02       		.uleb128 0x2
 1688 0367 91       		.byte	0x91
 1689 0368 6E       		.sleb128 -18
 1690 0369 0B       		.uleb128 0xb
 1691 036a F2010000 		.4byte	.LASF48
 1692 036e 01       		.byte	0x1
 1693 036f E902     		.2byte	0x2e9
 1694 0371 A9000000 		.4byte	0xa9
 1695 0375 02       		.uleb128 0x2
 1696 0376 91       		.byte	0x91
 1697 0377 72       		.sleb128 -14
 1698 0378 0B       		.uleb128 0xb
 1699 0379 28010000 		.4byte	.LASF49
 1700 037d 01       		.byte	0x1
 1701 037e EA02     		.2byte	0x2ea
 1702 0380 B5000000 		.4byte	0xb5
 1703 0384 02       		.uleb128 0x2
 1704 0385 91       		.byte	0x91
 1705 0386 74       		.sleb128 -12
 1706 0387 00       		.byte	0
 1707 0388 0E       		.uleb128 0xe
 1708 0389 FF000000 		.4byte	.LASF50
 1709 038d 01       		.byte	0x1
 1710 038e 1103     		.2byte	0x311
 1711 0390 B5000000 		.4byte	0xb5
 1712 0394 00000000 		.4byte	.LFB16
 1713 0398 94000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 46


 1714 039c 01       		.uleb128 0x1
 1715 039d 9C       		.byte	0x9c
 1716 039e D0030000 		.4byte	0x3d0
 1717 03a2 0A       		.uleb128 0xa
 1718 03a3 CB030000 		.4byte	.LASF47
 1719 03a7 01       		.byte	0x1
 1720 03a8 1103     		.2byte	0x311
 1721 03aa A9000000 		.4byte	0xa9
 1722 03ae 02       		.uleb128 0x2
 1723 03af 91       		.byte	0x91
 1724 03b0 5E       		.sleb128 -34
 1725 03b1 0B       		.uleb128 0xb
 1726 03b2 A4010000 		.4byte	.LASF51
 1727 03b6 01       		.byte	0x1
 1728 03b7 1403     		.2byte	0x314
 1729 03b9 DB000000 		.4byte	0xdb
 1730 03bd 02       		.uleb128 0x2
 1731 03be 91       		.byte	0x91
 1732 03bf 60       		.sleb128 -32
 1733 03c0 0B       		.uleb128 0xb
 1734 03c1 28010000 		.4byte	.LASF49
 1735 03c5 01       		.byte	0x1
 1736 03c6 1503     		.2byte	0x315
 1737 03c8 B5000000 		.4byte	0xb5
 1738 03cc 02       		.uleb128 0x2
 1739 03cd 91       		.byte	0x91
 1740 03ce 6C       		.sleb128 -20
 1741 03cf 00       		.byte	0
 1742 03d0 0E       		.uleb128 0xe
 1743 03d1 C7000000 		.4byte	.LASF52
 1744 03d5 01       		.byte	0x1
 1745 03d6 3D03     		.2byte	0x33d
 1746 03d8 C1000000 		.4byte	0xc1
 1747 03dc 00000000 		.4byte	.LFB17
 1748 03e0 84000000 		.4byte	.LFE17-.LFB17
 1749 03e4 01       		.uleb128 0x1
 1750 03e5 9C       		.byte	0x9c
 1751 03e6 18040000 		.4byte	0x418
 1752 03ea 0A       		.uleb128 0xa
 1753 03eb CB030000 		.4byte	.LASF47
 1754 03ef 01       		.byte	0x1
 1755 03f0 3D03     		.2byte	0x33d
 1756 03f2 A9000000 		.4byte	0xa9
 1757 03f6 02       		.uleb128 0x2
 1758 03f7 91       		.byte	0x91
 1759 03f8 66       		.sleb128 -26
 1760 03f9 0B       		.uleb128 0xb
 1761 03fa BD010000 		.4byte	.LASF53
 1762 03fe 01       		.byte	0x1
 1763 03ff 3F03     		.2byte	0x33f
 1764 0401 C1000000 		.4byte	0xc1
 1765 0405 02       		.uleb128 0x2
 1766 0406 91       		.byte	0x91
 1767 0407 68       		.sleb128 -24
 1768 0408 0B       		.uleb128 0xb
 1769 0409 28010000 		.4byte	.LASF49
 1770 040d 01       		.byte	0x1
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 47


 1771 040e 4003     		.2byte	0x340
 1772 0410 B5000000 		.4byte	0xb5
 1773 0414 02       		.uleb128 0x2
 1774 0415 91       		.byte	0x91
 1775 0416 6C       		.sleb128 -20
 1776 0417 00       		.byte	0
 1777 0418 13       		.uleb128 0x13
 1778 0419 15040000 		.4byte	.LASF54
 1779 041d 01       		.byte	0x1
 1780 041e 23       		.byte	0x23
 1781 041f 79000000 		.4byte	0x79
 1782 0423 05       		.uleb128 0x5
 1783 0424 03       		.byte	0x3
 1784 0425 00000000 		.4byte	Scope0_ADC_initVar
 1785 0429 13       		.uleb128 0x13
 1786 042a 82030000 		.4byte	.LASF55
 1787 042e 01       		.byte	0x1
 1788 042f 24       		.byte	0x24
 1789 0430 3A040000 		.4byte	0x43a
 1790 0434 05       		.uleb128 0x5
 1791 0435 03       		.byte	0x3
 1792 0436 00000000 		.4byte	Scope0_ADC_offset
 1793 043a 05       		.uleb128 0x5
 1794 043b A9000000 		.4byte	0xa9
 1795 043f 13       		.uleb128 0x13
 1796 0440 10020000 		.4byte	.LASF56
 1797 0444 01       		.byte	0x1
 1798 0445 25       		.byte	0x25
 1799 0446 3A040000 		.4byte	0x43a
 1800 044a 05       		.uleb128 0x5
 1801 044b 03       		.byte	0x3
 1802 044c 00000000 		.4byte	Scope0_ADC_countsPerVolt
 1803 0450 13       		.uleb128 0x13
 1804 0451 28040000 		.4byte	.LASF57
 1805 0455 01       		.byte	0x1
 1806 0456 26       		.byte	0x26
 1807 0457 61040000 		.4byte	0x461
 1808 045b 05       		.uleb128 0x5
 1809 045c 03       		.byte	0x3
 1810 045d 00000000 		.4byte	Scope0_ADC_countsPer10Volt
 1811 0461 05       		.uleb128 0x5
 1812 0462 B5000000 		.4byte	0xb5
 1813 0466 13       		.uleb128 0x13
 1814 0467 44000000 		.4byte	.LASF58
 1815 046b 01       		.byte	0x1
 1816 046c 27       		.byte	0x27
 1817 046d 3A040000 		.4byte	0x43a
 1818 0471 05       		.uleb128 0x5
 1819 0472 03       		.byte	0x3
 1820 0473 00000000 		.4byte	Scope0_ADC_shift
 1821 0477 00       		.byte	0
 1822              		.section	.debug_abbrev,"",%progbits
 1823              	.Ldebug_abbrev0:
 1824 0000 01       		.uleb128 0x1
 1825 0001 11       		.uleb128 0x11
 1826 0002 01       		.byte	0x1
 1827 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 48


 1828 0004 0E       		.uleb128 0xe
 1829 0005 13       		.uleb128 0x13
 1830 0006 0B       		.uleb128 0xb
 1831 0007 03       		.uleb128 0x3
 1832 0008 0E       		.uleb128 0xe
 1833 0009 1B       		.uleb128 0x1b
 1834 000a 0E       		.uleb128 0xe
 1835 000b 55       		.uleb128 0x55
 1836 000c 17       		.uleb128 0x17
 1837 000d 11       		.uleb128 0x11
 1838 000e 01       		.uleb128 0x1
 1839 000f 10       		.uleb128 0x10
 1840 0010 17       		.uleb128 0x17
 1841 0011 00       		.byte	0
 1842 0012 00       		.byte	0
 1843 0013 02       		.uleb128 0x2
 1844 0014 24       		.uleb128 0x24
 1845 0015 00       		.byte	0
 1846 0016 0B       		.uleb128 0xb
 1847 0017 0B       		.uleb128 0xb
 1848 0018 3E       		.uleb128 0x3e
 1849 0019 0B       		.uleb128 0xb
 1850 001a 03       		.uleb128 0x3
 1851 001b 08       		.uleb128 0x8
 1852 001c 00       		.byte	0
 1853 001d 00       		.byte	0
 1854 001e 03       		.uleb128 0x3
 1855 001f 24       		.uleb128 0x24
 1856 0020 00       		.byte	0
 1857 0021 0B       		.uleb128 0xb
 1858 0022 0B       		.uleb128 0xb
 1859 0023 3E       		.uleb128 0x3e
 1860 0024 0B       		.uleb128 0xb
 1861 0025 03       		.uleb128 0x3
 1862 0026 0E       		.uleb128 0xe
 1863 0027 00       		.byte	0
 1864 0028 00       		.byte	0
 1865 0029 04       		.uleb128 0x4
 1866 002a 16       		.uleb128 0x16
 1867 002b 00       		.byte	0
 1868 002c 03       		.uleb128 0x3
 1869 002d 0E       		.uleb128 0xe
 1870 002e 3A       		.uleb128 0x3a
 1871 002f 0B       		.uleb128 0xb
 1872 0030 3B       		.uleb128 0x3b
 1873 0031 05       		.uleb128 0x5
 1874 0032 49       		.uleb128 0x49
 1875 0033 13       		.uleb128 0x13
 1876 0034 00       		.byte	0
 1877 0035 00       		.byte	0
 1878 0036 05       		.uleb128 0x5
 1879 0037 35       		.uleb128 0x35
 1880 0038 00       		.byte	0
 1881 0039 49       		.uleb128 0x49
 1882 003a 13       		.uleb128 0x13
 1883 003b 00       		.byte	0
 1884 003c 00       		.byte	0
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 49


 1885 003d 06       		.uleb128 0x6
 1886 003e 2E       		.uleb128 0x2e
 1887 003f 00       		.byte	0
 1888 0040 3F       		.uleb128 0x3f
 1889 0041 19       		.uleb128 0x19
 1890 0042 03       		.uleb128 0x3
 1891 0043 0E       		.uleb128 0xe
 1892 0044 3A       		.uleb128 0x3a
 1893 0045 0B       		.uleb128 0xb
 1894 0046 3B       		.uleb128 0x3b
 1895 0047 0B       		.uleb128 0xb
 1896 0048 27       		.uleb128 0x27
 1897 0049 19       		.uleb128 0x19
 1898 004a 11       		.uleb128 0x11
 1899 004b 01       		.uleb128 0x1
 1900 004c 12       		.uleb128 0x12
 1901 004d 06       		.uleb128 0x6
 1902 004e 40       		.uleb128 0x40
 1903 004f 18       		.uleb128 0x18
 1904 0050 9642     		.uleb128 0x2116
 1905 0052 19       		.uleb128 0x19
 1906 0053 00       		.byte	0
 1907 0054 00       		.byte	0
 1908 0055 07       		.uleb128 0x7
 1909 0056 2E       		.uleb128 0x2e
 1910 0057 01       		.byte	0x1
 1911 0058 3F       		.uleb128 0x3f
 1912 0059 19       		.uleb128 0x19
 1913 005a 03       		.uleb128 0x3
 1914 005b 0E       		.uleb128 0xe
 1915 005c 3A       		.uleb128 0x3a
 1916 005d 0B       		.uleb128 0xb
 1917 005e 3B       		.uleb128 0x3b
 1918 005f 0B       		.uleb128 0xb
 1919 0060 27       		.uleb128 0x27
 1920 0061 19       		.uleb128 0x19
 1921 0062 11       		.uleb128 0x11
 1922 0063 01       		.uleb128 0x1
 1923 0064 12       		.uleb128 0x12
 1924 0065 06       		.uleb128 0x6
 1925 0066 40       		.uleb128 0x40
 1926 0067 18       		.uleb128 0x18
 1927 0068 9642     		.uleb128 0x2116
 1928 006a 19       		.uleb128 0x19
 1929 006b 01       		.uleb128 0x1
 1930 006c 13       		.uleb128 0x13
 1931 006d 00       		.byte	0
 1932 006e 00       		.byte	0
 1933 006f 08       		.uleb128 0x8
 1934 0070 34       		.uleb128 0x34
 1935 0071 00       		.byte	0
 1936 0072 03       		.uleb128 0x3
 1937 0073 0E       		.uleb128 0xe
 1938 0074 3A       		.uleb128 0x3a
 1939 0075 0B       		.uleb128 0xb
 1940 0076 3B       		.uleb128 0x3b
 1941 0077 0B       		.uleb128 0xb
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 50


 1942 0078 49       		.uleb128 0x49
 1943 0079 13       		.uleb128 0x13
 1944 007a 02       		.uleb128 0x2
 1945 007b 18       		.uleb128 0x18
 1946 007c 00       		.byte	0
 1947 007d 00       		.byte	0
 1948 007e 09       		.uleb128 0x9
 1949 007f 2E       		.uleb128 0x2e
 1950 0080 01       		.byte	0x1
 1951 0081 3F       		.uleb128 0x3f
 1952 0082 19       		.uleb128 0x19
 1953 0083 03       		.uleb128 0x3
 1954 0084 0E       		.uleb128 0xe
 1955 0085 3A       		.uleb128 0x3a
 1956 0086 0B       		.uleb128 0xb
 1957 0087 3B       		.uleb128 0x3b
 1958 0088 05       		.uleb128 0x5
 1959 0089 27       		.uleb128 0x27
 1960 008a 19       		.uleb128 0x19
 1961 008b 11       		.uleb128 0x11
 1962 008c 01       		.uleb128 0x1
 1963 008d 12       		.uleb128 0x12
 1964 008e 06       		.uleb128 0x6
 1965 008f 40       		.uleb128 0x40
 1966 0090 18       		.uleb128 0x18
 1967 0091 9742     		.uleb128 0x2117
 1968 0093 19       		.uleb128 0x19
 1969 0094 01       		.uleb128 0x1
 1970 0095 13       		.uleb128 0x13
 1971 0096 00       		.byte	0
 1972 0097 00       		.byte	0
 1973 0098 0A       		.uleb128 0xa
 1974 0099 05       		.uleb128 0x5
 1975 009a 00       		.byte	0
 1976 009b 03       		.uleb128 0x3
 1977 009c 0E       		.uleb128 0xe
 1978 009d 3A       		.uleb128 0x3a
 1979 009e 0B       		.uleb128 0xb
 1980 009f 3B       		.uleb128 0x3b
 1981 00a0 05       		.uleb128 0x5
 1982 00a1 49       		.uleb128 0x49
 1983 00a2 13       		.uleb128 0x13
 1984 00a3 02       		.uleb128 0x2
 1985 00a4 18       		.uleb128 0x18
 1986 00a5 00       		.byte	0
 1987 00a6 00       		.byte	0
 1988 00a7 0B       		.uleb128 0xb
 1989 00a8 34       		.uleb128 0x34
 1990 00a9 00       		.byte	0
 1991 00aa 03       		.uleb128 0x3
 1992 00ab 0E       		.uleb128 0xe
 1993 00ac 3A       		.uleb128 0x3a
 1994 00ad 0B       		.uleb128 0xb
 1995 00ae 3B       		.uleb128 0x3b
 1996 00af 05       		.uleb128 0x5
 1997 00b0 49       		.uleb128 0x49
 1998 00b1 13       		.uleb128 0x13
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 51


 1999 00b2 02       		.uleb128 0x2
 2000 00b3 18       		.uleb128 0x18
 2001 00b4 00       		.byte	0
 2002 00b5 00       		.byte	0
 2003 00b6 0C       		.uleb128 0xc
 2004 00b7 2E       		.uleb128 0x2e
 2005 00b8 01       		.byte	0x1
 2006 00b9 3F       		.uleb128 0x3f
 2007 00ba 19       		.uleb128 0x19
 2008 00bb 03       		.uleb128 0x3
 2009 00bc 0E       		.uleb128 0xe
 2010 00bd 3A       		.uleb128 0x3a
 2011 00be 0B       		.uleb128 0xb
 2012 00bf 3B       		.uleb128 0x3b
 2013 00c0 05       		.uleb128 0x5
 2014 00c1 27       		.uleb128 0x27
 2015 00c2 19       		.uleb128 0x19
 2016 00c3 11       		.uleb128 0x11
 2017 00c4 01       		.uleb128 0x1
 2018 00c5 12       		.uleb128 0x12
 2019 00c6 06       		.uleb128 0x6
 2020 00c7 40       		.uleb128 0x40
 2021 00c8 18       		.uleb128 0x18
 2022 00c9 9642     		.uleb128 0x2116
 2023 00cb 19       		.uleb128 0x19
 2024 00cc 01       		.uleb128 0x1
 2025 00cd 13       		.uleb128 0x13
 2026 00ce 00       		.byte	0
 2027 00cf 00       		.byte	0
 2028 00d0 0D       		.uleb128 0xd
 2029 00d1 2E       		.uleb128 0x2e
 2030 00d2 00       		.byte	0
 2031 00d3 3F       		.uleb128 0x3f
 2032 00d4 19       		.uleb128 0x19
 2033 00d5 03       		.uleb128 0x3
 2034 00d6 0E       		.uleb128 0xe
 2035 00d7 3A       		.uleb128 0x3a
 2036 00d8 0B       		.uleb128 0xb
 2037 00d9 3B       		.uleb128 0x3b
 2038 00da 05       		.uleb128 0x5
 2039 00db 27       		.uleb128 0x27
 2040 00dc 19       		.uleb128 0x19
 2041 00dd 11       		.uleb128 0x11
 2042 00de 01       		.uleb128 0x1
 2043 00df 12       		.uleb128 0x12
 2044 00e0 06       		.uleb128 0x6
 2045 00e1 40       		.uleb128 0x40
 2046 00e2 18       		.uleb128 0x18
 2047 00e3 9742     		.uleb128 0x2117
 2048 00e5 19       		.uleb128 0x19
 2049 00e6 00       		.byte	0
 2050 00e7 00       		.byte	0
 2051 00e8 0E       		.uleb128 0xe
 2052 00e9 2E       		.uleb128 0x2e
 2053 00ea 01       		.byte	0x1
 2054 00eb 3F       		.uleb128 0x3f
 2055 00ec 19       		.uleb128 0x19
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 52


 2056 00ed 03       		.uleb128 0x3
 2057 00ee 0E       		.uleb128 0xe
 2058 00ef 3A       		.uleb128 0x3a
 2059 00f0 0B       		.uleb128 0xb
 2060 00f1 3B       		.uleb128 0x3b
 2061 00f2 05       		.uleb128 0x5
 2062 00f3 27       		.uleb128 0x27
 2063 00f4 19       		.uleb128 0x19
 2064 00f5 49       		.uleb128 0x49
 2065 00f6 13       		.uleb128 0x13
 2066 00f7 11       		.uleb128 0x11
 2067 00f8 01       		.uleb128 0x1
 2068 00f9 12       		.uleb128 0x12
 2069 00fa 06       		.uleb128 0x6
 2070 00fb 40       		.uleb128 0x40
 2071 00fc 18       		.uleb128 0x18
 2072 00fd 9642     		.uleb128 0x2116
 2073 00ff 19       		.uleb128 0x19
 2074 0100 01       		.uleb128 0x1
 2075 0101 13       		.uleb128 0x13
 2076 0102 00       		.byte	0
 2077 0103 00       		.byte	0
 2078 0104 0F       		.uleb128 0xf
 2079 0105 2E       		.uleb128 0x2e
 2080 0106 00       		.byte	0
 2081 0107 3F       		.uleb128 0x3f
 2082 0108 19       		.uleb128 0x19
 2083 0109 03       		.uleb128 0x3
 2084 010a 0E       		.uleb128 0xe
 2085 010b 3A       		.uleb128 0x3a
 2086 010c 0B       		.uleb128 0xb
 2087 010d 3B       		.uleb128 0x3b
 2088 010e 05       		.uleb128 0x5
 2089 010f 27       		.uleb128 0x27
 2090 0110 19       		.uleb128 0x19
 2091 0111 49       		.uleb128 0x49
 2092 0112 13       		.uleb128 0x13
 2093 0113 11       		.uleb128 0x11
 2094 0114 01       		.uleb128 0x1
 2095 0115 12       		.uleb128 0x12
 2096 0116 06       		.uleb128 0x6
 2097 0117 40       		.uleb128 0x40
 2098 0118 18       		.uleb128 0x18
 2099 0119 9742     		.uleb128 0x2117
 2100 011b 19       		.uleb128 0x19
 2101 011c 00       		.byte	0
 2102 011d 00       		.byte	0
 2103 011e 10       		.uleb128 0x10
 2104 011f 2E       		.uleb128 0x2e
 2105 0120 01       		.byte	0x1
 2106 0121 3F       		.uleb128 0x3f
 2107 0122 19       		.uleb128 0x19
 2108 0123 03       		.uleb128 0x3
 2109 0124 0E       		.uleb128 0xe
 2110 0125 3A       		.uleb128 0x3a
 2111 0126 0B       		.uleb128 0xb
 2112 0127 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 53


 2113 0128 05       		.uleb128 0x5
 2114 0129 27       		.uleb128 0x27
 2115 012a 19       		.uleb128 0x19
 2116 012b 49       		.uleb128 0x49
 2117 012c 13       		.uleb128 0x13
 2118 012d 11       		.uleb128 0x11
 2119 012e 01       		.uleb128 0x1
 2120 012f 12       		.uleb128 0x12
 2121 0130 06       		.uleb128 0x6
 2122 0131 40       		.uleb128 0x40
 2123 0132 18       		.uleb128 0x18
 2124 0133 9742     		.uleb128 0x2117
 2125 0135 19       		.uleb128 0x19
 2126 0136 01       		.uleb128 0x1
 2127 0137 13       		.uleb128 0x13
 2128 0138 00       		.byte	0
 2129 0139 00       		.byte	0
 2130 013a 11       		.uleb128 0x11
 2131 013b 34       		.uleb128 0x34
 2132 013c 00       		.byte	0
 2133 013d 03       		.uleb128 0x3
 2134 013e 08       		.uleb128 0x8
 2135 013f 3A       		.uleb128 0x3a
 2136 0140 0B       		.uleb128 0xb
 2137 0141 3B       		.uleb128 0x3b
 2138 0142 05       		.uleb128 0x5
 2139 0143 49       		.uleb128 0x49
 2140 0144 13       		.uleb128 0x13
 2141 0145 02       		.uleb128 0x2
 2142 0146 18       		.uleb128 0x18
 2143 0147 00       		.byte	0
 2144 0148 00       		.byte	0
 2145 0149 12       		.uleb128 0x12
 2146 014a 2E       		.uleb128 0x2e
 2147 014b 01       		.byte	0x1
 2148 014c 03       		.uleb128 0x3
 2149 014d 0E       		.uleb128 0xe
 2150 014e 3A       		.uleb128 0x3a
 2151 014f 0B       		.uleb128 0xb
 2152 0150 3B       		.uleb128 0x3b
 2153 0151 05       		.uleb128 0x5
 2154 0152 27       		.uleb128 0x27
 2155 0153 19       		.uleb128 0x19
 2156 0154 11       		.uleb128 0x11
 2157 0155 01       		.uleb128 0x1
 2158 0156 12       		.uleb128 0x12
 2159 0157 06       		.uleb128 0x6
 2160 0158 40       		.uleb128 0x40
 2161 0159 18       		.uleb128 0x18
 2162 015a 9642     		.uleb128 0x2116
 2163 015c 19       		.uleb128 0x19
 2164 015d 01       		.uleb128 0x1
 2165 015e 13       		.uleb128 0x13
 2166 015f 00       		.byte	0
 2167 0160 00       		.byte	0
 2168 0161 13       		.uleb128 0x13
 2169 0162 34       		.uleb128 0x34
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 54


 2170 0163 00       		.byte	0
 2171 0164 03       		.uleb128 0x3
 2172 0165 0E       		.uleb128 0xe
 2173 0166 3A       		.uleb128 0x3a
 2174 0167 0B       		.uleb128 0xb
 2175 0168 3B       		.uleb128 0x3b
 2176 0169 0B       		.uleb128 0xb
 2177 016a 49       		.uleb128 0x49
 2178 016b 13       		.uleb128 0x13
 2179 016c 3F       		.uleb128 0x3f
 2180 016d 19       		.uleb128 0x19
 2181 016e 02       		.uleb128 0x2
 2182 016f 18       		.uleb128 0x18
 2183 0170 00       		.byte	0
 2184 0171 00       		.byte	0
 2185 0172 00       		.byte	0
 2186              		.section	.debug_aranges,"",%progbits
 2187 0000 A4000000 		.4byte	0xa4
 2188 0004 0200     		.2byte	0x2
 2189 0006 00000000 		.4byte	.Ldebug_info0
 2190 000a 04       		.byte	0x4
 2191 000b 00       		.byte	0
 2192 000c 0000     		.2byte	0
 2193 000e 0000     		.2byte	0
 2194 0010 00000000 		.4byte	.LFB0
 2195 0014 20000000 		.4byte	.LFE0-.LFB0
 2196 0018 00000000 		.4byte	.LFB1
 2197 001c 44000000 		.4byte	.LFE1-.LFB1
 2198 0020 00000000 		.4byte	.LFB2
 2199 0024 F4000000 		.4byte	.LFE2-.LFB2
 2200 0028 00000000 		.4byte	.LFB3
 2201 002c 80000000 		.4byte	.LFE3-.LFB3
 2202 0030 00000000 		.4byte	.LFB4
 2203 0034 40000000 		.4byte	.LFE4-.LFB4
 2204 0038 00000000 		.4byte	.LFB5
 2205 003c 50000000 		.4byte	.LFE5-.LFB5
 2206 0040 00000000 		.4byte	.LFB6
 2207 0044 20000000 		.4byte	.LFE6-.LFB6
 2208 0048 00000000 		.4byte	.LFB7
 2209 004c 20000000 		.4byte	.LFE7-.LFB7
 2210 0050 00000000 		.4byte	.LFB8
 2211 0054 40000000 		.4byte	.LFE8-.LFB8
 2212 0058 00000000 		.4byte	.LFB9
 2213 005c 2C000000 		.4byte	.LFE9-.LFB9
 2214 0060 00000000 		.4byte	.LFB10
 2215 0064 34000000 		.4byte	.LFE10-.LFB10
 2216 0068 00000000 		.4byte	.LFB11
 2217 006c 20000000 		.4byte	.LFE11-.LFB11
 2218 0070 00000000 		.4byte	.LFB12
 2219 0074 80000000 		.4byte	.LFE12-.LFB12
 2220 0078 00000000 		.4byte	.LFB13
 2221 007c 2C000000 		.4byte	.LFE13-.LFB13
 2222 0080 00000000 		.4byte	.LFB14
 2223 0084 1C000000 		.4byte	.LFE14-.LFB14
 2224 0088 00000000 		.4byte	.LFB15
 2225 008c 8C000000 		.4byte	.LFE15-.LFB15
 2226 0090 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 55


 2227 0094 94000000 		.4byte	.LFE16-.LFB16
 2228 0098 00000000 		.4byte	.LFB17
 2229 009c 84000000 		.4byte	.LFE17-.LFB17
 2230 00a0 00000000 		.4byte	0
 2231 00a4 00000000 		.4byte	0
 2232              		.section	.debug_ranges,"",%progbits
 2233              	.Ldebug_ranges0:
 2234 0000 00000000 		.4byte	.LFB0
 2235 0004 20000000 		.4byte	.LFE0
 2236 0008 00000000 		.4byte	.LFB1
 2237 000c 44000000 		.4byte	.LFE1
 2238 0010 00000000 		.4byte	.LFB2
 2239 0014 F4000000 		.4byte	.LFE2
 2240 0018 00000000 		.4byte	.LFB3
 2241 001c 80000000 		.4byte	.LFE3
 2242 0020 00000000 		.4byte	.LFB4
 2243 0024 40000000 		.4byte	.LFE4
 2244 0028 00000000 		.4byte	.LFB5
 2245 002c 50000000 		.4byte	.LFE5
 2246 0030 00000000 		.4byte	.LFB6
 2247 0034 20000000 		.4byte	.LFE6
 2248 0038 00000000 		.4byte	.LFB7
 2249 003c 20000000 		.4byte	.LFE7
 2250 0040 00000000 		.4byte	.LFB8
 2251 0044 40000000 		.4byte	.LFE8
 2252 0048 00000000 		.4byte	.LFB9
 2253 004c 2C000000 		.4byte	.LFE9
 2254 0050 00000000 		.4byte	.LFB10
 2255 0054 34000000 		.4byte	.LFE10
 2256 0058 00000000 		.4byte	.LFB11
 2257 005c 20000000 		.4byte	.LFE11
 2258 0060 00000000 		.4byte	.LFB12
 2259 0064 80000000 		.4byte	.LFE12
 2260 0068 00000000 		.4byte	.LFB13
 2261 006c 2C000000 		.4byte	.LFE13
 2262 0070 00000000 		.4byte	.LFB14
 2263 0074 1C000000 		.4byte	.LFE14
 2264 0078 00000000 		.4byte	.LFB15
 2265 007c 8C000000 		.4byte	.LFE15
 2266 0080 00000000 		.4byte	.LFB16
 2267 0084 94000000 		.4byte	.LFE16
 2268 0088 00000000 		.4byte	.LFB17
 2269 008c 84000000 		.4byte	.LFE17
 2270 0090 00000000 		.4byte	0
 2271 0094 00000000 		.4byte	0
 2272              		.section	.debug_line,"",%progbits
 2273              	.Ldebug_line0:
 2274 0000 0C020000 		.section	.debug_str,"MS",%progbits,1
 2274      02004900 
 2274      00000201 
 2274      FB0E0D00 
 2274      01010101 
 2275              	.LASF12:
 2276 0000 75696E74 		.ascii	"uint16\000"
 2276      313600
 2277              	.LASF44:
 2278 0007 61646347 		.ascii	"adcGain\000"
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 56


 2278      61696E00 
 2279              	.LASF42:
 2280 000f 636F756E 		.ascii	"counts\000"
 2280      747300
 2281              	.LASF45:
 2282 0016 53636F70 		.ascii	"Scope0_ADC_SetScaledGain\000"
 2282      65305F41 
 2282      44435F53 
 2282      65745363 
 2282      616C6564 
 2283              	.LASF40:
 2284 002f 53636F70 		.ascii	"Scope0_ADC_SetOffset\000"
 2284      65305F41 
 2284      44435F53 
 2284      65744F66 
 2284      66736574 
 2285              	.LASF58:
 2286 0044 53636F70 		.ascii	"Scope0_ADC_shift\000"
 2286      65305F41 
 2286      44435F73 
 2286      68696674 
 2286      00
 2287              	.LASF8:
 2288 0055 6C6F6E67 		.ascii	"long long unsigned int\000"
 2288      206C6F6E 
 2288      6720756E 
 2288      7369676E 
 2288      65642069 
 2289              	.LASF34:
 2290 006c 53636F70 		.ascii	"Scope0_ADC_StartConvert\000"
 2290      65305F41 
 2290      44435F53 
 2290      74617274 
 2290      436F6E76 
 2291              	.LASF7:
 2292 0084 6C6F6E67 		.ascii	"long long int\000"
 2292      206C6F6E 
 2292      6720696E 
 2292      7400
 2293              	.LASF1:
 2294 0092 7369676E 		.ascii	"signed char\000"
 2294      65642063 
 2294      68617200 
 2295              	.LASF37:
 2296 009e 73746174 		.ascii	"status\000"
 2296      757300
 2297              	.LASF16:
 2298 00a5 696E7433 		.ascii	"int32\000"
 2298      3200
 2299              	.LASF43:
 2300 00ab 53636F70 		.ascii	"Scope0_ADC_SetGain\000"
 2300      65305F41 
 2300      44435F53 
 2300      65744761 
 2300      696E00
 2301              	.LASF5:
 2302 00be 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 57


 2302      20696E74 
 2302      00
 2303              	.LASF52:
 2304 00c7 53636F70 		.ascii	"Scope0_ADC_CountsTo_Volts\000"
 2304      65305F41 
 2304      44435F43 
 2304      6F756E74 
 2304      73546F5F 
 2305              	.LASF22:
 2306 00e1 72656731 		.ascii	"reg16\000"
 2306      3600
 2307              	.LASF11:
 2308 00e7 75696E74 		.ascii	"uint8\000"
 2308      3800
 2309              	.LASF28:
 2310 00ed 53636F70 		.ascii	"Scope0_ADC_Enable\000"
 2310      65305F41 
 2310      44435F45 
 2310      6E61626C 
 2310      6500
 2311              	.LASF50:
 2312 00ff 53636F70 		.ascii	"Scope0_ADC_CountsTo_uVolts\000"
 2312      65305F41 
 2312      44435F43 
 2312      6F756E74 
 2312      73546F5F 
 2313              	.LASF19:
 2314 011a 646F7562 		.ascii	"double\000"
 2314      6C6500
 2315              	.LASF13:
 2316 0121 75696E74 		.ascii	"uint32\000"
 2316      333200
 2317              	.LASF49:
 2318 0128 636F756E 		.ascii	"countsPer10Volt\000"
 2318      74735065 
 2318      72313056 
 2318      6F6C7400 
 2319              	.LASF61:
 2320 0138 433A5C55 		.ascii	"C:\\Users\\jthem\\Documents\\PSoC Creator\\PWMExamp"
 2320      73657273 
 2320      5C6A7468 
 2320      656D5C44 
 2320      6F63756D 
 2321 0166 6C653031 		.ascii	"le01\\EasyBoard_5LP.cydsn\000"
 2321      5C456173 
 2321      79426F61 
 2321      72645F35 
 2321      4C502E63 
 2322              	.LASF29:
 2323 017f 53636F70 		.ascii	"Scope0_ADC_Stop\000"
 2323      65305F41 
 2323      44435F53 
 2323      746F7000 
 2324              	.LASF36:
 2325 018f 7265744D 		.ascii	"retMode\000"
 2325      6F646500 
 2326              	.LASF0:
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 58


 2327 0197 756E7369 		.ascii	"unsigned int\000"
 2327      676E6564 
 2327      20696E74 
 2327      00
 2328              	.LASF51:
 2329 01a4 75566F6C 		.ascii	"uVolts\000"
 2329      747300
 2330              	.LASF6:
 2331 01ab 6C6F6E67 		.ascii	"long unsigned int\000"
 2331      20756E73 
 2331      69676E65 
 2331      6420696E 
 2331      7400
 2332              	.LASF53:
 2333 01bd 766F6C74 		.ascii	"volts\000"
 2333      7300
 2334              	.LASF4:
 2335 01c3 73686F72 		.ascii	"short unsigned int\000"
 2335      7420756E 
 2335      7369676E 
 2335      65642069 
 2335      6E7400
 2336              	.LASF14:
 2337 01d6 696E7438 		.ascii	"int8\000"
 2337      00
 2338              	.LASF39:
 2339 01db 53636F70 		.ascii	"Scope0_ADC_GetResult16\000"
 2339      65305F41 
 2339      44435F47 
 2339      65745265 
 2339      73756C74 
 2340              	.LASF48:
 2341 01f2 6D566F6C 		.ascii	"mVolts\000"
 2341      747300
 2342              	.LASF23:
 2343 01f9 72656733 		.ascii	"reg32\000"
 2343      3200
 2344              	.LASF17:
 2345 01ff 666C6F61 		.ascii	"float32\000"
 2345      74333200 
 2346              	.LASF9:
 2347 0207 73697A65 		.ascii	"sizetype\000"
 2347      74797065 
 2347      00
 2348              	.LASF56:
 2349 0210 53636F70 		.ascii	"Scope0_ADC_countsPerVolt\000"
 2349      65305F41 
 2349      44435F63 
 2349      6F756E74 
 2349      73506572 
 2350              	.LASF59:
 2351 0229 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2351      4320342E 
 2351      392E3320 
 2351      32303135 
 2351      30333033 
 2352 025c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 59


 2352      20726576 
 2352      6973696F 
 2352      6E203232 
 2352      31323230 
 2353 028f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2353      66756E63 
 2353      74696F6E 
 2353      2D736563 
 2353      74696F6E 
 2354              	.LASF31:
 2355 02b7 53636F70 		.ascii	"Scope0_ADC_SetResolution\000"
 2355      65305F41 
 2355      44435F53 
 2355      65745265 
 2355      736F6C75 
 2356              	.LASF20:
 2357 02d0 696E7436 		.ascii	"int64\000"
 2357      3400
 2358              	.LASF18:
 2359 02d6 666C6F61 		.ascii	"float\000"
 2359      7400
 2360              	.LASF32:
 2361 02dc 706F7765 		.ascii	"power\000"
 2361      7200
 2362              	.LASF21:
 2363 02e2 72656738 		.ascii	"reg8\000"
 2363      00
 2364              	.LASF2:
 2365 02e7 756E7369 		.ascii	"unsigned char\000"
 2365      676E6564 
 2365      20636861 
 2365      7200
 2366              	.LASF46:
 2367 02f5 53636F70 		.ascii	"Scope0_ADC_CountsTo_mVolts\000"
 2367      65305F41 
 2367      44435F43 
 2367      6F756E74 
 2367      73546F5F 
 2368              	.LASF3:
 2369 0310 73686F72 		.ascii	"short int\000"
 2369      7420696E 
 2369      7400
 2370              	.LASF24:
 2371 031a 53636F70 		.ascii	"Scope0_ADC_Start\000"
 2371      65305F41 
 2371      44435F53 
 2371      74617274 
 2371      00
 2372              	.LASF62:
 2373 032b 53636F70 		.ascii	"Scope0_ADC_GetResult8\000"
 2373      65305F41 
 2373      44435F47 
 2373      65745265 
 2373      73756C74 
 2374              	.LASF60:
 2375 0341 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Scope0_ADC.c\000"
 2375      6E657261 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 60


 2375      7465645F 
 2375      536F7572 
 2375      63655C50 
 2376              	.LASF25:
 2377 0367 53636F70 		.ascii	"Scope0_ADC_Init\000"
 2377      65305F41 
 2377      44435F49 
 2377      6E697400 
 2378              	.LASF33:
 2379 0377 7265736F 		.ascii	"resolution\000"
 2379      6C757469 
 2379      6F6E00
 2380              	.LASF55:
 2381 0382 53636F70 		.ascii	"Scope0_ADC_offset\000"
 2381      65305F41 
 2381      44435F6F 
 2381      66667365 
 2381      7400
 2382              	.LASF30:
 2383 0394 53636F70 		.ascii	"Scope0_ADC_SetPower\000"
 2383      65305F41 
 2383      44435F53 
 2383      6574506F 
 2383      77657200 
 2384              	.LASF10:
 2385 03a8 63686172 		.ascii	"char\000"
 2385      00
 2386              	.LASF41:
 2387 03ad 6F666673 		.ascii	"offset\000"
 2387      657400
 2388              	.LASF35:
 2389 03b4 53636F70 		.ascii	"Scope0_ADC_StopConvert\000"
 2389      65305F41 
 2389      44435F53 
 2389      746F7043 
 2389      6F6E7665 
 2390              	.LASF47:
 2391 03cb 61646343 		.ascii	"adcCounts\000"
 2391      6F756E74 
 2391      7300
 2392              	.LASF27:
 2393 03d5 656E6162 		.ascii	"enableInterrupts\000"
 2393      6C65496E 
 2393      74657272 
 2393      75707473 
 2393      00
 2394              	.LASF38:
 2395 03e6 53636F70 		.ascii	"Scope0_ADC_IsEndConversion\000"
 2395      65305F41 
 2395      44435F49 
 2395      73456E64 
 2395      436F6E76 
 2396              	.LASF63:
 2397 0401 53636F70 		.ascii	"Scope0_ADC_CalcGain\000"
 2397      65305F41 
 2397      44435F43 
 2397      616C6347 
ARM GAS  C:\Users\jthem\AppData\Local\Temp\ccId2g89.s 			page 61


 2397      61696E00 
 2398              	.LASF54:
 2399 0415 53636F70 		.ascii	"Scope0_ADC_initVar\000"
 2399      65305F41 
 2399      44435F69 
 2399      6E697456 
 2399      617200
 2400              	.LASF57:
 2401 0428 53636F70 		.ascii	"Scope0_ADC_countsPer10Volt\000"
 2401      65305F41 
 2401      44435F63 
 2401      6F756E74 
 2401      73506572 
 2402              	.LASF15:
 2403 0443 696E7431 		.ascii	"int16\000"
 2403      3600
 2404              	.LASF26:
 2405 0449 746D7052 		.ascii	"tmpReg\000"
 2405      656700
 2406              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
